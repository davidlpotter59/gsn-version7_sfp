%%                                  
/*
Date Written: July 10, 2013

Name: sfpup007_cpp.sd

Copyright (c) 2011, SCIPS.com Inc.

Modify
Date                   By                  Comment
--------------------------------------------------------------
09/12/2011            REL                 This program is for the interface with gsn.  i
                                          It will collect all field that gsn needs by policy_no on a location basis.
==============================================================
*/

Program
        Name         = "sfpup007_gsn_cpp";
        Type         = "File";
        Domain       = "dummy";
        Padcharacter = Space;

        array [30] of unsigned ascii number l_limit[9];

        array [4] of signed ascii number l_misc_premium[9];

        array [4] of signed ascii number l_prior_misc_premium[9] ;

        wdate l_eff_date,
              I_EFF_DATE,
              l_starting_date,
              l_prior_policy_eff_date,
              l_ending_date,
              l_retro_date,
              l_loss_cost_date ;

        wdate function get_previous_pol_eff_date();

        number function cal_num_vehicle (number,number,number);

        local file sfsline_by_subline = alias for sfsline;

        unsigned ascii number l_claims_count[4],
                              l_counter[6],
                              l_rmf_no[6]/dec=3,
                              l_inland_sub_code[4],
                              l_hold_sub_code_1[4],
                              l_total_limit[9],
                              l_location_end_sequence[4],
                              l_total_limit_1[9],
                              l_exposure[8],
                              l_total_limit_2[9],
                              l_prior_end_sequence[4],
                              l_previous_end_sequence[4],
                              l_missing_end_sequence[4],
                              l_coverage[1],
                              l_claim_count[4],
                              l_bpsclass_sub_code[4],
                              l_rateable_employees[4],
                              l_class_code[5],
                              l_prior_policy_number[9],
                              l_cppbusiness_only_once[1],
                              L_liability_is_policy_wide[1],
                              l_sfpend_forms_only_once[1],
                              l_calculate_money_once[1],
                              l_identity_theft[1],
                              l_type_of_policy[2],
                              l_hold_pol_year[4],
                              l_hold_end_sequence[4],
                              l_hold_policy_no[9],
                              l_hold_prem_no[4],
                              l_hold_build_no[4],
                              l_hold_line_of_business[4],
                              l_policy_no[9],
                              l_res_condo[1],
                              l_sfpend_premium[9],
                              l_prior_class_code[5],
                              l_no_locations_per_class_code[2],
                              l_pol_year[4],
                              l_end_sequence[4],
                              L_identity_theft_only_once[1],
                              l_prem_no[4],
                              l_build_no[4],
                              l_hired_only_once[1],
                              l_hiredcomp_only_once[1],
                              l_nonowned_only_once[1],
                              l_nonmedpay_only_once[1],
                              l_BRpip_only_once[1],
                              l_doc_only_once[1],
                              l_docliab_only_once[1] ,
                              l_nonliab_only_once[1],
                              l_package_only_once[1],
                              l_line_of_business[4],
                              l_state[2],
                              l_loop[2],
                              l_liability_code[2],
                              l_total_premium[9],
                              l_broadened_pip[9],
                              l_process_umbrella_once[1],
--                              l_year_built[4],
                              l_sub_code[4],
                              l_do_only_once[1],
                              l_misc[1] ,
                              l_prior_misc[1],
                              l_do_terrorism_only_once[1],
                              l_terrorism_only_once[1],
                              l_num_vehicle[4],
                              l_policy_suffix[3],
                              l_payment_plan[4];

        signed ascii number l_premium[9],
                            l_premium_1[9],
                            l_premium_2[9],
                            l_prior_cppgeneral_premium_1[9],
                            l_prior_cppgeneral_premium_2[9],
                            l_prior_cppgeneral_premium_3[9],
                            l_prior_cppgeneral_premium_4[9],
                            l_prior_cppgeneral_premium_5[9],
                            l_prior_cppgeneral_premium_6[9],
                            l_prior_cppgeneral_premium_7[9],
                            l_prior_cppgeneral_premium_8[9],
                            l_prior_cppgeneral_premium_9[9],
                            l_prior_cppgeneral_premium_10[9],
                            l_prior_cppgeneral_premium_11[9],
                            l_prior_cppgeneral_premium_12[9],
                            l_prior_cppproperty_premium[9],
                            l_prior_cppbusiness_premium_1[9],
                            l_prior_cppbusiness_premium_2[9],
                            l_prior_cppbusiness_premium_3[9],
                            l_prior_cppbusiness_premium_4[9],
                            l_prior_cppbusiness_premium_5[9],
                            l_prior_cppglass_premium[9],
                            l_cppinland_prior_premium[9],
                            l_cppinland_prior_total_premium[9],
                            l_cppcrime1_prior_premium_1[9],
                            l_cppcrime1_prior_premium_2[9],
                            l_cppcrime1_prior_total_premium[9],
                            l_boiler_prior_premium[9],
                            l_prior_mcl426_premium[9],
                            l_prior_mcl428_premium[9],
                            l_prior_mcl433_premium[9],
                            l_prior_bu2510_premium[9],
                            l_premises_prior_premium[9],
                            l_products_prior_premium[9],
                            l_diff[4],
                            l_previous_total[9],
                            l_diff_total[6],
                            l_mcl426_premium[8],
                            l_mcl428_premium[8],
                            l_mcl433_premium[8],
                            l_bu2510_premium[8],
                            l_save_premium[9],
                            l_annual_premium[9],
                            l_property_premium[9],
                            l_current_total_premium[9],
                            l_short_rate[4]=0/dec=2,
                            l_percent_of_prsmaster[6]/dec=4,
                            l_prsmaster_total[9]/dec=2;

        string l_fac_indicator[1],
               L_POLICY_INDICATOR[20],
               l_exposure_base[3],
               l_iso_prop_class_code[6],
               l_construction_year[4],
               l_line_type[1],
               l_code[7],
               l_iso_liab_class_code[5],
               l_iso_crime_class_code[5],
               l_deductible_str[2],
               l_state_exception_code[6],
               l_insured_name[152],
               l_building_deductible[6],
               l_deductible_pd[2],
               l_policy_limits[2],
               l_rating_id[1],
               l_iso_statement_line[3],
               l_prior_policy_number_prefix[5],
               l_bceg[6],
               l_new_subline[1],
               l_lob_subline[2],
               l_hold_lob_subline[2],
               l_wind_deductible[6],
               l_delete[1],
               l_company_id[10] = "",
               l_county_str[40],
               l_construction_class[6],
               l_construction_class_1[2],
               l_protection[6],
               l_iso_subline_code[3],
               l_protection1[6],
               l_coinsurance[1],
               l_coinsurance_percent[3],
               l_deductible[6],
               l_form_code[3],
               l_form_code_1[3],
               l_rate_group[1],
               l_limit_id[6],
               l_rmf[3],
               l_check_for_retro_date[1],
               l_liability_deductible[6],
               l_occupancy_type[2],
               l_site_description[100],
               l_subline[3],
               l_aslob[3],
               l_mcl426[1],
               l_mcl428[1],
               l_mcl433[1],
               l_bu2510[1],
               l_mcl426_policy_wide[1],
               l_mcl428_policy_wide[1],
               l_mcl433_policy_wide[1],
               l_bu2510_policy_wide[1],
               l_mcl426_first_time[1],
               l_mcl428_first_time[1],
               l_mcl433_first_time[1],
               l_bu2510_first_time[1],
               l_mcl426_first_time_prior[1],
               l_mcl428_first_time_prior[1],
               l_mcl433_first_time_prior[1],
               l_bu2510_first_time_prior[1],
               l_mcl426_first_time_1[1],
               l_mcl428_first_time_1[1],
               l_mcl433_first_time_1[1],
               l_bu2510_first_time_1[1],
               l_mcl426_first_time_1_prior[1],
               l_mcl428_first_time_1_prior[1],
               l_mcl433_first_time_1_prior[1],
               l_bu2510_first_time_1_prior[1],
               l_form[4],
               l_enter[1],
               l_iso_class_code[6],
               l_base_class_code[6],
               l_iso_sic_code[6],
               l_no_units[3],
               l_claims_made[2]="";

        include "prorata.var"

        include "sfsrevname.var"

initialization
l_STARTING_DATE     = Date(COMMANDLINE[1,8])
l_ENDING_DATE       = Date(COMMANDLINE[9,16])
l_hold_policy_no    = 0
l_hold_pol_year     = 0
l_hold_end_sequence = 0

access sfplocation,
   set sfplocation:policy_no = "", approximate

--do process_scips_premium_file

while sfplocation:errornumber = 0
  begin
    access sfpname,
       set sfpname:policy_no    = sfplocation:policy_no,
           sfpname:pol_year     = sfplocation:pol_year,
           sfpname:end_sequence = sfplocation:end_sequence, generic

    access sfsline,
       set sfsline:company_id       = sfpname:company_id,
           sfsline:line_of_business = sfpname:line_of_business,
           sfsline:lob_subline      = "00", generic

    access sfpmaster,
       set sfpmaster:policy_no    = sfplocation:policy_no,
           sfpmaster:pol_year     = sfplocation:pol_year,
           sfpmaster:end_sequence = sfplocation:end_sequence, generic

/*
if sfpmaster:policy_no one of 2300 then
{
  write ("<014>")
  write ("%c%s%n",01001,"sfpmaster:policy_no = ",sfpmaster:policy_no)
  write ("%c%s%s",03001,"sfsline:lob_code    = ",sfsline:lob_code)
  read (23,1,"Press Enter - Line 273  ",l_enter,1)
}
*/
    if sfsline:lob_code one of "LIABILITY", "PROPERTY", "SMP", "FARMFIRE", "CINLAND" then
        begin
        access sfppoint, set sfppoint:policy_no = sfpname:policy_no,
                             sfppoint:pol_year  = sfpname:pol_year, exact

        l_line_of_business  = sfpname:line_of_business
        l_company_id        = sfpname:company_id
        l_construction_year = str(sfplocation:YEAR_CONSTRUCTION)
        l_payment_plan      = sfpname:payment_plan

        if l_line_of_business one of 11 and
           len(trun(l_construction_year)) <= 3  then
          {
            l_construction_year = "N/A"
          }
        else
          if l_line_of_business one of 8,2 and
             len(trun(l_construction_year)) <= 3  then
            {
              l_construction_year = "Unknown"
            }
/*
if sfpmaster:policy_no one of 2300 then
{
  write ("<014>")
  write ("%c%s%n",01001,"sfpmaster:policy_no           = ",sfpmaster:policy_no)
  write ("%c%s%s",03001,"sfsline:lob_code              = ",sfsline:lob_code)
  write ("%c%s%d",04001,"sfpmaster:premium_trans_date  = ",sfpmaster:PREMIUM_TRANS_DATE)
  write ("%c%s%d",05001,"sfpmaster:trans_eff           = ",sfpmaster:trans_eff)
  write ("%c%s%d",06001,"sfpmaster:trans_eff           = ",sfpmaster:trans_eff)
  write ("%c%s%d",07001,"sfpname:eff_date              = ",sfpname:eff_date)
  write ("%c%s%s",08001,"sfppoint:converted            = ",sfppoint:converted)
  write ("%c%s%n",09001,"sfppoint:end_sequence         = ",sfppoint:end_sequence)
  read (23,1,"Press Enter - Line 273  ",l_enter,1)
}
*/
        access sfscompany,
           set sfscompany:company_id = sfpname:company_id , exact

        If (((sfpmaster:PREMIUM_TRANS_DATE < l_starting_date and
              sfpmaster:trans_eff => l_starting_date and
              sfpmaster:trans_eff <= l_ending_date) or

             (sfpmaster:PREMIUM_TRANS_DATE => l_starting_date and
              sfpmaster:PREMIUM_TRANS_DATE <= l_ending_date and
              sfpmaster:trans_eff <= l_ending_date)) and

              sfpmaster:policy_no    = sfplocation:policy_no and
              sfpmaster:pol_year     = sfplocation:pol_year and
              sfpmaster:end_sequence = sfplocation:end_sequence and
              sfpmaster:trans_code < 17) and
              sfpname:eff_date >= 11.20.2018 then
            begin

/*
if sfpmaster:policy_no one of 2300 then
{
  write ("<014>")
  write ("%c%s%n",01001,"sfpmaster:policy_no           = ",sfpmaster:policy_no)
  write ("%c%s%s",03001,"sfsline:lob_code              = ",sfsline:lob_code)
  write ("%c%s%d",04001,"sfpmaster:premium_trans_date  = ",sfpmaster:PREMIUM_TRANS_DATE)
  write ("%c%s%d",05001,"sfpmaster:trans_eff           = ",sfpmaster:trans_eff)
  write ("%c%s%d",06001,"sfpmaster:trans_eff           = ",sfpmaster:trans_eff)
  write ("%c%s%d",07001,"sfpname:eff_date              = ",sfpname:eff_date)
  write ("%c%s%s",08001,"sfppoint:converted            = ",sfppoint:converted)
  write ("%c%s%n",09001,"sfppoint:end_sequence         = ",sfppoint:end_sequence)
  read (23,1,"Press Enter - Line 273  ",l_enter,1)
}
*/
            l_policy_no    = sfplocation:policy_no
            l_pol_year     = sfplocation:pol_year
            l_end_sequence = sfplocation:end_sequence
            l_build_no     = sfplocation:build_no
            l_prem_no      = sfplocation:prem_no
            l_payment_plan = sfpname:payment_plan

            write("<014>")
            write("%c%n",1005,l_policy_no)

            if (sfppoint:converted one of "Y" or
               (sfppoint:converted one of "N" and
               sfpmaster:end_sequence < sfppoint:end_sequence)) then
                begin
                if l_hold_policy_no    <> l_policy_no or
                   l_hold_pol_year     <> l_pol_Year or
                   l_hold_end_sequence <> l_end_sequence then
                    begin
                    l_mcl426_first_time = "Y"
                    l_mcl428_first_time = "Y"
                    l_mcl433_first_time = "Y"
                    l_bu2510_first_time = "Y"
                    l_mcl426_first_time_1 = "Y"
                    l_mcl428_first_time_1 = "Y"
                    l_mcl433_first_time_1 = "Y"
                    l_bu2510_first_time_1 = "Y"
                    l_mcl426_first_time_prior = "Y"
                    l_mcl428_first_time_prior = "Y"
                    l_mcl433_first_time_prior = "Y"
                    l_bu2510_first_time_prior = "Y"
                    l_mcl426_first_time_1_prior = "Y"
                    l_mcl428_first_time_1_prior = "Y"
                    l_mcl433_first_time_1_prior = "Y"
                    l_bu2510_first_time_1_prior = "Y"
                    for l_loop = 1 to 30
                        begin
                        l_limit[l_loop] = 0
                        end
                    end

                if l_build_no     <> sfplocation:build_no or
                   l_prem_no      <> sfplocation:prem_no or
                   l_end_sequence <> sfplocation:end_sequence then
                    begin
                    l_sub_code = 0
                    end

                access gsn_master, set gsn_master:policy_no        = sfplocation:policy_no,
                                         gsn_master:pol_year         = sfplocation:pol_year,
                                         gsn_master:end_sequence     = sfplocation:end_sequence,
                                         gsn_master:prem_no          = sfplocation:prem_no,
                                         gsn_master:build_no         = sfplocation:build_no,
                                         gsn_master:line_of_business = l_line_of_business, generic

                if gsn_master:policy_no        <> sfplocation:policy_no or
                   gsn_master:pol_year         <> sfplocation:pol_year or
                   gsn_master:end_sequence     <> sfplocation:end_sequence or
                   gsn_master:prem_no          <> sfplocation:prem_no or
                   gsn_master:build_no         <> sfplocation:build_no or
                   gsn_master:line_of_business <> l_line_of_business then
                    begin
                    l_delete = "N"
                    l_end_sequence = sfplocation:end_sequence
                    access sfpmaster,
                       set sfpmaster:policy_no    = sfplocation:policy_no,
                           sfpmaster:pol_year     = sfplocation:pol_year,
                           sfpmaster:end_sequence = l_end_sequence, generic

                    do add_to_gsn_master
                    end

                end

            end

        end

    next sfplocation
    end

do process_gsn_master_premium_by_subline
do check_diffence_between_files

update

procedure definition

procedure check_diffence_between_files
BEGIN
access gsn_master_premium, set gsn_master_premium:company_id = "", approximate

while gsn_master_premium:errornumber = 0
    begin
    if ((gsn_master_premium:trans_date < l_starting_date and
         gsn_master_premium:trans_eff => l_starting_date and
         gsn_master_premium:trans_eff <= l_ending_date) or
        (gsn_master_premium:trans_date => l_starting_date and
         gsn_master_premium:trans_date <= l_ending_date and
         gsn_master_premium:trans_eff <= l_ending_date) and
         gsn_master_premium:line_of_business one of 2,8,10,11,13) then
        begin
        access gsn_master_compare,
           set gsn_master_compare:company_id       = l_company_id,
               gsn_master_compare:policy_no        = gsn_master_premium:policy_no,
               gsn_master_compare:pol_year         = gsn_master_premium:pol_year,
               gsn_master_compare:end_sequence     = gsn_master_premium:end_sequence,
               gsn_master_compare:line_of_business = gsn_master_premium:line_of_business,
               gsn_master_compare:lob_subline      = gsn_master_premium:lob_subline,
               gsn_master_compare:trans_date       = gsn_master_premium:trans_date,
               gsn_master_compare:trans_code       = gsn_master_premium:trans_code, exact

        if gsn_master_compare:company_id       = l_company_id and
           gsn_master_compare:policy_no        = gsn_master_premium:policy_no and
           gsn_master_compare:pol_year         = gsn_master_premium:pol_year and
           gsn_master_compare:end_sequence     = gsn_master_premium:end_sequence and
           gsn_master_compare:line_of_business = gsn_master_premium:line_of_business and
           gsn_master_compare:lob_subline      = gsn_master_premium:lob_subline and
           gsn_master_compare:trans_date       = gsn_master_premium:trans_date and
           gsn_master_compare:trans_code       = gsn_master_premium:trans_code then
            begin
            if gsn_master_compare:premium <> gsn_master_premium:premium then
                begin
                access gsn_master, set gsn_master:policy_no        = gsn_master_compare:policy_no,
                                         gsn_master:pol_year         = gsn_master_compare:pol_year,
                                         gsn_master:end_sequence     = gsn_master_compare:end_sequence,
                                         gsn_master:prem_no          = gsn_master_compare:prem_no,
                                         gsn_master:build_no         = gsn_master_compare:build_no,
                                         gsn_master:line_of_business = gsn_master_compare:line_of_business,
                                         gsn_master:lob_subline      = gsn_master_compare:lob_subline,
                                         gsn_master:line_type        = gsn_master_compare:line_type,
                                         gsn_master:sub_code         = gsn_master_compare:sub_code, exact

                if gsn_master:policy_no        = gsn_master_compare:policy_no and
                   gsn_master:pol_year         = gsn_master_compare:pol_year and
                   gsn_master:end_sequence     = gsn_master_compare:end_sequence and
                   gsn_master:prem_no          = gsn_master_compare:prem_no and
                   gsn_master:build_no         = gsn_master_compare:build_no and
                   gsn_master:line_of_business = gsn_master_compare:line_of_business and
                   gsn_master:lob_subline      = gsn_master_compare:lob_subline and
                   gsn_master:line_type        = gsn_master_compare:line_type and
                   gsn_master:sub_code         = gsn_master_compare:sub_code and
                   gsn_master:line_of_business one of 2,8,10,11,13 then
                  begin
                    l_diff_total = gsn_master_premium:premium - gsn_master_compare:premium
                    change gsn_master
                        begin
                        gsn_master:premium = gsn_master:premium + l_diff_total
                        end
                  end

                end

            end
        end

    next gsn_master_premium
    end

END

procedure process_gsn_master_premium_by_subline
BEGIN
local file gsn_master_just_added = alias for gsn_master;

l_company_id = "GGUND"

access gsn_master_just_added, set gsn_master_just_added:policy_no = "", generic

while gsn_master_just_added:errornumber = 0
    begin
    if (((gsn_master_just_added:trans_date     < l_starting_date and
          gsn_master_just_added:trans_eff_date => l_starting_date and
          gsn_master_just_added:trans_eff_date <= l_ending_date) or

        (gsn_master_just_added:trans_date     => l_starting_date and
         gsn_master_just_added:trans_date     <= l_ending_date and
         gsn_master_just_added:trans_eff_date <= l_ending_date)) and

         gsn_master_just_added:trans_code < 17 and
         gsn_master_just_added:line_of_business one of 2,8,10,11,13) then

        begin
        access gsn_master_compare, set gsn_master_compare:company_id       = l_company_id,
                                         gsn_master_compare:policy_no        = gsn_master_just_added:policy_no,
                                         gsn_master_compare:pol_year         = gsn_master_just_added:pol_year,
                                         gsn_master_compare:end_sequence     = gsn_master_just_added:end_sequence,
                                         gsn_master_compare:line_of_business = gsn_master_just_added:line_of_business,
                                         gsn_master_compare:lob_subline      = gsn_master_just_added:lob_subline,
                                         gsn_master_compare:trans_date       = gsn_master_just_added:trans_date,
                                         gsn_master_compare:trans_code       = gsn_master_just_added:trans_code, exact

        if gsn_master_compare:company_id       <> l_company_id or
           gsn_master_compare:policy_no        <> gsn_master_just_added:policy_no or
           gsn_master_compare:pol_year         <> gsn_master_just_added:pol_year or
           gsn_master_compare:end_sequence     <> gsn_master_just_added:end_sequence or
           gsn_master_compare:line_of_business <> gsn_master_just_added:line_of_business or
           gsn_master_compare:lob_subline      <> gsn_master_just_added:lob_subline or
           gsn_master_compare:trans_date       <> gsn_master_just_added:trans_date or
           gsn_master_compare:trans_code       <> gsn_master_just_added:trans_code then
            begin
              add gsn_master_compare
                begin
                gsn_master_compare:company_id       = l_company_id
                gsn_master_compare:policy_no        = gsn_master_just_added:policy_no
                gsn_master_compare:pol_year         = gsn_master_just_added:pol_year
                gsn_master_compare:end_sequence     = gsn_master_just_added:end_sequence
                gsn_master_compare:line_of_business = gsn_master_just_added:line_of_business
                gsn_master_compare:lob_subline      = gsn_master_just_added:lob_subline
                gsn_master_compare:trans_date       = gsn_master_just_added:trans_date
                gsn_master_compare:trans_code       = gsn_master_just_added:trans_code
                gsn_master_compare:TRANS_EFF        = gsn_master_just_added:TRANS_EFF_DATE
                gsn_master_compare:EFF_DATE         = gsn_master_just_added:POLICY_EFF_DATE
                gsn_master_compare:prem_no          = gsn_master_just_added:prem_no
                gsn_master_compare:build_no         = gsn_master_just_added:BUILD_NO
                gsn_master_compare:sub_code         = gsn_master_just_added:sub_code
                gsn_master_compare:premium          = gsn_master_just_added:premium
                gsn_master_compare:line_type        = gsn_master_just_added:line_type
               end
            end
        else
        if gsn_master_compare:company_id       = l_company_id and
           gsn_master_compare:policy_no        = gsn_master_just_added:policy_no and
           gsn_master_compare:pol_year         = gsn_master_just_added:pol_year and
           gsn_master_compare:end_sequence     = gsn_master_just_added:end_sequence and
           gsn_master_compare:line_of_business = gsn_master_just_added:line_of_business and
           gsn_master_compare:lob_subline      = gsn_master_just_added:lob_subline and
           gsn_master_compare:trans_date       = gsn_master_just_added:trans_date and
           gsn_master_compare:trans_code       = gsn_master_just_added:trans_code and
           gsn_master_compare:trans_eff        = gsn_master_just_added:trans_eff_date and
           gsn_master_compare:eff_date         = gsn_master_just_added:policy_eff_date then
            begin
            change gsn_master_compare
                begin
                gsn_master_compare:company_id       = l_company_id
                gsn_master_compare:policy_no        = gsn_master_just_added:policy_no
                gsn_master_compare:pol_year         = gsn_master_just_added:pol_year
                gsn_master_compare:end_sequence     = gsn_master_just_added:end_sequence
                gsn_master_compare:line_of_business = gsn_master_just_added:line_of_business
                gsn_master_compare:lob_subline      = gsn_master_just_added:lob_subline
                gsn_master_compare:trans_date       = gsn_master_just_added:trans_date
                gsn_master_compare:trans_code       = gsn_master_just_added:trans_code
                gsn_master_compare:TRANS_EFF        = gsn_master_just_added:TRANS_EFF_DATE
                gsn_master_compare:EFF_DATE         = gsn_master_just_added:POLICY_EFF_DATE
                gsn_master_compare:prem_no          = gsn_master_just_added:prem_no
                gsn_master_compare:build_no         = gsn_master_just_added:BUILD_NO
                gsn_master_compare:sub_code         = gsn_master_just_added:sub_code
                gsn_master_compare:premium          = gsn_master_compare:premium + gsn_master_just_added:premium
                gsn_master_compare:line_type        = gsn_master_just_added:line_type
                end
            end

        end

    next gsn_master_just_added
    end

END

procedure process_scips_premium_file
BEGIN
local unsigned ascii number l_count_change[8];

access prsmaster, set prsmaster:company_id = "", generic

while prsmaster:errornumber = 0
    begin
    if (((prsmaster:trans_date < l_starting_date and
          prsmaster:trans_eff => l_starting_date and
          prsmaster:trans_eff <= l_ending_date) or

         (prsmaster:trans_date => l_starting_date and
          prsmaster:trans_date <= l_ending_date and
          prsmaster:trans_eff <= l_ending_date)) and

          prsmaster:trans_eff <> prsmaster:trans_exp and
          prsmaster:trans_code < 17 and
          prsmaster:line_of_business one of 2,8,10,11,13) then
        begin
        access gsn_master_premium, set gsn_master_premium:company_id        = prsmaster:company_id,
                                         gsn_master_premium:policy_no        = prsmaster:policy_no,
                                         gsn_master_premium:pol_year         = prsmaster:pol_year,
                                         gsn_master_premium:end_sequence     = prsmaster:end_sequence,
                                         gsn_master_premium:line_of_business = prsmaster:line_of_business,
                                         gsn_master_premium:lob_subline      = prsmaster:lob_subline,
                                         gsn_master_premium:trans_date       = prsmaster:trans_date,
                                         gsn_master_premium:trans_code       = prsmaster:trans_code, exact

        if gsn_master_premium:company_id       <> prsmaster:company_id or
           gsn_master_premium:policy_no        <> prsmaster:policy_no or
           gsn_master_premium:pol_year         <> prsmaster:pol_year or
           gsn_master_premium:end_sequence     <> prsmaster:end_sequence or
           gsn_master_premium:line_of_business <> prsmaster:line_of_business or
           gsn_master_premium:lob_subline      <> prsmaster:lob_subline or
           gsn_master_premium:trans_date       <> prsmaster:trans_date or
           gsn_master_premium:trans_code       <> prsmaster:trans_code then
            begin
            add gsn_master_premium
                begin
                gsn_master_premium:company_id       = prsmaster:company_id
                gsn_master_premium:policy_no        = prsmaster:policy_no
                gsn_master_premium:pol_year         = prsmaster:pol_year
                gsn_master_premium:end_sequence     = prsmaster:end_sequence
                gsn_master_premium:line_of_business = prsmaster:line_of_business
                gsn_master_premium:lob_subline      = prsmaster:lob_subline
                gsn_master_premium:trans_date       = prsmaster:trans_date
                gsn_master_premium:trans_code       = prsmaster:trans_code
                gsn_master_premium:trans_eff        = prsmaster:trans_eff
                gsn_master_premium:eff_date         = prsmaster:eff_date
                gsn_master_premium:premium          = prsmaster:premium
        --        gsn_master_premium:iso_CF_year_of_construction      = l_construction_year
        --        gsn_master_premium:iso_bop_year_of_construction      = "N/A"
                end
            end
        else
            begin
            change gsn_master_premium
                begin
                gsn_master_premium:company_id       = prsmaster:company_id
                gsn_master_premium:policy_no        = prsmaster:policy_no
                gsn_master_premium:pol_year         = prsmaster:pol_year
                gsn_master_premium:end_sequence     = prsmaster:end_sequence
                gsn_master_premium:line_of_business = prsmaster:line_of_business
                gsn_master_premium:lob_subline      = prsmaster:lob_subline
                gsn_master_premium:trans_date       = prsmaster:trans_date
                gsn_master_premium:trans_code       = prsmaster:trans_code
                gsn_master_premium:trans_eff        = prsmaster:trans_eff
                gsn_master_premium:eff_date         = prsmaster:eff_date
                gsn_master_premium:premium          = gsn_master_premium:premium + prsmaster:premium
      --          gsn_master_premium:iso_CF_year_of_construction      = l_construction_year
      --          gsn_master_premium:iso_bop_year_of_construction      = "N/A"
                end

            l_count_change = l_count_change + 1
            end

        end

    next prsmaster
    end

END

procedure check_for_minimum_premium
BEGIN
local file sfpmaster_minimum  = alias for sfpmaster;
local file sfpname_minimum  = alias for sfpname;
local unsigned ascii number l_do_only_once[1];
local wdate l_minimum_date;
local unsigned ascii number l_count = 0;

access sfscontrol, set sfscontrol:company_id       = l_company_id,
                       sfscontrol:state            = l_state,
                       sfscontrol:line_of_business = l_line_of_business, generic

while sfscontrol:company_id        = l_company_id and
      sfscontrol:state             = l_state and
      sfscontrol:line_of_business  = l_line_of_business
    begin
    if sfscontrol:eff_date <= sfpname:eff_date then
        begin
        l_minimum_date =  sfscontrol:eff_date
        end

    next sfscontrol
    end

END

Procedure get_liability
BEGIN
access cppliability, set cppliability:policy_no     = sfplocation:policy_no,
                         CPPLIABility:pol_year      = sfplocation:pol_year,
                         CPPLIABility:end_sequence  = sfplocation:end_sequence,
                         cppliability:prem_no       = sfplocation:prem_no,
                         cppliability:build_no      = sfplocation:build_No, generic

END

procedure check_if_claim_was_made(number p_policy_no,rwdate p_eff_date,rwdate p_exp_date)
BEGIN
access lrssetup, set lrssetup:policy_no  = p_policy_no, exact

l_claims_count = 0
while lrssetup:policy_no = p_policy_no
    begin
    if lrssetup:loss_date >= p_eff_date and
       lrssetup:loss_date <= p_exp_date  then
        begin
        l_claim_count = l_claim_count + 1
        end

    next lrssetup
    end

END

procedure check_for_fac    --the is fac reinsurance
BEGIN
l_fac_indicator = "N"
if sfpname:reinsurance = "Y" then
    begin
    l_fac_indicator = "Y"
    end

END

procedure check_for_county(number p_state, number p_county)
BEGIN
unsigned ascii number l_state[2] = p_state ;
unsigned ascii number l_county[3] = p_county;

access sfsstate, set sfsstate:company_id = sfpname:company_id,
                     sfsstate:state      = l_state,
                    sfsstate:county     = l_county, generic

l_county_str  = SFSSTATE:DESCRIPTION
END

procedure fill_in_locals_by_LOB
BEGIN
unsigned ascii number l_loop[2];
l_construction_class  = "N/A"
l_deductible          = ""
l_occupancy_type      = ""
l_no_units            = ""
l_premium             = 0
l_property_premium    = 0
l_building_deductible = ""
l_wind_deductible     = ""
l_form                = ""
l_liability_code      = 0
l_coinsurance         = ""
l_coinsurance_percent = ""
l_protection          = ""

for l_loop = 1 to 30
    begin
    l_limit[l_loop]   = 0
    end

switch (sfsline:lob_code)
  case "SMP","PROPERTY" : BEGIN
                          l_construction_class = str(cppgeneral:construction)
                          l_deductible         = str(cppgeneral:DEDUCTIBLE)
                          if cppgeneral:res_condo = 1 then
                              begin
                              l_res_condo = 1
                              end
                          else
                              begin
                              l_res_condo = 0
                              end
                          l_occupancy_type     = "0"
                          l_no_units           = "1"
                          l_wind_deductible    = str(cppgeneral:wind_deductible)
                          l_form               = str(sfpmaster:form)
                          l_liability_code     = sfpmaster:liability_code
                          l_coinsurance_percent = str(cppgeneral:coinsurance)
                          l_claims_made        = "NA"
                          switch(cppgeneral:coinsurance)
                            case 80 : l_coinsurance = "4"
                            case 90 : l_coinsurance = "5"
                            default : l_coinsurance = "6"
                            end
                          l_protection         = str(cppgeneral:protection)
                          l_limit[11]          = cppliablimits:OCCURRENCE
                          l_limit[12]          = cppliablimits:general_aggregate
                          l_limit[13]          = cppliablimits:products
                          l_limit[14]          = cppliablimits:medical_payments
                          l_limit[15]          = cppliablimits:fire_legal
                          l_limit[16]          = cppliablimits:ADVERTISING_PERSONAL_INJURY
                          l_limit[4] = 0
                          l_limit[5] = 0
                          l_limit[6] = 0
                          l_limit[7] = 0
                          l_limit[8] = 0
                          l_limit[9] = 0

                          access sfsliability, set sfsliability:company_id       = l_company_id,
                                                   sfsliability:state            = l_state,
                                                   sfsliability:line_of_business = l_line_of_business,
                                                   sfsliability:liability_code   = l_liability_code, generic

                          END
  case "LIABILITY" : BEGIN
                     do get_liability
                     l_construction_class = "N/A"
                     l_deductible         = str(sfpMASTER:DEDUCTIBLE)
                     l_occupancy_type     = "0"
                     l_form               = str(sfpmaster:form)
-- added 02/24/2016 for claims made
                     l_claims_made = "OC"
                     if cppliablimits:retro_date <> 00.00.0000
                     {
                        l_claims_made = "CM"
                     }

                     l_limit[11]          = cppliablimits:OCCURRENCE
                     l_limit[12]          = cppliablimits:general_aggregate
                     l_limit[13]          = cppliablimits:products
                     l_limit[14]          = cppliablimits:medical_payments
                     l_limit[15]          = cppliablimits:fire_legal
                     l_limit[16]          = cppliablimits:ADVERTISING_PERSONAL_INJURY
                     l_liability_code     = sfpmaster:liability_code
                     l_protection         = str(cppgeneral:protection)
                     access sfsliability, set sfsliability:company_id       = l_company_id,
                                              sfsliability:state            = l_state,
                                              sfsliability:line_of_business = l_line_of_business,
                                              sfsliability:liability_code   = l_liability_code, generic
                     l_limit[1] = 0
                     l_limit[2] = 0
                     l_limit[3] = 0
                     l_limit[4] = 0
                     l_limit[5] = 0
                     l_limit[6] = 0
                     l_limit[7] = 0
                     l_limit[8] = 0
                     l_limit[9] = 0
                     l_limit[10] = 0

                     l_limit[17] = 0
                     l_limit[18] = 0
                     l_limit[19] = 0
                     l_limit[20] = 0
                     l_limit[21] = 0
                     l_limit[22] = 0
                     l_limit[23] = 0
                     l_limit[24] = 0
                     l_limit[25] = 0
                     l_limit[26] = 0
                     l_limit[27] = 0
                     l_limit[28] = 0
                     l_limit[29] = 0
                     l_limit[29] = 0
                     l_limit[30] = 0
                     l_res_condo = 0
                     END
  end

END

procedure add_to_gsn_master

BEGIN
local file cppliability_all_locations  = alias for cppliability;

unsigned ascii number l_add_products[1],
                      l_add_premise[1],
                      l_add_crime[1],
                      l_add_inland[1],
                      l_add_glass[1],
                      l_stored_loc[2],
                      l_add_irpm_only_once[1];

string l_crime_form[1];

access sfsdefault, set sfsdefault:sfs_code = "SFS", exact

if l_hold_policy_no    <> l_policy_no or
   l_hold_pol_year     <> l_pol_Year or
   l_hold_end_sequence <> l_end_sequence then
    begin
    if (l_hold_policy_no <> l_policy_no and
       l_hold_policy_no <> 0) or
       (l_hold_end_sequence <> l_end_sequence and
       l_hold_policy_no = l_policy_no) then
        begin
        do check_for_minimum_premium
        do check_for_deleted_location
        end

    --calculate the prsmaster:total and sfplocation:totals
    l_current_total_premium    = 0
    L_identity_theft_only_once = 0
    l_terrorism_only_once      = 0
    l_sfpend_forms_only_once = 0
    l_percent_of_prsmaster   = 0
    l_hold_policy_no         = l_policy_no
    l_hold_pol_Year          = l_pol_year
    l_hold_end_sequence      = l_end_sequence
    l_hold_prem_no           = l_prem_no
    l_hold_build_no          = l_build_no
    l_hold_line_of_business  = l_line_of_business
    l_hold_lob_subline       = l_lob_subline
    l_sub_code               = 0
    l_do_only_once           = 0
    l_calculate_money_once   = 0
    l_do_terrorism_only_once = 0
    l_misc                   = 0
    l_prior_misc             = 0
    l_liability_deductible   = ""
    l_deductible             = ""
    l_iso_statement_line     = ""
    l_county_str             = ""
    l_process_umbrella_once  = 0
    l_liability_is_policy_wide = 0  --used for contractors to only total liabiity once
    l_identity_theft = 0            --used for contractors to only total theft once
    end

switch (sfpmaster:trans_code)
  case 10 : l_policy_indicator = "NEW"
  case 11 : l_policy_indicator = "CANCELLED"
  case 12 : l_policy_indicator = "INCREASE COVERAGE"
  case 13 : l_policy_indicator = "DECREASE COVERAGE"
  case 14 : BEGIN
            if sfpname:eff_date >= 12.01.2018 then
                l_policy_indicator = "RENEWAL"
            else
                l_policy_indicator = "NEW"
            END
  case 15 : l_policy_indicator = "AUDIT"
  case 16 : l_policy_indicator = "REINSTATEMENT"
  END

do check_if_claim_was_made(sfpname:policy_no,sfpname:eff_date, sfpname:exp_date)
do check_for_fac

switch (sfsline:lob_code)
  case "SMP","PROPERTY","CINLAND" : BEGIN
                                    access CPPLIABLIMITS, set CPPLIABLIMITS:policy_no    = l_policy_no,
                                                              CPPLIABLIMITS:pol_year     = l_pol_year,
                                                              CPPLIABLIMITS:end_sequence = l_end_sequence,exact

                                    do get_correct_state_and_county
                                    do fill_in_locals_by_LOB
                                    end
  case "LIABILITY" : BEGIN
                     do get_liability
                     do check_for_county(cppLIABILITY:state,cppLIABILITY:county)
                     l_state = cppgeneral:state
                     l_type_of_policy = 10
                     do fill_in_locals_by_LOB
                     END
  END

  do check_for_claims_made

access sfsline_by_subline, set sfsline_by_subline:company_id       = sfsline:company_id,
                               sfsline_by_subline:line_of_business = sfsline:line_of_business, generic

while sfsline_by_subline:company_id       = sfsline:company_id and
      sfsline_by_subline:line_of_business = sfsline:line_of_business
    begin
    l_lob_subline = sfsline_by_subline:lob_subline
    access sfsline2, set sfsline2:Company_id       = sfpname:company_id,
                         sfsline2:line_of_business = sfpname:line_of_business,
                         sfsline2:lob_subline      = l_lob_subline , exact

    do collect_misc_premium
    do access_sfpmisc_prior

    switch (sfsline_by_subline:lob_code)
      case "FIRE"  : begin
                     l_premium               = 0
                     l_prior_cppgeneral_premium_1 = 0
                     l_cppbusiness_only_once = 0
                     l_bceg                  = "X"
                     l_loss_cost_date        = 01.01.2010
                     access cppgeneral,
                        set cppgeneral:policy_no    = l_policy_no,
                            cppgeneral:pol_year     = l_pol_year,
                            cppgeneral:end_sequence = l_end_sequence,
                            cppgeneral:prem_no      = l_prem_no,
                            cppgeneral:build_no     = l_build_no, generic

--                     do collect_misc_premium
--                     l_premium = l_misc_premium[1]
--                     do access_sfpmisc_prior
--                     l_prior_cppgeneral_premium_1 = l_prior_misc_premium[1]
                     while cppgeneral:policy_no    = l_policy_no and
                           cppgeneral:pol_year     = l_pol_year and
                           cppgeneral:end_sequence = l_end_sequence and
                           cppgeneral:prem_no      = l_prem_no and
                           cppgeneral:build_no     = l_build_no
                        begin
                        l_premium = 0
                        l_prior_cppgeneral_premium_1 = 0
                        if l_premium = 0 and
                           l_misc_premium[1] <> 0 then
                            begin
                            l_premium = l_misc_premium[1]
                            l_misc_premium[1] = 0
                            end
                        if l_prior_cppgeneral_premium_1 = 0 and
                           l_prior_misc_premium[1] <> 0 then
                            begin
                            l_prior_cppgeneral_premium_1 = l_prior_misc_premium[1]
                            l_prior_misc_premium[1] = 0
                            end

                        if sfpmaster:trans_code one of 12, 13, 15 then
                            do access_cppgeneral_prior

                        l_construction_class = str(cppgeneral:construction)
                        if cppgeneral:res_condo = 1 then
                          begin
                            l_res_condo = 1
                          end
                        else
                          begin
                            l_res_condo = 0
                          end
                        l_occupancy_type     = "0"
                        l_no_units           = "1"
                        l_wind_deductible    = str(cppgeneral:wind_deductible)
                        l_form               = str(sfpmaster:form)
                        l_liability_code     = sfpmaster:liability_code
                        l_coinsurance_percent = str(cppgeneral:coinsurance)
                        switch(cppgeneral:coinsurance)
                          case 80 : l_coinsurance = "4"
                          case 90 : l_coinsurance = "5"
                          default : l_coinsurance = "6"
                          end
                        if sfsline:lob_code one of "SMP" then
                            begin
                            switch(cppgeneral:cmp_symbol)
                              case "H" : l_type_of_policy = 71
                              case "A" : l_type_of_policy = 72
                              case "O" : l_type_of_policy = 73
                              case "M" : l_type_of_policy = 74
                              case "I" : l_type_of_policy = 75
                              case "S" : l_type_of_policy = 76
                              case "P" : l_type_of_policy = 77
                              case "C" : l_type_of_policy = 78
                              default   : l_type_of_policy = 72
                              end
                            end
                        else
                            l_type_of_policy = 10
                        switch(cppgeneral:cmp_symbol)
                          case "A" : l_rate_group = "A"
                          case "C" : l_rate_group = "B"
                          case "P" : l_rate_group = "C"
                          case "I" : l_rate_group = "D"
                          case "M" : l_rate_group = "E"
                          case "H" : l_rate_group = "F"
                          case "O" : l_rate_group = "G"
                          case "S" : l_rate_group = "H"
                          default  : l_rate_group = "A"
                          end
                        l_rmf_no = cppgeneral:package_mod[1] *
                                   cppgeneral:multi_location_credit

                        l_rmf = str(l_rmf_no)

                        do check_for_county(cppgeneral:state,cppgeneral:county)
--                        l_misc_premium[1] = 0  --so it only add on the first location
--                        l_prior_misc_premium[1] = 0
                        l_loop = 1
                        do access_cpsclass(cppgeneral:state,cppgeneral:group_no,cppgeneral:sub_group,cppgeneral:property_class_code,cppgeneral:sub_code)
                        l_class_code = cppgeneral:property_class_code
                        if trun(l_iso_prop_class_code) = "" then
                          begin
                            do access_cpstransitional(cppgeneral:state,cppgeneral:group_no,cppgeneral:sub_group,cppgeneral:property_class_code,cppgeneral:sub_code)
                          end

                        l_iso_class_code = l_iso_prop_class_code

                        l_base_class_code = l_iso_class_code
                        do access_cppproperty
                        if cppgeneral:blanket = 0 then
                          begin
                            if cppgeneral:limit[1] <> 0 then
                                begin
                                l_coverage   = 1
                                if cppgeneral:sprinklered = 1 then
                                    l_rating_id = "4"
                                else
                                if cppgeneral:file_no <> "" then
                                    l_rating_id = "1"
                                else
                                    l_rating_id = "2"
                                l_deductible = str(cppgeneral:DEDUCTIBLE)
                                switch(cppgeneral:deductible)
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 1500 : l_deductible_str = "08"
                                  case 2000 : l_deductible_str = "08"
                                  case 2500 : l_deductible_str = "08"
                                  case 3000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "09"
                                  end
                                l_premium        = l_premium + cppgeneral:premium[1] + l_property_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_cppgeneral_premium_1 + l_prior_cppproperty_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                l_limit[1]       = cppgeneral:limit[1]
                                l_exposure       = cppgeneral:limit[1]
                                if l_premium <> 0 then
                                    begin
                                    l_line_type = "B"
                                    l_sub_code = l_sub_code + 10
                                    do gsn_master_add_property
                                    end
                                end
                            if cppgeneral:limit[2] <> 0 then
                                begin
                                l_coverage   = 2
                                if cppgeneral:sprinklered = 1 then
                                    l_rating_id = "4"
                                else
                                if cppgeneral:file_no <> "" then
                                    l_rating_id = "1"
                                else
                                    l_rating_id = "2"
                                l_deductible = str(cppgeneral:contents_DEDUCTIBLE)
                                switch(cppgeneral:contents_deductible)
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 1500 : l_deductible_str = "08"
                                  case 2000 : l_deductible_str = "08"
                                  case 2500 : l_deductible_str = "08"
                                  case 3000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "09"
                                  end
                                if cppgeneral:limit[1] = 0 then
                                    begin
                                    l_premium  = l_premium + cppgeneral:premium[7] + l_property_premium
                                    if sfpmaster:trans_code one of 12, 13, 15 then
                                        begin
                                        l_previous_total = l_prior_cppgeneral_premium_7 + l_prior_cppproperty_premium
                                        l_diff_total     = l_premium - l_previous_total
                                        end
                                    l_annual_premium = l_premium
                                    end
                                else
                                    begin
                                    l_premium = cppgeneral:premium[7]
                                    if sfpmaster:trans_code one of 12, 13, 15 then
                                        begin
                                        l_previous_total = l_prior_cppgeneral_premium_7
                                        l_diff_total     = l_premium - l_previous_total
                                        end
                                    l_annual_premium = l_premium
                                    end
                                l_limit[2] = cppgeneral:limit[2]
                                l_exposure = cppgeneral:limit[2]
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "C"
                                    do gsn_master_add_property
                                    end
                                end
                            end
                        else
                            begin
                            l_coverage = 3
                            if cppgeneral:sprinklered = 1 then
                                 l_rating_id = "8"
                            else
                            if cppgeneral:file_no <> "" then
                                l_rating_id = "5"
                            else
                            if cppgeneral:file_no = "" then
                                l_rating_id = "6"
                            l_deductible = str(cppgeneral:DEDUCTIBLE)
                            switch(cppgeneral:deductible)
                              case 250  : l_deductible_str = "04"
                              case 500  : l_deductible_str = "05"
                              case 1000 : l_deductible_str = "07"
                              case 1500 : l_deductible_str = "08"
                              case 2000 : l_deductible_str = "08"
                              case 2500 : l_deductible_str = "08"
                              case 3000 : l_deductible_str = "09"
                              default   : l_deductible_str = "09"
                              end
                            l_premium  = l_premium + cppgeneral:premium[1] + l_property_premium
                            if sfpmaster:trans_code one of 12, 13, 15 then
                                begin
                                l_previous_total = l_prior_cppgeneral_premium_1 + l_prior_cppproperty_premium
                                l_diff_total     = l_premium - l_previous_total
                                end
                            l_annual_premium = l_premium
                            l_limit[1] = cppgeneral:limit[1]
                            l_exposure = cppgeneral:limit[1]
                            if l_premium <> 0 then
                                begin
                                l_sub_code = l_sub_code + 10
                                l_line_type = "B"
                                do gsn_master_add_property
                                end
                            end

                        next cppgeneral
                        end

                     access cppbusiness, set cppbusiness:policy_no    = l_policy_no,
                                             cppbusiness:pol_year     = l_pol_year,
                                             cppbusiness:end_sequence = l_end_sequence,
                                             cppbusiness:prem_no      = l_prem_no,
                                             cppbusiness:build_no     = l_build_no, generic

                     while cppbusiness:policy_no    = l_policy_no and
                           cppbusiness:pol_year     = l_pol_year and
                           cppbusiness:end_sequence = l_end_sequence and
                           cppbusiness:prem_no      = l_prem_no and
                           cppbusiness:build_no     = l_build_no
                        begin
                        do access_cppbusiness_prior
                        if cppbusiness:coverage = "D2" then
                            l_coverage = 6
                        else
                        if cppbusiness:risk_type = "R" then
                            l_coverage = 5
                        else
                            l_coverage = 7
                        l_limit[25] = l_limit[25] + cppbusiness:limit
                        l_exposure = cppbusiness:limit
                        l_premium   = cppbusiness:bi_premium[1]
                        if sfpmaster:trans_code one of 12, 13, 15 then
                            begin
                            l_previous_total = l_prior_cppbusiness_premium_1
                            l_diff_total     = l_premium - l_previous_total
                            end
                        l_annual_premium = l_premium
                        if l_premium <> 0 then
                            begin
                            l_line_type = "I"
                            l_sub_code = l_sub_code + 10
                            do gsn_master_add_property
                            end

                        next cppbusiness
                        end
                     end
      case "ECVMM" : begin
                     l_premium               = 0
                     l_cppbusiness_only_once = 0
                     l_loss_cost_date        = 01.01.2010
                     access cppgeneral, set cppgeneral:policy_no    = l_policy_no,
                                            cppgeneral:pol_year     = l_pol_year,
                                            cppgeneral:end_sequence = l_end_sequence,
                                            cppgeneral:prem_no      = l_prem_no,
                                            cppgeneral:build_no     = l_build_no, generic

                     while cppgeneral:policy_no    = l_policy_no and
                           cppgeneral:pol_year     = l_pol_year and
                           cppgeneral:end_sequence = l_end_sequence and
                           cppgeneral:prem_no      = l_prem_no and
                           cppgeneral:build_no     = l_build_no
                        begin
                        switch(cppgeneral:construction)
                          case 1 : l_construction_class_1 = "11"
                          case 2 : l_construction_class_1 = "21"
                          case 3 : l_construction_class_1 = "31"
                          case 4 : l_construction_class_1 = "41"
                          case 5 : l_construction_class_1 = "51"
                          case 6 : l_construction_class_1 = "61"
                          end

                        l_prior_cppgeneral_premium_2 = 0
                        l_prior_cppgeneral_premium_3 = 0
                        l_prior_cppgeneral_premium_8 = 0
                        l_prior_cppgeneral_premium_9 = 0
                        if sfpmaster:trans_code one of 12, 13, 15 then
                            do access_cppgeneral_prior
                        if cppgeneral:blanket = 0 then
                            begin
                            if cppgeneral:sprinklered = 1 then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "K"
                                else
                                    l_rating_id = "4"
                                end
                            else
                            if cppgeneral:file_no <> "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "G"
                                else
                                    l_rating_id = "1"
                                end
                            else
                            if cppgeneral:file_no = "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "H"
                                else
                                    l_rating_id = "2"
                                end
                            if sfpname:eff_date < 01.01.2013 and
                               l_rating_id = "H" then
                                l_rating_id = "1"
                            if cppgeneral:limit[1] <> 0 then
                                begin
                                l_coverage   = 1
                                l_deductible = str(cppgeneral:DEDUCTIBLE)
                                switch(cppgeneral:deductible)
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 1500 : l_deductible_str = "08"
                                  case 2000 : l_deductible_str = "08"
                                  case 2500 : l_deductible_str = "08"
                                  case 3000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "09"
                                  end
                                l_premium  = cppgeneral:premium[2] + cppgeneral:premium[3]
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_cppgeneral_premium_2 + l_prior_cppgeneral_premium_3
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                l_limit[1] = cppgeneral:limit[1]
                                l_exposure = cppgeneral:limit[1]
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "B"
                                    do gsn_master_add_property
                                    end
                                end
                            if cppgeneral:limit[2] <> 0 then
                                begin
                                l_coverage   = 2
                                l_deductible = str(cppgeneral:contents_DEDUCTIBLE)
                                switch(cppgeneral:contents_deductible)
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 1500 : l_deductible_str = "08"
                                  case 2000 : l_deductible_str = "08"
                                  case 2500 : l_deductible_str = "08"
                                  case 3000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "09"
                                  end
                                l_premium = cppgeneral:premium[8] + cppgeneral:premium[9]
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_cppgeneral_premium_8 + l_prior_cppgeneral_premium_9
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                l_limit[2] = cppgeneral:limit[2]
                                l_exposure = cppgeneral:limit[2]
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "C"
                                    do gsn_master_add_property
                                    end
                                end
                            end
                        else
                            begin
                            if cppgeneral:sprinklered = 1 then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "R"
                                else
                                    l_rating_id = "8"
                                end
                            else
                            if cppgeneral:file_no <> "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "M"
                                else
                                    l_rating_id = "5"
                                end
                            else
                            if cppgeneral:file_no = "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "N"
                                else
                                    l_rating_id = "6"
                                end
                            l_coverage = 3
                            l_deductible = str(cppgeneral:DEDUCTIBLE)
                            switch(cppgeneral:deductible)
                              case 250  : l_deductible_str = "04"
                              case 500  : l_deductible_str = "05"
                              case 1000 : l_deductible_str = "07"
                              case 1500 : l_deductible_str = "08"
                              case 2000 : l_deductible_str = "08"
                              case 2500 : l_deductible_str = "08"
                              case 3000 : l_deductible_str = "09"
                              default   : l_deductible_str = "09"
                              end
                            l_premium  = cppgeneral:premium[2] + cppgeneral:premium[3]
                            if sfpmaster:trans_code one of 12, 13, 15 then
                                begin
                                l_previous_total = l_prior_cppgeneral_premium_2 + l_prior_cppgeneral_premium_3
                                l_diff_total     = l_premium - l_previous_total
                                end
                            l_annual_premium = l_premium
                            l_limit[1] = cppgeneral:limit[1]
                            l_exposure = cppgeneral:limit[1]
                            if l_premium <> 0 then
                                begin
                                l_sub_code = l_sub_code + 10
                                l_line_type = "B"
/*                                      if l_policy_no one of 17212 and
         l_pol_year one of 2011 and
         l_end_sequence one of 4 then
          {
            write("<014>")
            write("%cEC and VMM%x",1005,l_policy_no)
            write("%c%n",1015,cppgeneral:state)
            write("%c%n",1025,cppgeneral:group_no)
            write("%c%n",1035,cppgeneral:sub_group)
            write("%c%n",1045,cppgeneral:class_code)
            write("%c%n",1055,cppgeneral:sub_code)

--            write("%c%s%x",03005,"l_iso_crime_class_code", l_iso_crime_class_code)
            write("%c%s%x",04005,"l_iso_prop_class_code ", l_iso_prop_class_code)
            write("%c%s%x",05005,"l_iso_class_code ", l_iso_class_code)
            write("%c%s%x",06005,"p_class_code", cppgeneral:class_code)
            Read (23,1,"Press Enter to Continue ",L_ENTER,1)
          }
*/
                                do gsn_master_add_property
                                end
                            end

                        next cppgeneral
                        end

                     access cppbusiness, set cppbusiness:policy_no    = l_policy_no,
                                             cppbusiness:pol_year     = l_pol_year,
                                             cppbusiness:end_sequence = l_end_sequence,
                                             cppbusiness:prem_no      = l_prem_no,
                                             cppbusiness:build_no     = l_build_no, generic

                     while cppbusiness:policy_no    = l_policy_no and
                           cppbusiness:pol_year     = l_pol_year and
                           cppbusiness:end_sequence = l_end_sequence and
                           cppbusiness:prem_no      = l_prem_no and
                           cppbusiness:build_no     = l_build_no
                            begin
                            l_premium = cppbusiness:bi_premium[2] + cppbusiness:bi_premium[3]
                            if sfpmaster:trans_code one of 12, 13, 15 then
                                begin
                                l_previous_total = l_prior_cppbusiness_premium_2 + l_prior_cppbusiness_premium_3
                                l_diff_total     = l_premium - l_previous_total
                                end
                            l_annual_premium = l_premium
                            l_exposure = cppbusiness:limit

                            if cppbusiness:coverage = "D2" then
                                l_coverage = 6
                            else
                            if cppbusiness:risk_type = "R" then
                                l_coverage = 5
                            else
                                l_coverage = 7

                            if l_premium <> 0 then
                                begin
                                l_sub_code = l_sub_code + 10
                                l_line_type = "I"
                                do gsn_master_add_property
                                end

                            next cppbusiness
                            end
                     END
      case "OTHER" : begin
                     l_premium        = 0
                     l_loss_cost_date = 01.01.2010
                     access cppgeneral,
                        set cppgeneral:policy_no    = l_policy_no,
                            cppgeneral:pol_year     = l_pol_year,
                            cppgeneral:end_sequence = l_end_sequence,
                            cppgeneral:prem_no      = l_prem_no,
                            cppgeneral:build_no     = l_build_no, generic

                     while cppgeneral:policy_no    = l_policy_no and
                           cppgeneral:pol_year     = l_pol_year and
                           cppgeneral:end_sequence = l_end_sequence and
                           cppgeneral:prem_no      = l_prem_no and
                           cppgeneral:build_no     = l_build_no
                        begin
                        switch(cppgeneral:construction)
                          case 1 : l_construction_class_1 = "11"
                          case 2 : l_construction_class_1 = "21"
                          case 3 : l_construction_class_1 = "31"
                          case 4 : l_construction_class_1 = "41"
                          case 5 : l_construction_class_1 = "51"
                          case 6 : l_construction_class_1 = "61"
                          end

                        l_prior_cppgeneral_premium_4  = 0
                        l_prior_cppgeneral_premium_10 = 0
                        if sfpmaster:trans_code one of 12, 13, 15 then
                            do access_cppgeneral_prior
                        if cppgeneral:blanket = 0 then
                            begin
                            if cppgeneral:sprinklered = 1 then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "K"
                                else
                                    l_rating_id = "4"
                                end
                            else
                            if cppgeneral:file_no <> "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "G"
                                else
                                    l_rating_id = "1"
                                end
                            else
                            if cppgeneral:file_no = "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "H"
                                else
                                    l_rating_id = "2"
                                end
                            if sfpname:eff_date < 01.01.2013 and
                               l_rating_id = "H" then
                                l_rating_id = "1"
                            if cppgeneral:limit[1] <> 0 then
                                begin
                                l_coverage   = 1
                                l_deductible = str(cppgeneral:DEDUCTIBLE)
                                switch(cppgeneral:deductible)
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 1500 : l_deductible_str = "08"
                                  case 2000 : l_deductible_str = "08"
                                  case 2500 : l_deductible_str = "08"
                                  case 3000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "09"
                                  end
                                l_premium  = cppgeneral:premium[4]
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_cppgeneral_premium_4
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                l_limit[1] = cppgeneral:limit[1]
                                l_exposure = cppgeneral:limit[1]
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "B"
                                    do gsn_master_add_property
                                    end
                                end
                            if cppgeneral:limit[2] <> 0 then
                                begin
                                l_coverage   = 2
                                l_deductible = str(cppgeneral:contents_DEDUCTIBLE)
                                switch(cppgeneral:contents_deductible)
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 1500 : l_deductible_str = "08"
                                  case 2000 : l_deductible_str = "08"
                                  case 2500 : l_deductible_str = "08"
                                  case 3000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "09"
                                  end
                                l_premium = cppgeneral:premium[10]
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_cppgeneral_premium_10
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                l_limit[2] = cppgeneral:limit[2]
                                l_exposure = cppgeneral:limit[2]
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "C"
                                    do gsn_master_add_property
                                    end
                                end
                            end
                        else
                            begin
                            l_coverage = 3
                            if cppgeneral:sprinklered = 1 then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "R"
                                else
                                    l_rating_id = "8"
                                end
                            else
                            if cppgeneral:file_no <> "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "M"
                                else
                                    l_rating_id = "5"
                                end
                            else
                            if cppgeneral:file_no = "" then
                                begin
                                if cppgeneral:wind_deductible <> 0 then
                                    l_rating_id = "N"
                                else
                                    l_rating_id = "6"
                                end
                            l_deductible = str(cppgeneral:DEDUCTIBLE)
                            switch(cppgeneral:deductible)
                              case 250  : l_deductible_str = "04"
                              case 500  : l_deductible_str = "05"
                              case 1000 : l_deductible_str = "07"
                              case 1500 : l_deductible_str = "08"
                              case 2000 : l_deductible_str = "08"
                              case 2500 : l_deductible_str = "08"
                              case 3000 : l_deductible_str = "09"
                              default   : l_deductible_str = "09"
                              end
                            l_premium  = cppgeneral:premium[4]
                            if sfpmaster:trans_code one of 12, 13, 15 then
                                begin
                                l_previous_total = l_prior_cppgeneral_premium_4
                                l_diff_total     = l_premium - l_previous_total
                                end
                            l_annual_premium = l_premium
                            l_limit[1] = cppgeneral:limit[1]
                            l_exposure = cppgeneral:limit[1]
                            if l_premium <> 0 then
                                begin
                                l_sub_code = l_sub_code + 10
                                l_line_type = "B"
                                do gsn_master_add_property
                                end
                            end

                        next cppgeneral
                        end

                     access cppbusiness, set cppbusiness:policy_no    = l_policy_no,
                                             cppbusiness:pol_year     = l_pol_year,
                                             cppbusiness:end_sequence = l_end_sequence,
                                             cppbusiness:prem_no      = l_prem_no,
                                             cppbusiness:build_no     = l_build_no, generic

                     while cppbusiness:policy_no    = l_policy_no and
                           cppbusiness:pol_year     = l_pol_year and
                           cppbusiness:end_sequence = l_end_sequence and
                           cppbusiness:prem_no      = l_prem_no and
                           cppbusiness:build_no     = l_build_no
                        begin
                        l_premium = cppbusiness:bi_premium[4] + cppbusiness:bi_premium[5]
                        if sfpmaster:trans_code one of 12, 13, 15 then
                            begin
                            l_previous_total = l_prior_cppbusiness_premium_4 + l_prior_cppbusiness_premium_5
                            l_diff_total     = l_premium - l_previous_total
                            end
                        l_annual_premium = l_premium
                        l_exposure = cppbusiness:limit

                        if cppbusiness:coverage = "D2" then
                            l_coverage = 6
                        else
                        if cppbusiness:risk_type = "R" then
                            l_coverage = 5
                        else
                            l_coverage = 7

                        if l_premium <> 0 then
                            begin
                            l_sub_code = l_sub_code + 10
                            l_line_type = "I"

                            do gsn_master_add_property
                            end

                        next cppbusiness
                        end

                     end
      case "GLASS" : BEGIN
                     l_premium = 0
                     l_loss_cost_date = 0
                     l_coverage  = 0
                     access cppglass, set cppglass:policy_no     = l_policy_no,
                                          cppglass:pol_year      = l_pol_year,
                                          cppglass:end_sequence  = l_end_sequence,
                                          cppglass:prem_no       = l_prem_no,
                                          cppglass:build_no      = l_build_no, generic

                     do check_for_county(cppgeneral:state,cppgeneral:county)
                     while cppglass:policy_no     = l_policy_no and
                           cppglass:pol_year      = l_pol_year and
                           cppglass:end_sequence  = l_end_sequence and
                           cppglass:prem_no       = l_prem_no and
                           cppglass:build_no      = l_build_no
                        begin
                        l_prior_cppglass_premium = 0
                        do access_cppglass_prior
                        l_limit[24] = cppglass:limit
                        l_exposure  = cppglass:limit
                        l_premium   = cppglass:glass_premium
                        if sfpmaster:trans_code one of 12, 13, 15 then
                            begin
                            l_previous_total = l_prior_cppglass_premium
                            l_diff_total     = l_premium - l_previous_total
                            end
                        l_annual_premium = l_premium
                        l_class_code = 00
                        l_deductible = str(cppglass:DEDUCTIBLE)
                        switch(cppglass:deductible)
                          case 50   : l_deductible_str = "02"
                          case 100  : l_deductible_str = "03"
                          case 250  : l_deductible_str = "04"
                          case 500  : l_deductible_str = "05"
                          case 1000 : l_deductible_str = "07"
                          case 2500 : l_deductible_str = "08"
                          case 5000 : l_deductible_str = "09"
                          default   : l_deductible_str = "01"
                          end

                        access cppgeneral, set cppgeneral:policy_no    = cppglass:policy_no,
                                               cppgeneral:pol_year     = cppglass:pol_year,
                                               cppgeneral:end_sequence = cppglass:end_sequence,
                                               cppgeneral:prem_no      = cppglass:prem_no,
                                               cppgeneral:build_no     = cppglass:build_no, generic

                        l_rmf_no = cppgeneral:package_mod[1] *
                                   cppgeneral:multi_location_credit

                        l_rmf = str(l_rmf_no)

                        if l_premium <> 0 then
                          begin
                            l_sub_code = l_sub_code + 10
                            l_line_type = "G"
                            if sfpname:eff_date >= 06.01.2014 then
                              {
                                l_iso_subline_code = "090"   --this is for policies effective june 1st 2014   this is the new default
                              }
                            do gsn_master_add_glass
                          end

                        next cppglass
                        end

                     END
      CASE "CRIME" : Begin
                     l_premium = 0
                     l_premium_1 = 0
                     l_premium_2 = 0
                     l_total_premium = 0
                     l_coverage  = 2
                     l_loss_cost_date = 0

                     l_iso_class_code = l_iso_CRIMe_class_code
                     if trun(l_iso_crime_class_code) = "" then
                       begin
                         l_iso_class_code = l_iso_prop_class_code
                       end

                     access cppcrime1, set cppcrime1:policy_no    = l_policy_no,
                                           cppcrime1:pol_year     = l_pol_year,
                                           cppcrime1:end_sequence = l_end_sequence,
                                           cppcrime1:prem_no      = l_prem_no,
                                           cppcrime1:build_no     = l_build_no, generic

                     while cppcrime1:policy_no    = l_policy_no and
                           cppcrime1:pol_year     = l_pol_year and
                           cppcrime1:end_sequence = l_end_sequence and
                           cppcrime1:prem_no      = l_prem_no and
                           cppcrime1:build_no     = l_build_no
                        begin
                        if cppcrime1:premium > 0 then
                            begin
                            l_cppcrime1_prior_premium_1 = 0
                            l_cppcrime1_prior_premium_2 = 0
                            do access_cppcrime1_prior
                            l_premium_1 = 0
                            l_total_premium = cppcrime1:premium
                            l_rmf_no = cppcrime1:package_mod *
                                       cppcrime1:irpm

                            l_rmf = str(l_rmf_no)
                            if cppcrime1:code one of "MCP171","MCP172","MCP173","MCP175","MCP177","MCP179","MCP181","MCP183", "MCP771" then
                                 begin
                                 switch (cppcrime1:code)
                                   case "MCP171",
                                        "MCP771" : begin
                                                   l_crime_form  = "A"
                                                   l_stored_loc  = 17
                                                   l_form_code   = "101"
                                                   end
                                   case "MCP172" : begin
                                                   l_crime_form  = "B"
                                                   l_stored_loc  = 18
                                                   l_form_code   = "115"
                                                   end
                                   case "MCP173" : begin
                                                   l_crime_form  = "C"
                                                   l_stored_loc  = 19
                                                   l_form_code   = "120"
                                                   l_form_code_1 = "130"
                                                   end
                                   case "MCP175" : begin
                                                   l_crime_form   = "D"
                                                   l_stored_loc   = 20
                                                   l_form_code    = "125"
                                                   l_form_code_1  = "130"
                                                   end
                                   case "MCP177" : begin
                                                   l_crime_form  = "E"
                                                   l_stored_loc  = 21
                                                   l_form_code   = "125"
                                                   l_form_code_1 = "130"
                                                   end
                                   case "MCP181" : begin
                                                   l_crime_form  = "L"
                                                   l_stored_loc  = 22
                                                   l_form_code   = "170"
                                                   l_form_code_1 = "171"
                                                   end
                                   END  --SWITCH

                                 end

                            access cppcrime, set cppcrime:policy_no    = l_policy_no,
                                                 cppcrime:pol_year     = l_pol_year,
                                                 cppcrime:end_sequence = l_end_sequence,
                                                 cppcrime:prem_no      = l_prem_no,
                                                 cppcrime:build_no     = l_build_no,
                                                 cppcrime:crime_form   = l_crime_form, exact

                            l_premium_1 = 0
                            l_premium_2 = 0
                            while cppcrime:policy_no    = l_policy_no and
                                  cppcrime:pol_year     = l_pol_year and
                                  cppcrime:end_sequence = l_end_sequence and
                                  cppcrime:prem_no      = l_prem_no and
                                  cppcrime:build_no     = l_build_no and
                                  cppcrime:CRIME_FORM   = l_crime_form
                                begin
                                do check_for_county(cppcrime:state,cppcrime:county)
                                l_limit[l_stored_loc] = l_limit[l_stored_loc] + cppCRIME:LIMIT[1]
                                switch(cppcrime:deductible)
                                  case 200  : l_deductible_str = "04"
                                  case 250  : l_deductible_str = "04"
                                  case 500  : l_deductible_str = "05"
                                  case 1000 : l_deductible_str = "07"
                                  case 2500 : l_deductible_str = "08"
                                  case 5000 : l_deductible_str = "09"
                                  default   : l_deductible_str = "01"
                                  end
                                l_deductible = str(cppcrime:deductible)
                                l_rateable_employees = cppcrime:employees
                                if l_rateable_employees = 0 then
                                    l_rateable_employees = 1
                                l_total_limit_1 = l_total_limit_1 + cppcrime:limit[1]
                                l_total_limit_2 = l_total_limit_2 + cppcrime:limit[2]
                                l_premium_1     = l_total_premium - cppcrime:crime_total[2]
                                l_premium_2     = cppcrime:crime_total[2]

                                next cppCRIME
                                end

                        if l_premium_1 = 0 and
                           cppcrime1:premium <> 0 then
                            begin
                            l_premium_1   = cppcrime1:premium
                            l_premium_2   = 0
                            end
                        else
                        if l_premium_1 = 0 and
                           cppcrime1:premium = 0 then
                            begin
                            l_premium_1 = sfpmaster:total[4]
                            l_premium_2 = 0
                            end

                        l_total_premium = cppcrime1:total_premium
                        if l_premium_1 <> 0 then
                             begin
                             l_sub_code = l_sub_code + 10
                             l_premium  = l_premium_1
                             if sfpmaster:trans_code one of 12, 13, 15 then
                                 begin
                                 l_previous_total = l_cppcrime1_prior_premium_1
                                 l_diff_total     = l_premium - l_previous_total
                                 end
                             l_annual_premium = l_premium
                             l_line_type = "D"
                             do gsn_master_add_crime
                             if l_premium_2 <> 0 then
                                 begin
                                 l_form_code   = l_form_code_1
                                 l_premium     = l_premium_2
                                 if sfpmaster:trans_code one of 12, 13, 15 then
                                     begin
                                     l_previous_total = l_cppcrime1_prior_premium_2
                                     l_diff_total     = l_premium - l_previous_total
                                     end
                                 l_annual_premium = l_premium
                                 l_sub_code = l_sub_code + 10
                                 l_line_type = "E"
                                 do gsn_master_add_crime
                                 end
                             end
                        end

                        next cppcrime1
                        end
                     END
      case "INLAND" : BEGIN
                      l_premium = 0
                      l_loss_cost_date = 0
                      l_coverage  = 0
                      access cppinland, set cppinland:policy_no     = l_policy_no,
                                            cppinland:pol_year      = l_pol_year,
                                            cppinland:end_sequence  = l_end_sequence,
                                            cppinland:prem_no       = l_prem_no,
                                            cppinland:build_no      = l_build_no, generic

--                      if l_iso_class_code = "" then
--                          begin
--                          l_iso_class_code = l_base_class_code
--                          end

                      do check_for_county(cppinland:state,cppinland:county)

                      while cppinland:policy_no     = l_policy_no and
                            cppinland:pol_year      = l_pol_year and
                            cppinland:end_sequence  = l_end_sequence and
                            cppinland:prem_no       = l_prem_no and
                            cppinland:build_no      = l_build_no
                        begin
                        switch(cppinland:code)
                          case "MIM121" : l_iso_class_code = "205"
                          case "MIM100" : l_iso_class_code = "225"
                          case "MIM101" : l_iso_class_code = "225"
                          case "MIM110" : l_iso_class_code = "334"
                          case "MIM131" : l_iso_class_code = "379"
                          case "MIM012" : l_iso_class_code = "382"
                          case "MIM113" : l_iso_class_code = "454"
                          case "MIM116" : l_iso_class_code = "526"
                          case "MIM112" : l_iso_class_code = "798"
                          case "MIM114" : l_iso_class_code = "798"
                          end
                        if sfsline:lob_code one of "SMP" then
                            begin
                            switch(cppgeneral:cmp_symbol)
                              case "H" : l_type_of_policy = 71
                              case "A" : l_type_of_policy = 72
                              case "O" : l_type_of_policy = 73
                              case "M" : l_type_of_policy = 74
                              case "I" : l_type_of_policy = 75
                              case "S" : l_type_of_policy = 76
                              case "P" : l_type_of_policy = 77
                              case "C" : l_type_of_policy = 78
                              default   : l_type_of_policy = 72
                              end
                            end
                        else
                            l_type_of_policy = 10
                        l_premium = cppINLAND:premium
                        l_rmf_no = cppinland:package_mod
                        if cppinland:irpm <> 0 then
                            l_rmf_no = l_rmf_no * cppinland:irpm
                        l_rmf = str(l_rmf_no)
                        access cppendorse, set cppendorse:policy_no     = l_policy_no,
                                               cppendorse:pol_year      = l_pol_year,
                                               cppendorse:end_sequence  = l_end_sequence,
                                               cppendorse:prem_no       = l_prem_no,
                                               cppendorse:build_no      = l_build_no,
                                               cppendorse:code          = cppinland:code, generic

                        l_total_premium = 0
                        l_limit[27] = 0
                        while cppendorse:policy_no    = l_policy_no and
                              cppendorse:pol_year     = l_pol_year  and
                              cppendorse:end_sequence = l_end_sequence and
                              cppendorse:prem_no      = l_prem_no and
                              cppendorse:build_no     = l_build_no and
                              cppendorse:code         = cppinland:code
                            begin
                            switch(cppendorse:deductible[1])
                              case 50   : l_deductible_str = "02"
                              case 100  : l_deductible_str = "03"
                              case 200  : l_deductible_str = "04"
                              case 250  : l_deductible_str = "04"
                              case 500  : l_deductible_str = "05"
                              case 1000 : l_deductible_str = "07"
                              case 2500 : l_deductible_str = "08"
                              case 5000 : l_deductible_str = "09"
                              default   : l_deductible_str = "01"
                              end
                            l_deductible = str(cppendorse:deductible[1])
                            if cppendorse:code one of "MIM012","MIM100","MIM101","MIM110","MIM112","MIM113","MIM114","MIM116","MIM121" then
                                begin
                                l_limit[27] = l_limit[27] + cppendorse:limit[1]
                                end
                            l_cppinland_prior_premium = 0
                            l_cppinland_prior_total_premium = 0
                            l_inland_sub_code = cppendorse:sub_code
                            do access_cppinland_prior
                            if cppinland:irpm <> 0 then
                                begin
                                l_premium = cppendorse:premium[1] * cppinland:package_mod * cppinland:IRPm
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_cppinland_prior_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                end
                            else
                                begin
                                l_premium = cppendorse:premium[1] * cppinland:package_mod
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_cppinland_prior_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                end

                            l_total_PREMIUM = L_TOTAL_PREMIUM  + l_premium

                            if l_total_premium <> 0 then
                                begin
                                l_sub_code = l_sub_code + 10
                                l_line_type = "N"
                                do gsn_master_add_inland
                                end

                            next cppendorse
                            end

                        if l_total_premium > cppinland:premium then
                            begin
                            l_premium = l_total_premium - l_premium
                            if sfpmaster:trans_code one of 12, 13, 15 then
                                begin
                                l_previous_total = l_cppinland_prior_total_premium
                                l_diff_total     = l_premium - l_previous_total
                                end
                            l_annual_premium = l_premium
                            end

                        next cppinland

                        end
                      END
      case "BOILER" : BEGIN
                        access cppgeneral,
                           set cppgeneral:policy_no    = l_policy_no,
                               cppgeneral:pol_year     = l_pol_year,
                               cppgeneral:end_sequence = l_end_sequence,
                               cppgeneral:prem_no      = l_prem_no,
                               cppgeneral:build_no     = l_build_no, generic

                      l_premium = 0
                      l_loss_cost_date = 0
                      l_coverage  = 1
                      do get_correct_state_and_county

                      l_deductible = str(cppgeneral:DEDUCTIBLE)
                      switch(cppgeneral:deductible)
                        case 250  : l_deductible_str = "04"
                        case 500  : l_deductible_str = "05"
                        case 1000 : l_deductible_str = "07"
                        case 1500 : l_deductible_str = "08"
                        case 2000 : l_deductible_str = "08"
                        case 2500 : l_deductible_str = "08"
                        case 3000 : l_deductible_str = "09"
                        default   : l_deductible_str = "09"
                        end
                      access cppproperty,
                         set cppproperty:policy_no    = l_policy_no,
                             cppproperty:pol_year     = l_pol_year,
                             cppproperty:end_sequence = l_end_sequence,
                             cppproperty:prem_no      = l_prem_no,
                             cppproperty:build_no     = l_build_no, generic

                      while cppproperty:policy_no    = l_policy_no and
                            cppproperty:pol_year     = l_pol_year and
                            cppproperty:end_sequence = l_end_sequence and
                            cppproperty:prem_no      = l_prem_no and
                            cppproperty:build_no     = l_build_no
                        begin
                        l_boiler_prior_premium = 0
                        do access_boiler_prior
                        l_premium  = l_premium + cppproperty:boiler_premium[1] + cppproperty:boiler_premium[2]
                        if sfpmaster:trans_code one of 12, 13, 15 then
                            begin
                            l_previous_total = l_boiler_prior_premium
                            l_diff_total     = l_premium - l_previous_total
                            end
                        l_annual_premium = l_premium

                        next cppproperty
                        end

                      if l_premium <> 0 then
                        begin
                          l_sub_code = l_sub_code + 10
                          l_line_type = "R"
                          if sfpname:eff_date >= 06.01.2014 then
                            {
                              l_iso_class_code = "900"   --this is for policies effective june 1st 2014   this is the new default
                            }
                          do gsn_master_add_boiler
                        end
                      END
      case "TERROR" : BEGIN
                      do get_correct_state_and_county
                      l_coverage  = 0
                      l_premium = 0
                      if l_do_terrorism_only_once one of 0 then
                        begin
                          access cppgeneral,
                             set cppgeneral:policy_no    = l_policy_no,
                                 cppgeneral:pol_year     = l_pol_year,
                                 cppgeneral:end_sequence = l_end_sequence,
                                 cppgeneral:prem_no      = l_prem_no,
                                 cppgeneral:build_no     = l_build_no, generic
                          do access_cpsclass(cppgeneral:state,cppgeneral:group_no,cppgeneral:sub_group,cppgeneral:property_class_code,cppgeneral:sub_code)
                          l_class_code = cppgeneral:property_class_code
                          if trun(l_iso_prop_class_code) = "" then
                            begin
                              do access_cpstransitional(cppgeneral:state,cppgeneral:group_no,cppgeneral:sub_group,cppgeneral:property_class_code,cppgeneral:sub_code)
                            end
                          if trun(l_iso_prop_class_code) = "" then
                            {
                              access cppliability_all_locations,
                                 set cppliability_all_locations:policy_no     = l_policy_no,
                                     cppliability_all_locations:pol_year      = l_pol_year,
                                     cppliability_all_locations:end_sequence  = l_end_sequence,
                                     cppliability_all_locations:prem_no       = l_prem_no,
                                     cppliability_all_locations:build_no      = l_build_no, generic
                              do access_cpsclass(cppliability_all_locations:state,cppliability_all_locations:group_no,cppliability_all_locations:sub_group,cppliability_all_locations:class_code,cppliability_all_locations:sub_code)
                            }

                          l_iso_class_code = l_iso_prop_class_code

                          l_prior_end_sequence = l_end_sequence - 1
                          access sfpmaster_alias, set sfpmaster_alias:policy_no    = l_policy_no,
                                                      sfpmaster_alias:pol_year     = l_pol_year,
                                                      sfpmaster_alias:end_sequence = l_prior_end_sequence, generic

                          if sfpmaster:terrorism_premium <> 0 then
                               begin
                               l_do_terrorism_only_once = 1
                               end
                          l_premium = sfpmaster:terrorism_premium
                          if sfpmaster:trans_code one of 12, 13, 15 then
                              begin
                              l_previous_total = sfpmaster_alias:terrorism_premium
                              l_diff_total     = l_premium - l_previous_total
                              end
                          l_annual_premium = l_premium

                          if l_premium <> 0 or
                             l_diff_total <> 0 then
                              begin
                              l_sub_code = l_sub_code + 10
                              l_line_type = "T"
                              if sfsline:lob_code one of "SMP", "PROPERTY" then
                                begin
                                  l_loss_cost_date = 01.01.2010
                                  if cppgeneral:blanket = 0 then
                                      begin
                                        if cppgeneral:limit[1] <> 0 then
                                          {
                                            l_coverage = 1
                                          }
                                        else
                                          {
                                            l_coverage = 2
                                          }
                                      end
                                  else
                                      l_coverage = 3

                                  do gsn_master_add_property
                                  end
                              else
                                  begin
                                  l_coverage = 3
                                  switch(cppliablimits:occurrence)
                                    case 300000 : l_policy_limits = "64"
                                    case 500000 : switch(cppliablimits:general_aggregate)
                                                    case 1000000 : l_policy_limits = "68"
                                                    default      : l_policy_limits = "69"
                                                    end
                                    case 1000000 : switch(cppliablimits:general_aggregate)
                                                     case 2000000 : l_policy_limits = "73"
                                                     default      : l_policy_limits = "72"
                                                     end
                                    end
                                  do gsn_master_add_liability
                                  end
                              end
                          end
                      END
     case "PREMISE" : begin
                      l_premium        = 0
                      l_premises_prior_premium = 0
                      l_loss_cost_date = 0
                      l_misc_premium[2] = 0
                      l_prior_misc_premium[2] = 0
                      l_exposure_base = ""
                      access CPPLIABLIMITS, set CPPLIABLIMITS:policy_no    = l_policy_no,
                                                CPPLIABLIMITS:pol_year     = l_pol_year,
                                                CPPLIABLIMITS:end_sequence = l_end_sequence,exact

                      access cppliability_all_locations,
                         set cppliability_all_locations:policy_no     = l_policy_no,
                             cppliability_all_locations:pol_year      = l_pol_year,
                             cppliability_all_locations:end_sequence  = l_end_sequence,
                             cppliability_all_locations:prem_no       = l_prem_no,
                             cppliability_all_locations:build_no      = l_build_no, generic

                      do check_for_county(CPPLIability_all_locations:state,CPPLIABility_all_locations:county)

--                      l_premium = 0
--                      do collect_misc_premium
--                      l_premium = l_misc_premium[2]
--                      do access_sfpmisc_prior
--                      l_premises_prior_premium = l_prior_misc_premium[2]
                      while cppliability_all_locations:policy_no    = l_policy_no and
                            cppliability_all_locations:pol_year     = l_pol_year and
                            cppliability_all_locations:end_sequence = l_end_sequence and
                            cppliability_all_locations:prem_no      = l_prem_no and
                            cppliability_all_locations:build_No     = l_build_no
                        begin
                        l_premium = 0
                        l_premises_prior_premium = 0
                        if l_premium = 0 and
                           l_misc_premium[2] <> 0 then
                            begin
                            l_premium = l_misc_premium[2]
                            l_misc_premium[2] = 0
                            end
                        if l_premises_prior_premium = 0 and
                           l_prior_misc_premium[2] <> 0 then
                            begin
                            l_premises_prior_premium = l_prior_misc_premium[2]
                            l_prior_misc_premium[2] = 0
                            end
                        l_class_code = cppliability_all_locations:class_code
                        if  trun(cppliability_all_locations:exposure_base[1]) <> "" then
                          {
                            l_exposure_base  = cppliability_all_locations:exposure_base[1]
                          }
                        else
                          {
                            l_exposure_base = "N/A"
                          }

                        do access_cppliability_prior
                        l_coverage = 3
                        l_retro_date = 0
                        l_class_code = cppliability_all_locations:class_code
                        if cppliability_all_locations:minimum_premium[1] <> 0 then
                            begin
                            l_premium = l_premium +
                                        cppliability_all_locations:minimum_premium[1] -
                                        cppliability_all_locations:prem[2]
                            end
                        else
                            begin
                            l_premium = l_premium +
                                        cppliability_all_locations:prem[1] +
                                        cppliability_all_locations:independent_contractor_premium +
                                        cppliability_all_locations:total_misc +
                                        cppliability_all_locations:total_endorsements
                            end

                        do access_sfpend
                        if l_mcl426_policy_wide = "Y" then
                            begin
                            if l_mcl426_first_time = "Y" then
                                begin
                                l_mcl426_first_time = "N"
                                l_premium = l_premium - l_mcl426_premium
                                end
                            end
                        else
                            l_premium = l_premium - l_mcl426_premium

                        if l_mcl428_policy_wide = "Y" then
                            begin
                            if l_mcl428_first_time = "Y" then
                                begin
                                l_mcl428_first_time = "N"
                                l_premium = l_premium - l_mcl428_premium
                                end
                            end
                        else
                            l_premium = l_premium - l_mcl428_premium

                        if l_mcl433_policy_wide = "Y" then
                            begin
                            if l_mcl433_first_time = "Y" then
                                begin
                                l_mcl433_first_time = "N"
                                l_premium = l_premium - l_mcl433_premium
                                end
                            end
                        else
                            l_premium = l_premium - l_mcl433_premium

                        if l_bu2510_policy_wide = "Y" then
                            begin
                            if l_bu2510_first_time = "Y" then
                                begin
                                l_bu2510_first_time = "N"
                                l_premium = l_premium - l_bu2510_premium
                                end
                            end
                        else
                            l_premium = l_premium - l_bu2510_premium

                       access cppdeviation, set cppdeviation:policy_no    = l_policy_no,
                                                 cppdeviation:pol_year     = l_pol_year,
                                                 cppdeviation:end_sequence = l_end_sequence, generic

                       if cppdeviation:exp_factor not one of 1.00, 0.00 then
                            l_rating_id = "1"
                        else
                            l_rating_id = "9"
                        l_rmf_no = cppdeviation:package_mod

                        if cppdeviation:irpm_deviation <> 0 then
                            l_rmf_no = l_rmf_no *
                                       cppdeviation:irpm_deviation

                        if cppdeviation:exp_factor <> 0 then
                            l_rmf_no = l_rmf_no *
                                       cppdeviation:exp_factor
                        l_rmf = str(l_rmf_no)

                        access cppliabdeduct, set cppliabdeduct:policy_no    = l_policy_no,
                                                  cppliabdeduct:pol_year     = l_pol_year,
                                                  cppliabdeduct:end_sequence = l_end_sequence, generic

                        l_deductible_pd = "01"
                        if cppliabdeduct:deductible[4] <> 0 then
                            begin
                            switch(cppliabdeduct:deductible[4])
                              case 250 : l_deductible_pd = "04"
                              case 500 : l_deductible_pd = "05"
                              end
                            end
                        else
                        if cppliabdeduct:deductible[3] <> 0 then
                            begin
                            switch(cppliabdeduct:deductible[3])
                              case 250 : l_deductible_pd = "04"
                              case 500 : l_deductible_pd = "05"
                              end
                            end

                        switch(cppliablimits:occurrence)
                          case 300000 : l_policy_limits = "64"
                          case 500000 : switch(cppliablimits:general_aggregate)
                                          case 1000000 : l_policy_limits = "68"
                                          default      : l_policy_limits = "69"
                                          end
                          case 1000000 : switch(cppliablimits:general_aggregate)
                                           case 2000000 : l_policy_limits = "73"
                                           default      : l_policy_limits = "72"
                                           end
                          end
                        do access_cpsclass(cppliability_all_locations:state,cppliability_all_locations:group_no,cppliability_all_locations:sub_group,cppliability_all_locations:class_code,cppliability_all_locations:sub_code)
                        l_iso_class_code = l_iso_liab_class_code
                        l_aslob = sfsline2:ISO_STMT_LOB
                        l_subline = str(sfsline2:ISO_SUBLINE)
                        l_exposure = cppliability_all_locations:exposure[1]

                        if sfpmaster:trans_code one of 12, 13, 15 then
                            begin
                            l_previous_total = l_premises_prior_premium
                            l_diff_total     = l_premium - l_previous_total
                            end
                        l_annual_premium = l_premium
                        if l_premium <> 0 and
                           l_annual_premium <> 0 then
                            begin
                            l_sub_code = l_sub_code + 10
                            l_line_type = "P"
                            do gsn_master_add_liability
                            end

                        l_add_premise = 1

                        next cppliability_all_locations
                        end

                        l_premium = 0
                        do access_sfpend_1
                        do access_sfpend_1_prior

                        if l_mcl426 = "Y" then
                            begin
                            l_aslob = "172"
                            l_subline = "325"
                            l_iso_class_code = "92100"
                            l_coverage = 1
                            l_code = "MCL426"
                            access cppendorse, set cppendorse:policy_no     = l_policy_no,
                                                   cppendorse:pol_year      = l_pol_year,
                                                   cppendorse:end_sequence  = l_end_sequence, generic

                            while cppendorse:policy_no    = l_policy_no and
                                  cppendorse:pol_year     = l_pol_year  and
                                  cppendorse:end_sequence = l_end_sequence
                                begin
                                if cppendorse:code = l_code then
                                    l_retro_date = cppendorse:eff_date

                                next cppendorse
                                end

                            if l_mcl426_policy_wide = "Y" then
                                begin
                                l_premium = l_mcl426_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_mcl426_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 and
                                   l_mcl426_first_time_1 = "Y" then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "1"
                                    do gsn_master_add_liability
                                    l_mcl426_first_time_1 = "N"
                                    end
                                end
                            else
                                begin
                                l_premium = l_mcl426_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_mcl426_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "1"
                                    do gsn_master_add_liability
                                    end
                                end
                            end
                        if l_mcl428 = "Y" then
                            begin
                            l_aslob = "172"
                            l_subline = "317"
                            l_iso_class_code = "73145"
                            l_coverage = 1
                            l_code = "MCL428"
                            access cppendorse, set cppendorse:policy_no     = l_policy_no,
                                                   cppendorse:pol_year      = l_pol_year,
                                                   cppendorse:end_sequence  = l_end_sequence, generic

                            while cppendorse:policy_no    = l_policy_no and
                                  cppendorse:pol_year     = l_pol_year  and
                                  cppendorse:end_sequence = l_end_sequence
                                begin
                                if cppendorse:code = l_code then
                                    l_retro_date = cppendorse:eff_date

                                next cppendorse
                                end

                            if l_mcl428_policy_wide = "Y" then
                                begin
                                l_premium = l_mcl428_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_mcl428_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 and
                                   l_mcl428_first_time_1 = "Y" then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "2"
                                    do gsn_master_add_liability
                                    l_mcl428_first_time_1 = "N"
                                    end
                                end
                            else
                                begin
                                l_premium = l_mcl428_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_mcl428_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "2"
                                    do gsn_master_add_liability
                                    end
                                end
                            end
                        if l_mcl433 = "Y" then
                            begin
                            l_aslob = "172"
                            l_subline = "317"
                            l_iso_class_code = "73144"
                            l_coverage = 1
                            l_code = "MCL433"
                            access cppendorse, set cppendorse:policy_no     = l_policy_no,
                                                   cppendorse:pol_year      = l_pol_year,
                                                   cppendorse:end_sequence  = l_end_sequence, generic

                            while cppendorse:policy_no    = l_policy_no and
                                  cppendorse:pol_year     = l_pol_year  and
                                  cppendorse:end_sequence = l_end_sequence
                                begin
                                if cppendorse:code = l_code then
                                    l_retro_date = cppendorse:eff_date

                                next cppendorse
                                end

                            if l_mcl433_policy_wide = "Y" then
                                begin
                                l_premium = l_mcl433_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_mcl433_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 and
                                   l_mcl433_first_time_1 = "Y" then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "3"
                                    do gsn_master_add_liability
                                    l_mcl433_first_time_1 = "N"
                                    end
                                end
                            else
                                begin
                                l_premium = l_mcl433_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_mcl433_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "3"
                                    do gsn_master_add_liability
                                    end
                                end
                            end
                        if l_bu2510 = "Y" then
                            begin
                            l_aslob = "172"
                            l_subline = "317"
                            l_iso_class_code = "73145"
                            l_coverage = 1
                            l_code = "BU2510"
                            access cppendorse, set cppendorse:policy_no     = l_policy_no,
                                                   cppendorse:pol_year      = l_pol_year,
                                                   cppendorse:end_sequence  = l_end_sequence, generic

                            while cppendorse:policy_no    = l_policy_no and
                                  cppendorse:pol_year     = l_pol_year  and
                                  cppendorse:end_sequence = l_end_sequence
                                begin
                                if cppendorse:code = l_code then
                                    l_retro_date = cppendorse:eff_date

                                next cppendorse
                                end

                            if l_bu2510_policy_wide = "Y" then
                                begin
                                l_premium = l_bu2510_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_bu2510_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 and
                                   l_bu2510_first_time_1 = "Y" then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "4"
                                    do gsn_master_add_liability
                                    l_bu2510_first_time_1 = "N"
                                    end
                                end
                            else
                                begin
                                l_premium = l_bu2510_premium
                                if sfpmaster:trans_code one of 12, 13, 15 then
                                    begin
                                    l_previous_total = l_prior_bu2510_premium
                                    l_diff_total     = l_premium - l_previous_total
                                    end
                                l_annual_premium = l_premium
                                if l_premium <> 0 then
                                    begin
                                    l_sub_code = l_sub_code + 10
                                    l_line_type = "4"
                                    do gsn_master_add_liability
                                    end
                                end
                            end
                      END
     case "PRODUCT" : begin
                      l_exposure_base = ""
                      l_premium        = 0
                      l_coverage       = 3
                      l_retro_date     = 0
                      l_add_products   = 0
                      l_loss_cost_date = 0
                      access CPPLIABLIMITS,
                         set CPPLIABLIMITS:policy_no    = l_policy_no,
                             CPPLIABLIMITS:pol_year     = l_pol_year,
                             CPPLIABLIMITS:end_sequence = l_end_sequence,exact

                      access cppliability_all_locations,
                         set cppliability_all_locations:policy_no     = l_policy_no,
                             cppliability_all_locations:pol_year      = l_pol_year,
                             cppliability_all_locations:end_sequence  = l_end_sequence,
                             cppliability_all_locations:prem_no       = l_prem_no,
                             cppliability_all_locations:build_No      = l_build_no, generic

                      while cppliability_all_locations:policy_no    = l_policy_no and
                            cppliability_all_locations:pol_year     = l_pol_year and
                            cppliability_all_locations:end_sequence = l_end_sequence and
                            cppliability_all_locations:prem_no      = l_prem_no and
                            cppliability_all_locations:build_No     = l_build_no
                         begin
                         l_class_code = cppliability_all_locations:class_code
                         if trun(cppliability_all_locations:exposure_base[2]) <> "" then
                           {
                             l_exposure_base = cppliability_all_locations:exposure_base[2]
                           }
                         else
                           {
                             l_exposure_base = "N/A"
                           }
                         l_premium = 0
                         l_products_prior_premium = 0
                         do access_cppliability_prior
                         l_premium = cppliability_all_locations:prem[2]
                         if cppdeviation:exp_factor not one of 1.00, 0.00 then
                             l_rating_id = "1"
                         else
                             l_rating_id = "9"
                         if sfpmaster:trans_code one of 12, 13, 15 then
                             begin
                             l_previous_total = l_products_prior_premium
                             l_diff_total     = l_premium - l_previous_total
                             end
                         l_annual_premium = l_premium
                         do access_cpsclass(cppliability_all_locations:state,cppliability_all_locations:group_no,cppliability_all_locations:sub_group,cppliability_all_locations:class_code, cppliability_all_locations:sub_code)
                         l_iso_class_code = l_iso_liab_class_code

                         l_add_products = 1

                        l_deductible_pd = "01"
                        if cppliabdeduct:deductible[4] <> 0 then
                            begin
                            switch(cppliabdeduct:deductible[4])
                              case 250 : l_deductible_pd = "04"
                              case 500 : l_deductible_pd = "05"
                              end
                            end
                        else
                        if cppliabdeduct:deductible[3] <> 0 then
                            begin
                            switch(cppliabdeduct:deductible[3])
                              case 250 : l_deductible_pd = "04"
                              case 500 : l_deductible_pd = "05"
                              end
                            end

                        switch(cppliablimits:occurrence)
                          case 300000 : l_policy_limits = "64"
                          case 500000 : switch(cppliablimits:general_aggregate)
                                          case 1000000 : l_policy_limits = "68"
                                          default      : l_policy_limits = "69"
                                          end
                          case 1000000 : switch(cppliablimits:general_aggregate)
                                           case 2000000 : l_policy_limits = "73"
                                           default      : l_policy_limits = "72"
                                           end
                          end

                         if l_annual_premium <> 0 and
                            l_premium <> 0 then
                           begin
                             l_aslob = sfsline2:ISO_STMT_LOB
                             l_subline = str(sfsline2:ISO_SUBLINE)
                             l_exposure = cppliability_all_locations:exposure[2]
                             l_sub_code = l_sub_code + 10
                             l_line_type = "X"
                             do gsn_master_add_liability
                           end

                         next cppliability_all_locations
                         end

                      END
        case "IRPM" : begin
                      l_prior_end_sequence = l_end_sequence - 1
                      access sfpmaster_alias, set sfpmaster_alias:policy_no    = l_policy_no,
                                                  sfpmaster_alias:pol_year     = l_pol_year,
                                                  sfpmaster_alias:end_sequence = l_prior_end_sequence, generic

                      l_premium = 0
                      l_add_irpm_only_once = 0
                      l_premium = sfpmaster:total[8]
                      if sfpmaster:trans_code one of 12, 13, 15 then
                          begin
                          l_previous_total = sfpmaster_alias:total[8]
                          l_diff_total     = l_premium - l_previous_total
                          end
                      l_annual_premium = l_premium
                      if l_premium > 0 then
                          begin
                          l_add_irpm_only_once = 1
                          end

                      if l_premium <> 0 then
                          begin
                          l_sub_code = l_sub_code + 10
                          l_line_type = "Z"
                          do gsn_master_add_property
                          end
                      END
        end

    next sfsline_by_subline
    end

end

procedure access_cppgeneral_prior
begin
l_prior_end_sequence = cppgeneral:end_sequence - 1
access cppgeneral_alias, set cppgeneral_alias:policy_no    = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year     = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = l_prior_end_sequence,
                             cppgeneral_alias:prem_no      = cppgeneral:prem_no,
                             cppgeneral_alias:build_no     = cppgeneral:build_no,
                             cppgeneral_alias:rate_type    = cppgeneral:rate_type, generic

l_prior_cppgeneral_premium_1  = l_prior_cppgeneral_premium_1 + cppgeneral_alias:premium[1]
l_prior_cppgeneral_premium_2  = cppgeneral_alias:premium[2]
l_prior_cppgeneral_premium_3  = cppgeneral_alias:premium[3]
l_prior_cppgeneral_premium_4  = cppgeneral_alias:premium[4]
l_prior_cppgeneral_premium_5  = cppgeneral_alias:premium[5]
l_prior_cppgeneral_premium_6  = cppgeneral_alias:premium[6]
l_prior_cppgeneral_premium_7  = cppgeneral_alias:premium[7]
l_prior_cppgeneral_premium_8  = cppgeneral_alias:premium[8]
l_prior_cppgeneral_premium_9  = cppgeneral_alias:premium[9]
l_prior_cppgeneral_premium_10 = cppgeneral_alias:premium[10]
l_prior_cppgeneral_premium_11 = cppgeneral_alias:premium[11]
l_prior_cppgeneral_premium_12 = cppgeneral_alias:premium[12]

access cppproperty_alias, set cppproperty_alias:policy_no    = cppgeneral:policy_no,
                              cppproperty_alias:pol_year     = cppgeneral:pol_year,
                              cppproperty_alias:end_sequence = l_prior_end_sequence,
                              cppproperty_alias:prem_no      = cppgeneral:prem_no,
                              cppproperty_alias:build_no     = cppgeneral:build_no, generic

l_prior_cppproperty_premium = cppproperty_alias:INFLATION_PREMIUM[1] +
                              cppproperty_alias:inflation_premium[2] +
                              cppproperty_alias:PEAK_SEASON_PREM +
                              cppproperty_alias:GLASS_PREM +
                              cppproperty_alias:SIGNS_ATTACHED_PREM +
                              cppproperty_alias:SIGNS_NOT_ATTACHED_PREM +
                              cppproperty_alias:BUILDING_CODE_PREM +
                              cppproperty_alias:LOSS_UTILITY_PREM +
                              cppproperty_alias:MECHANICAL_BREAKDOWN_PREM +
                              cppproperty_alias:DEBRIS_REMOVAL_PREM +
                              cppproperty_alias:OFF_PREM_OTHER_LOC_PREM +
                              cppproperty_alias:OFF_PREM_IN_TRANSIT_PREM +
                              cppproperty_alias:OUTDOOR_PROPERTY_PREM +
                              cppproperty_alias:PERSONAL_EFFECTS_PREM +
                              cppproperty_alias:PERSONAL_PROPERTY_OTHER_PREM +
                              cppproperty_alias:VALUABLE_PAPERS_PREM +
                              cppproperty_alias:PRECIOUS_METALS_PREM +
                              cppproperty_alias:WATER_BACKUP_PREMIUM +
                              cppproperty_alias:loss_assessment_prem +
                              cppproperty_alias:mcp505_premium +
                              cppproperty_alias:ar_prem

end

procedure access_cppbusiness_prior
begin
l_prior_end_sequence = l_end_sequence - 1
access cppbusiness_alias, set cppbusiness_alias:policy_no    = cppbusiness:policy_no,
                              cppbusiness_alias:pol_year     = cppbusiness:pol_year,
                              cppbusiness_alias:end_sequence = l_prior_end_sequence,
                              cppbusiness_alias:prem_no      = cppbusiness:prem_no,
                              cppbusiness_alias:build_no     = cppbusiness:build_no,
                              cppbusiness_alias:coverage     = cppbusiness:coverage, generic

l_prior_cppbusiness_premium_1  = cppbusiness_alias:bi_premium[1]
l_prior_cppbusiness_premium_2  = cppbusiness_alias:bi_premium[2]
l_prior_cppbusiness_premium_3  = cppbusiness_alias:bi_premium[3]
l_prior_cppbusiness_premium_4  = cppbusiness_alias:bi_premium[4]
l_prior_cppbusiness_premium_5  = cppbusiness_alias:bi_premium[5]

end

procedure access_cppglass_prior
begin
l_prior_end_sequence = cppglass:end_sequence - 1
access cppglass_alias, set cppglass_alias:policy_no    = cppglass:policy_no,
                           cppglass_alias:pol_year     = cppglass:pol_year,
                           cppglass_alias:end_sequence = l_prior_end_sequence,
                           cppglass_alias:prem_no      = cppglass:prem_no,
                           cppglass_alias:build_no     = cppglass:build_no,
                           cppglass_alias:sub_code     = cppglass:sub_code, generic

l_prior_cppglass_premium  = cppglass_alias:glass_premium

end

procedure access_cppcrime1_prior
begin
string l_crime_form[1];

unsigned ascii number l_add_products[1],
                      l_add_premise[1],
                      l_add_crime[1],
                      l_add_inland[1],
                      l_add_glass[1],
                      l_stored_loc[2],
                      l_add_irpm_only_once[1];

l_prior_end_sequence = l_end_sequence - 1
access cppcrime1_alias, set cppcrime1_alias:policy_no    = cppcrime1:policy_no,
                            cppcrime1_alias:pol_year     = cppcrime1:pol_year,
                            cppcrime1_alias:end_sequence = l_prior_end_sequence,
                            cppcrime1_alias:prem_no      = cppcrime1:prem_no,
                            cppcrime1_alias:build_no     = cppcrime1:build_no,
                            cppcrime1_alias:sub_code     = cppcrime1:sub_code, generic

while cppcrime1_alias:policy_no    = cppcrime1:policy_no and
      cppcrime1_alias:pol_year     = cppcrime1:pol_year and
      cppcrime1_alias:end_sequence = l_prior_end_sequence and
      cppcrime1_alias:prem_no      = cppcrime1:prem_no and
      cppcrime1_alias:build_no     = cppcrime1:build_no and
      cppcrime1_alias:sub_code     = cppcrime1:sub_code
   begin
   if cppcrime1_alias:premium > 0 then
       begin
       l_cppcrime1_prior_premium_1 = 0
       l_cppcrime1_prior_total_premium = cppcrime1_alias:premium
       if cppcrime1_alias:code one of "MCP171","MCP172","MCP173","MCP175","MCP177","MCP179","MCP181","MCP183", "MCP771" then
            begin
            switch (cppcrime1_alias:code)
              case "MCP171",
                   "MCP771" : begin
                              l_crime_form  = "A"
                              l_stored_loc  = 17
                              l_form_code   = "101"
                              end
              case "MCP172" : begin
                              l_crime_form  = "B"
                              l_stored_loc  = 18
                              l_form_code   = "115"
                              end
              case "MCP173" : begin
                              l_crime_form  = "C"
                              l_stored_loc  = 19
                              l_form_code   = "120"
                              l_form_code_1 = "130"
                              end
              case "MCP175" : begin
                              l_crime_form   = "D"
                              l_stored_loc   = 20
                              l_form_code    = "125"
                              l_form_code_1  = "130"
                              end
              case "MCP177" : begin
                              l_crime_form  = "E"
                              l_stored_loc  = 21
                              l_form_code   = "125"
                              l_form_code_1 = "130"
                              end
              case "MCP181" : begin
                              l_crime_form  = "L"
                              l_stored_loc  = 22
                              l_form_code   = "170"
                              l_form_code_1 = "171"
                              end
              END  --SWITCH

            end

       access cppcrime_alias, set cppcrime_alias:policy_no    = cppcrime1_alias:policy_no,
                                  cppcrime_alias:pol_year     = cppcrime1_alias:pol_year,
                                  cppcrime_alias:end_sequence = l_end_sequence,
                                  cppcrime_alias:prem_no      = cppcrime1_alias:prem_no,
                                  cppcrime_alias:build_no     = cppcrime1_alias:build_no,
                                  cppcrime_alias:crime_form   = l_crime_form, exact

       l_premium_1 = 0
       l_premium_2 = 0
       while cppcrime_alias:policy_no    = cppcrime1_alias:policy_no and
             cppcrime_alias:pol_year     = cppcrime1_alias:pol_year and
             cppcrime_alias:end_sequence = l_end_sequence and
             cppcrime_alias:prem_no      = cppcrime1_alias:prem_no and
             cppcrime_alias:build_no     = cppcrime1_alias:build_no and
             cppcrime_alias:CRIME_FORM   = l_crime_form
           begin
           l_cppcrime1_prior_premium_1 = l_cppcrime1_prior_total_premium - cppcrime_alias:crime_total[2]
           l_cppcrime1_prior_premium_2 = cppcrime_alias:crime_total[2]

           next cppCRIME_alias
           end

       if l_cppcrime1_prior_premium_1 = 0 and
          cppcrime1_alias:premium <> 0 then
           begin
           l_cppcrime1_prior_premium_1   = cppcrime1_alias:premium
           l_cppcrime1_prior_premium_2   = 0
           end

       end

    next cppcrime1_alias
    end

end

procedure access_cppinland_prior
begin
l_prior_end_sequence = l_end_sequence - 1
access cppinland_alias, set cppinland_alias:policy_no     = cppinland:policy_no,
                            cppinland_alias:pol_year      = cppinland:pol_year,
                            cppinland_alias:end_sequence  = l_prior_end_sequence,
                            cppinland_alias:prem_no       = cppinland:prem_no,
                            cppinland_alias:build_no      = cppinland:build_no,
                            cppinland_alias:sub_code      = cppinland:sub_code, generic

l_cppinland_prior_premium = 0
while cppinland_alias:policy_no     = cppinland:policy_no and
      cppinland_alias:pol_year      = cppinland:pol_year and
      cppinland_alias:end_sequence  = l_prior_end_sequence and
      cppinland_alias:prem_no       = cppinland:prem_no and
      cppinland_alias:build_no      = cppinland:build_no and
      cppinland_alias:sub_code      = cppinland:sub_code
    begin
    l_cppinland_prior_premium = cppinland_alias:premium
    access cppendorse_alias, set cppendorse_alias:policy_no     = cppinland_alias:policy_no,
                                 cppendorse_alias:pol_year      = cppinland_alias:pol_year,
                                 cppendorse_alias:end_sequence  = l_prior_end_sequence,
                                 cppendorse_alias:prem_no       = cppinland_alias:prem_no,
                                 cppendorse_alias:build_no      = cppinland_alias:build_no,
                                 cppendorse_alias:code          = cppinland_alias:code,
                                 cppendorse_alias:sub_code      = l_inland_sub_code, generic

    l_cppinland_prior_total_premium = 0
    while cppendorse_alias:policy_no    = cppinland_alias:policy_no and
          cppendorse_alias:pol_year     = cppinland_alias:pol_year  and
          cppendorse_alias:end_sequence = l_prior_end_sequence and
          cppendorse_alias:prem_no      = cppinland_alias:prem_no and
          cppendorse_alias:build_no     = cppinland_alias:build_no and
          cppendorse_alias:code         = cppinland_alias:code and
          cppendorse_alias:sub_code     = l_inland_sub_code
        begin
        if cppinland_alias:irpm <> 0 then
            begin
            l_cppinland_prior_premium = cppendorse_alias:premium[1] * cppinland_alias:package_mod * cppinland_alias:IRPm
            end
        else
            begin
            l_cppinland_prior_premium = cppendorse_alias:premium[1] * cppinland_alias:package_mod
            end

        l_cppinland_prior_total_PREMIUM = L_cppinland_prior_TOTAL_PREMIUM  + l_cppinland_prior_premium

        next cppendorse_alias
        end

    if l_cppinland_prior_total_premium > cppinland_alias:premium then
        begin
        l_cppinland_prior_premium = l_cppinland_prior_total_premium - l_cppinland_prior_premium
        end


    next cppinland_alias
    end

end

procedure access_boiler_prior
begin
l_prior_end_sequence = l_end_sequence - 1
access cppproperty_alias, set cppproperty_alias:policy_no    = cppproperty:policy_no,
                              cppproperty_alias:pol_year     = cppproperty:pol_year,
                              cppproperty_alias:end_sequence = l_prior_end_sequence,
                              cppproperty_alias:prem_no      = cppproperty:prem_no,
                              cppproperty_alias:build_no     = cppproperty:build_no, generic

l_boiler_prior_premium = 0
while cppproperty_alias:policy_no    = cppproperty:policy_no and
      cppproperty_alias:pol_year     = cppproperty:pol_year and
      cppproperty_alias:end_sequence = l_prior_end_sequence and
      cppproperty_alias:prem_no      = cppproperty:prem_no and
      cppproperty_alias:build_no     = cppproperty:build_no
  begin
  l_boiler_prior_premium  = l_boiler_prior_premium + cppproperty_alias:boiler_premium[1] + cppproperty_alias:boiler_premium[2]

  next cppproperty_alias
  end

end

procedure access_cppliability_prior
begin
l_prior_end_sequence = l_end_sequence - 1
access cppliability_alias,
   set cppliability_alias:policy_no     = l_policy_no,
       cppliability_alias:pol_year      = l_pol_year,
       cppliability_alias:end_sequence  = l_prior_end_sequence,
       cppliability_alias:prem_no       = l_prem_no,
       cppliability_alias:build_no      = l_build_no,
       cppliability_alias:class_code    = l_class_code, generic

l_products_prior_premium = 0
l_premises_prior_premium = 0
while cppliability_alias:policy_no    = l_policy_no and
      cppliability_alias:pol_year     = l_pol_year and
      cppliability_alias:end_sequence = l_prior_end_sequence and
      cppliability_alias:prem_no      = l_prem_no and
      cppliability_alias:build_No     = l_build_no and
      cppliability_alias:class_code   = l_class_code
  begin
  if cppliability_alias:minimum_premium[1] <> 0 then
      begin
      l_premises_prior_premium = l_premises_prior_premium +
                                 cppliability_alias:minimum_premium[1] -
                                 cppliability_alias:prem[2]
      l_products_prior_premium = cppliability_alias:prem[2]
      end
  else
      begin
      l_premises_prior_premium = l_premises_prior_premium +
                                 cppliability_alias:prem[1] +
                                 cppliability_alias:independent_contractor_premium +
                                 cppliability_alias:total_misc +
                                 cppliability_alias:total_endorsements
      l_products_prior_premium = cppliability_alias:prem[2]
      end

  do access_sfpend_prior
  if l_mcl426_policy_wide = "Y" then
      begin
      if l_mcl426_first_time_prior = "Y" then
          begin
          l_mcl426_first_time_prior = "N"
          l_premises_prior_premium = l_premises_prior_premium - l_prior_mcl426_premium
          end
      end
  else
      l_premises_prior_premium = l_premises_prior_premium - l_prior_mcl426_premium

  if l_mcl428_policy_wide = "Y" then
      begin
      if l_mcl428_first_time_prior = "Y" then
          begin
          l_mcl428_first_time_prior = "N"
          l_premises_prior_premium = l_premises_prior_premium - l_prior_mcl428_premium
          end
      end
  else
      l_premises_prior_premium = l_premises_prior_premium - l_prior_mcl428_premium

  if l_mcl433_policy_wide = "Y" then
      begin
      if l_mcl433_first_time_prior = "Y" then
          begin
          l_mcl433_first_time_prior = "N"
          l_premises_prior_premium = l_premises_prior_premium - l_prior_mcl433_premium
          end
      end
  else
      l_premises_prior_premium = l_premises_prior_premium - l_prior_mcl433_premium

  if l_bu2510_policy_wide = "Y" then
      begin
      if l_bu2510_first_time_prior = "Y" then
          begin
          l_bu2510_first_time_prior = "N"
          l_premises_prior_premium = l_premises_prior_premium - l_prior_bu2510_premium
          end
      end
  else
      l_premises_prior_premium = l_premises_prior_premium - l_prior_bu2510_premium


  next cppliability_alias
  end

end

procedure access_sfpmisc_prior
begin
l_prior_end_sequence = l_end_sequence - 1
Access sfpmisc_alias, Set sfpmisc_alias:policy_NO    = l_policy_NO,
                          sfpmisc_alias:pol_Year     = l_pol_Year,
                          sfpmisc_alias:end_sequence = l_prior_end_sequence, Generic

if L_prior_misc one of 0 then
    begin
    While sfpmisc_alias:policy_NO    = l_policy_NO and
          sfpmisc_alias:pol_year     = l_pol_year and
          sfpmisc_alias:end_sequence = l_prior_end_sequence
        Begin
        switch(sfpmisc_alias:LOB_END_CODE)
          case "P" : L_prior_MISC_PREMIUM[1] = L_prior_MISC_PREMIUM[1] + sfpmisc_alias:PREMIUM
          case "L" : l_prior_misc_premium[2] = L_prior_MISC_PREMIUM[2] + sfpmisc_alias:PREMIUM  --liability
          case "I" : l_prior_misc_premium[3] = L_prior_MISC_PREMIUM[3] + sfpmisc_alias:PREMIUM  --inland marine
          case "U" : l_prior_misc_premium[4] = L_prior_MISC_PREMIUM[4] + sfpmisc_alias:PREMIUM  --umbrella
          End
        l_prior_misc = 1

        Next sfpMISC_alias
        END
    end
end

procedure access_cppproperty
begin
access cppendorse, set cppendorse:policy_no     = l_policy_no,
                       cppendorse:pol_year      = l_pol_year,
                       cppendorse:end_sequence  = l_end_sequence,
                       cppendorse:prem_no       = l_prem_no,
                       cppendorse:build_no      = l_build_no,
                       cppendorse:code          = "MCP109", generic

l_limit[26] = 0
while cppendorse:policy_no    = l_policy_no and
      cppendorse:pol_year     = l_pol_year  and
      cppendorse:end_sequence = l_end_sequence and
      cppendorse:prem_no      = l_prem_no and
      cppendorse:build_no     = l_build_no and
      cppendorse:code         = "MCP109"
   begin
   if cppendorse:code one of "MCP109" then
       begin
       l_limit[26] = l_limit[26] + cppendorse:limit[1]
       end

   next cppendorse
   end

access cppproperty, set cppproperty:policy_no    = l_policy_no,
                        cppproperty:pol_year     = l_pol_year,
                        cppproperty:end_sequence = l_end_sequence,
                        cppproperty:prem_no      = l_prem_no,
                        cppproperty:build_no     = l_build_no, generic

l_property_premium = 0
while cppproperty:policy_no    = l_policy_no and
      cppproperty:pol_year     = l_pol_year and
      cppproperty:end_sequence = l_end_sequence and
      cppproperty:prem_no      = l_prem_no and
      cppproperty:build_no     = l_build_no
   begin
   l_property_premium = l_property_premium + cppPROPERTY:INFLATION_PREMIUM[1] +
               cppproperty:inflation_premium[2] +
               cppPROPERTY:PEAK_SEASON_PREM +
               cppPROPERTY:GLASS_PREM +
               cppPROPERTY:SIGNS_ATTACHED_PREM +
               cppPROPERTY:SIGNS_NOT_ATTACHED_PREM +
               cppPROPERTY:BUILDING_CODE_PREM +
               cppPROPERTY:LOSS_UTILITY_PREM +
               cppPROPERTY:MECHANICAL_BREAKDOWN_PREM +
               cppPROPERTY:DEBRIS_REMOVAL_PREM +
               cppPROPERTY:OFF_PREM_OTHER_LOC_PREM +
               cppPROPERTY:OFF_PREM_IN_TRANSIT_PREM +
               cppPROPERTY:OUTDOOR_PROPERTY_PREM +
               cppPROPERTY:PERSONAL_EFFECTS_PREM +
               cppPROPERTY:PERSONAL_PROPERTY_OTHER_PREM +
               cppPROPERTY:VALUABLE_PAPERS_PREM +
               cppPROPERTY:PRECIOUS_METALS_PREM +
               cppPROPERTY:WATER_BACKUP_PREMIUM +
               cppproperty:loss_assessment_prem +
               cppproperty:mcp505_premium +
               cppproperty:ar_prem

   l_limit[10] = l_limit[10] + cppproperty:ar_limit +
                 cppPROPERTY:GLASS_LIMIT +
                 cppproperty:SIGNS_NOT_ATTACHED +
                 cppproperty:LOSS_UTILITY +
                 cppproperty:DEBRIS_REMOVAL +
                 cppproperty:MECHANICAL_BREAKDOWN +
                 cppproperty:OFF_PREM_OTHER_LOCATION +
                 cppproperty:OFF_PREM_IN_TRANSIT +
                 cppproperty:loss_assessment +
                 cppproperty:off_prem_in_transit_manual +
                 cppproperty:OUTDOOR_PROPERTY +
                 cppproperty:PERSONAL_EFFECTS +
                 cppproperty:personal_property_of_others +
                 cppproperty:VALUABLE_PAPERS +
                 cppproperty:PRECIOUS_METALS   --add water backup limit

   next cppproperty
   end

end

procedure access_sfpend
begin
access sfpend, set sfpend:policy_no    = l_policy_no,
                   sfpend:pol_year     = l_pol_year,
                   sfpend:end_sequence = l_end_sequence, generic

l_mcl426 = "N"
l_mcl428 = "N"
l_mcl433 = "N"
l_bu2510 = "N"
l_mcl426_policy_wide = "N"
l_mcl428_policy_wide = "N"
l_mcl433_policy_wide = "N"
l_bu2510_policy_wide = "N"
l_mcl426_premium = 0
l_mcl428_premium = 0
l_mcl433_premium = 0
l_bu2510_premium = 0
while sfpend:policy_no    = l_policy_no and
      sfpend:pol_year     = l_pol_year and
      sfpend:end_sequence = l_end_sequence
    begin
    if sfpend:code one of "MCL426" then
        begin
        l_mcl426 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl426_first_time = "Y" then
            begin
            l_mcl426_premium = sfpend:premium
            l_mcl426_policy_wide = "Y"
            end
        else
            begin
            l_mcl426_premium = 0
            end
        end
    if sfpend:code one of "MCL428" then
        begin
        l_mcl428 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl428_first_time = "Y" then
            begin
            l_mcl428_premium = sfpend:premium
            l_mcl428_policy_wide = "Y"
            end
        else
            l_mcl428_premium = 0
        end
    if sfpend:code one of "MCL433" then
        begin
        l_mcl433 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl433_first_time = "Y" then
            begin
            l_mcl433_premium = sfpend:premium
            l_mcl433_policy_wide = "Y"
            end
        else
            l_mcl433_premium = 0
        end
    if sfpend:code one of "BU2510" then
        begin
        l_bu2510 = "Y"
        if sfpend:prem_no = 0 and
           l_bu2510_first_time = "Y" then
            begin
            l_bu2510_premium = sfpend:premium
            l_bu2510_policy_wide = "Y"
            end
        else
            l_bu2510_premium = 0
        end

    next sfpend
    end

end

procedure access_sfpend_prior
begin
l_prior_end_sequence = l_end_sequence - 1
access sfpend, set sfpend:policy_no    = l_policy_no,
                   sfpend:pol_year     = l_pol_year,
                   sfpend:end_sequence = l_prior_end_sequence, generic

l_mcl426 = "N"
l_mcl428 = "N"
l_mcl433 = "N"
l_bu2510 = "N"
l_mcl426_policy_wide = "N"
l_mcl428_policy_wide = "N"
l_mcl433_policy_wide = "N"
l_bu2510_policy_wide = "N"
l_prior_mcl426_premium = 0
l_prior_mcl428_premium = 0
l_prior_mcl433_premium = 0
l_prior_bu2510_premium = 0
while sfpend:policy_no    = l_policy_no and
      sfpend:pol_year     = l_pol_year and
      sfpend:end_sequence = l_prior_end_sequence
    begin
    if sfpend:code one of "MCL426" then
        begin
        l_mcl426 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl426_first_time_prior = "Y" then
            begin
            l_prior_mcl426_premium = sfpend:premium
            l_mcl426_policy_wide = "Y"
            end
        else
            begin
            l_prior_mcl426_premium = 0
            end
        end
    if sfpend:code one of "MCL428" then
        begin
        l_mcl428 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl428_first_time_prior = "Y" then
            begin
            l_prior_mcl428_premium = sfpend:premium
            l_mcl428_policy_wide = "Y"
            end
        else
            l_prior_mcl428_premium = 0
        end
    if sfpend:code one of "MCL433" then
        begin
        l_mcl433 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl433_first_time_prior = "Y" then
            begin
            l_prior_mcl433_premium = sfpend:premium
            l_mcl433_policy_wide = "Y"
            end
        else
            l_prior_mcl433_premium = 0
        end
    if sfpend:code one of "BU2510" then
        begin
        l_bu2510 = "Y"
        if sfpend:prem_no = 0 and
           l_bu2510_first_time_prior = "Y" then
            begin
            l_prior_bu2510_premium = sfpend:premium
            l_bu2510_policy_wide = "Y"
            end
        else
            l_prior_bu2510_premium = 0
        end

    next sfpend
    end

end

procedure access_sfpend_1
begin
access sfpend, set sfpend:policy_no    = l_policy_no,
                   sfpend:pol_year     = l_pol_year,
                   sfpend:end_sequence = l_end_sequence, generic

l_mcl426 = "N"
l_mcl428 = "N"
l_mcl433 = "N"
l_bu2510 = "N"
l_mcl426_policy_wide = "N"
l_mcl428_policy_wide = "N"
l_mcl433_policy_wide = "N"
l_bu2510_policy_wide = "N"
l_mcl426_premium = 0
l_mcl428_premium = 0
l_mcl433_premium = 0
l_bu2510_premium = 0
while sfpend:policy_no    = l_policy_no and
      sfpend:pol_year     = l_pol_year and
      sfpend:end_sequence = l_end_sequence
    begin
    if sfpend:code one of "MCL426" then
        begin
        l_mcl426 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl426_first_time_1 = "Y" then
            begin
            l_mcl426_premium = sfpend:premium
            l_mcl426_policy_wide = "Y"
            end
        else
            begin
            l_mcl426_premium = 0
            end
        end
    if sfpend:code one of "MCL428" then
        begin
        l_mcl428 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl428_first_time_1 = "Y" then
            begin
            l_mcl428_premium = sfpend:premium
            l_mcl428_policy_wide = "Y"
            end
        else
            l_mcl428_premium = 0
        end
    if sfpend:code one of "MCL433" then
        begin
        l_mcl433 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl433_first_time_1 = "Y" then
            begin
            l_mcl433_premium = sfpend:premium
            l_mcl433_policy_wide = "Y"
            end
        else
            l_mcl433_premium = 0
        end
    if sfpend:code one of "BU2510" then
        begin
        l_bu2510 = "Y"
        if sfpend:prem_no = 0 and
           l_bu2510_first_time_1 = "Y" then
            begin
            l_bu2510_premium = sfpend:premium
            l_bu2510_policy_wide = "Y"
            end
        else
            l_bu2510_premium = 0
        end

    next sfpend
    end

end

procedure access_sfpend_1_prior
begin
l_prior_end_sequence = l_end_sequence - 1
access sfpend, set sfpend:policy_no    = l_policy_no,
                   sfpend:pol_year     = l_pol_year,
                   sfpend:end_sequence = l_prior_end_sequence, generic

l_mcl426 = "N"
l_mcl428 = "N"
l_mcl433 = "N"
l_bu2510 = "N"
l_mcl426_policy_wide = "N"
l_mcl428_policy_wide = "N"
l_mcl433_policy_wide = "N"
l_bu2510_policy_wide = "N"
l_prior_mcl426_premium = 0
l_prior_mcl428_premium = 0
l_prior_mcl433_premium = 0
l_prior_bu2510_premium = 0
while sfpend:policy_no    = l_policy_no and
      sfpend:pol_year     = l_pol_year and
      sfpend:end_sequence = l_prior_end_sequence
    begin
    if sfpend:code one of "MCL426" then
        begin
        l_mcl426 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl426_first_time_1_prior = "Y" then
            begin
            l_prior_mcl426_premium = sfpend:premium
            l_mcl426_policy_wide = "Y"
            end
        else
            begin
            l_prior_mcl426_premium = 0
            end
        end
    if sfpend:code one of "MCL428" then
        begin
        l_mcl428 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl428_first_time_1_prior = "Y" then
            begin
            l_prior_mcl428_premium = sfpend:premium
            l_mcl428_policy_wide = "Y"
            end
        else
            l_prior_mcl428_premium = 0
        end
    if sfpend:code one of "MCL433" then
        begin
        l_mcl433 = "Y"
        if sfpend:prem_no = 0 and
           l_mcl433_first_time_1_prior = "Y" then
            begin
            l_prior_mcl433_premium = sfpend:premium
            l_mcl433_policy_wide = "Y"
            end
        else
            l_prior_mcl433_premium = 0
        end
    if sfpend:code one of "BU2510" then
        begin
        l_bu2510 = "Y"
        if sfpend:prem_no = 0 and
           l_bu2510_first_time_1_prior = "Y" then
            begin
            l_prior_bu2510_premium = sfpend:premium
            l_bu2510_policy_wide = "Y"
            end
        else
            l_prior_bu2510_premium = 0
        end

    next sfpend
    end

end

procedure collect_misc_premium
BEGIN
Access sfpMISC, Set sfpMISC:policy_NO    = l_policy_NO,
                    sfpmisc:pol_Year     = l_pol_Year,
                    sfpmisc:end_sequence = l_end_sequence, Generic

if L_misc one of 0 then
    begin
    While sfpMISC:policy_NO    = l_policy_NO and
          sfpmisc:pol_year     = l_pol_year and
          sfpmisc:end_sequence = l_end_sequence
        Begin
        switch(sfpMISC:LOB_END_CODE)
          case "P" : L_MISC_PREMIUM[1] = L_MISC_PREMIUM[1] + sfpMISC:PREMIUM
          case "L" : l_misc_premium[2] = L_MISC_PREMIUM[2] + sfpMISC:PREMIUM  --liability
          case "I" : l_misc_premium[3] = L_MISC_PREMIUM[3] + sfpMISC:PREMIUM  --inland marine
          case "U" : l_misc_premium[4] = L_MISC_PREMIUM[4] + sfpMISC:PREMIUM  --umbrella
          End
        l_misc = 1

        Next sfpMISC
        END
    end

End

procedure get_correct_state_and_county
BEGIN
access cppgeneral, set cppgeneral:policy_no    = sfplocation:policy_no,
                       cppgeneral:pol_year     = sfplocation:pol_year,
                       cppgeneral:end_sequence = sfplocation:end_sequence,
                       cppgeneral:prem_no      = sfplocation:prem_no,
                       cppgeneral:build_no     = sfplocation:build_no, generic

if cppgeneral:policy_no    = sfplocation:policy_no and
   cppgeneral:pol_year     = sfplocation:pol_year and
   cppgeneral:end_sequence = sfplocation:end_sequence and
   cppgeneral:prem_no      = sfplocation:prem_no and
   cppgeneral:build_no     = sfplocation:build_no then
    begin
    do check_for_county(cppgeneral:state,cppgeneral:county)
    l_state = cppgeneral:state
    end

do get_liability
if cppliability:policy_no     = sfplocation:policy_no and
   CPPLIABility:pol_year      = sfplocation:pol_year and
   CPPLIABility:end_sequence  = sfplocation:end_sequence and
   cppliability:prem_no       = sfplocation:prem_no and
   cppliability:build_no      = sfplocation:build_No then
    begin
    do check_for_county(cppliability:state,cppliability:county)
    l_state = cppliability:state
    end

access cppinland, set cppinland:policy_no     = sfplocation:policy_no,
                      cppinland:pol_year      = sfplocation:pol_year,
                      cppinland:end_sequence  = sfplocation:end_sequence,
                      cppinland:prem_no       = sfplocation:prem_no,
                      cppinland:build_no      = sfplocation:build_no, generic

if cppinland:policy_no     = sfplocation:policy_no and
   cppinland:pol_year      = sfplocation:pol_year and
   cppinland:end_sequence  = sfplocation:end_sequence and
   cppinland:prem_no       = sfplocation:prem_no and
   cppinland:build_no      = sfplocation:build_no then
    begin
    do check_for_county(cppinland:state,cppinland:county)
    l_state = cppinland:state
    end

END

procedure access_cpsclass(number p_state,number p_group_no,number p_sub_group,number p_class_code, number p_sub_code)

BEGIN

local unsigned ascii number l_cpsclass_line_of_business = 8;
l_iso_prop_class_code  = ""
l_iso_liab_class_code  = ""
l_iso_sic_code         = ""
l_iso_crime_class_code = ""
l_iso_class_code       = ""

Access CPSCLASS_ALIAS, Set CPSCLASS_ALIAS:COMPANY_ID       = l_COMPANY_ID,
                           CPSCLASS_ALIAS:STATE            = p_STATE,
                           CPSCLASS_ALIAS:LINE_OF_BUSINESS = l_cpsclass_line_of_business,
                           cpsclass_alias:group_no         = p_group_no,
                           cpsclass_alias:sub_group        = p_sub_group,
                           cpsclass_alias:class_code       = p_class_code,
                           cpsclass_alias:sub_code         = p_sub_code, generic

while CPSCLASS_ALIAS:COMPANY_ID       = sfpNAME:COMPANY_ID and
      CPSCLASS_ALIAS:STATE            = p_STATE and
      CPSCLASS_ALIAS:LINE_OF_BUSINESS = l_cpsclass_line_of_business and
      CPSCLASS_ALIAS:group_no         = p_group_no and
      cpsclass_alias:sub_group        = p_sub_group and
      cpsclass_alias:class_code       = p_class_code and
      cpsclass_alias:sub_code         = p_sub_code
    begin
    if (sfpname:eff_date >= cpsclass_alias:eff_date and
       (sfpname:eff_date <= cpsclass_alias:exp_date or
       cpsclass_alias:exp_date = 0)) then
        begin
        l_iso_prop_class_code  = cpsclass_alias:iso_prop_class_code
        l_iso_liab_class_code  = cpsclass_alias:iso_liab_class_code
        l_iso_sic_code         = cpsclass_alias:sic
        l_iso_crime_class_code = cpsclass_alias:iso_crime_class_code
/*        if l_policy_no one of 17212 and
           l_end_sequence one of 4 and
           l_pol_year one of 2011then
          {
            write("<014>")
            write("%c%n",1005,l_policy_no)
            write("%c%n",1015,p_state)
            write("%c%n",1025,p_group_no)
            write("%c%n",1035,p_sub_group)
            write("%c%n",1045,p_class_code)
            write("%c%n",1055,p_sub_code)

            write("%c%s%x",03005,"l_iso_crime_class_code", l_iso_crime_class_code)
            write("%c%s%x",04005,"l_iso_prop_class_code ", l_iso_prop_class_code)
            write("%c%s%x",05005,"l_iso_liab_class_code ", l_iso_liab_class_code)
            write("%c%s%x",06005,"p_class_code", p_class_code)
            Read (23,1,"Press Enter to Continue ",L_ENTER,1)
          } */
        if trun(l_iso_crime_class_code) = "" and
           trun(l_iso_prop_class_code) <> "" then
          begin
            l_iso_crime_class_code = cpsclass_alias:iso_prop_class_code
          end
        end

    next cpsclass_alias
    END

END

procedure access_cpstransitional(number p_state,
                                 number p_group_no,
                                 number p_sub_group,
                                 number p_class_code,
                                 number p_sub_code)
BEGIN
local unsigned ascii number l_cpstransitional_line_of_business = 8;

Access cpstransitional_ALIAS, Set cpstransitional_ALIAS:COMPANY_ID       = l_COMPANY_ID,
                                  cpstransitional_ALIAS:STATE            = p_STATE,
                                  cpstransitional_ALIAS:LINE_OF_BUSINESS = l_cpstransitional_line_of_business,
                                  cpstransitional_alias:group_no         = p_group_no,
                                  cpstransitional_alias:sub_group        = p_sub_group,
                                  cpstransitional_alias:class_code       = p_class_code,
                                  cpstransitional_alias:sub_code         = p_sub_code, generic

while cpstransitional_ALIAS:COMPANY_ID       = sfpNAME:COMPANY_ID and
      cpstransitional_ALIAS:STATE            = p_STATE and
      cpstransitional_ALIAS:LINE_OF_BUSINESS = l_cpstransitional_line_of_business and
      cpstransitional_ALIAS:group_no         = p_group_no and
      cpstransitional_alias:sub_group        = p_sub_group and
      cpstransitional_alias:class_code       = p_class_code and
      cpstransitional_alias:sub_code         = p_sub_code
  begin
    if (sfpname:eff_date >= cpstransitional_alias:eff_date and
       (sfpname:eff_date <= cpstransitional_alias:exp_date or
       cpstransitional_alias:exp_date = 0)) then
      begin
        l_iso_prop_class_code  = cpstransitional_alias:iso_prop_class_code

        if l_iso_crime_class_code = "" and
           val(cpstransitional_alias:iso_crime_class_code) <> 0 then   --not a number
          {
            l_iso_crime_class_code = cpstransitional_alias:iso_crime_class_code
          }
        if cppgeneral:res_condo = 1 and
           cppgeneral:class_code one of 0030,0031 then
            begin
            l_iso_prop_class_code  = "0332"
            end

        l_iso_sic_code         = cpstransitional_alias:sic
        end

    next cpstransitional_alias
    END

END

Procedure PRO_RATA
Begin
I_EFF_DATE = Dateadd(sfpmaster:TRANS_EXP,0,-1)
I_SHORT_RATE = sfpmaster:SHORT_RATE
I_TOTAL_DAYS = I_EFF_DATE - sfpmaster:TRANS_EXP
I_CX_DAYS = I_EFF_DATE - sfpmaster:TRANS_EFF

Include "prorata.pro"
End

procedure check_for_deleted_location
BEGIN
local file gsn_master_prior = alias for gsn_master;
local file sfpname_current = alias for sfpname;
local file sfpmaster_current = alias for sfpmaster;

local signed ascii number l_difference[9] = 0,
                         l_save_prem_no[4],
                         l_prior_end_sequence[4],
                         l_save_build_no[4];

local array [10] of unsigned ascii number l_saved_subline[4];
local unsigned ascii number l_looping[4];
string l_policy_suffix[3];
local unsigned ascii number L_current_trans_code[2];

wdate l_trans_date,
     l_policy_eff_date,
     l_trans_eff_date,
     l_trans_exp_date,
     l_policy_exp_date;

access gsn_master_loop,
  set gsn_master_loop:policy_no        = l_hold_policy_no,
      gsn_master_loop:pol_year         = l_hold_pol_year,
      gsn_master_loop:end_sequence     = l_hold_end_sequence, generic

while gsn_master_loop:policy_no        = l_hold_policy_no and
     gsn_master_loop:pol_year         = l_hold_pol_year and
     gsn_master_loop:end_sequence     = l_hold_end_sequence
   begin

   previous gsn_master_loop
   end

if gsn_master_loop:policy_no = l_hold_policy_no and   --make sure there is a prior to add something from.
   gsn_master_loop:pol_year   = l_hold_pol_year then
    begin
    l_prior_end_sequence = gsn_master_loop:end_sequence

    access gsn_master_current,
      set gsn_master_current:policy_no    = l_hold_policy_no,
          gsn_master_current:pol_year     = l_hold_pol_year,
          gsn_master_current:end_sequence = l_hold_end_sequence, generic

    access sfpname_current,
      set sfpname_current:policy_no    = l_hold_policy_no,
          sfpname_current:pol_year     = l_hold_pol_year,
          sfpname_current:end_sequence = l_hold_end_sequence, generic

    access sfpmaster_current,
      set sfpmaster_current:policy_no    = l_hold_policy_no,
          sfpmaster_current:pol_year     = l_hold_pol_year,
          sfpmaster_current:end_sequence = l_hold_end_sequence, generic

    if gsn_master_current:policy_no    = l_hold_policy_no and
       gsn_master_current:pol_year     = l_hold_pol_year and
       gsn_master_current:end_sequence = l_hold_end_sequence then
        begin
        l_current_trans_code  = gsn_master_current:trans_code
        l_trans_date          = gsn_master_current:trans_date
        l_policy_eff_date     = gsn_master_current:policy_eff_date
        l_policy_exp_date     = gsn_master_current:policy_exp_date
        l_trans_eff_date      = gsn_master_current:trans_eff_date
        l_trans_exp_date      = gsn_master_current:trans_exp_date
        l_policy_suffix       = gsn_master_current:policy_suffix
        end

    access gsn_master_prior,
      set gsn_master_prior:policy_no        = l_hold_policy_no,
          gsn_master_prior:pol_year         = l_hold_pol_year,
          gsn_master_prior:end_sequence     = l_prior_end_sequence, generic

    while gsn_master_prior:policy_no        = l_hold_policy_no and
          gsn_master_prior:pol_year         = l_hold_pol_year and
          gsn_master_prior:end_sequence     = l_prior_end_sequence
        begin
        access gsn_master_current,
              set gsn_master_current:policy_no        = gsn_master_prior:policy_no,
                  gsn_master_current:pol_year         = gsn_master_prior:pol_year,
                  gsn_master_current:end_sequence     = l_hold_end_sequence,
                  gsn_master_current:prem_no          = gsn_master_prior:prem_no,
                  gsn_master_current:build_no         = gsn_master_prior:build_no,
                  gsn_master_current:line_of_business = gsn_master_prior:line_of_business,
                  gsn_master_current:lob_subline      = gsn_master_prior:lob_subline,
                  gsn_master_current:line_type        = gsn_master_prior:line_type, generic

        if gsn_master_current:policy_no        <> gsn_master_prior:policy_no or
           gsn_master_current:pol_year         <> gsn_master_prior:pol_year or
           gsn_master_current:end_sequence     <> l_hold_end_sequence or
           gsn_master_current:prem_no          <> gsn_master_prior:prem_no or
           gsn_master_current:build_no         <> gsn_master_prior:build_no or
           gsn_master_current:line_of_business <> gsn_master_prior:line_of_business or
           gsn_master_current:lob_subline      <> gsn_master_prior:lob_subline then
            begin
            l_premium = gsn_master_prior:annual_premium

            if sfpmaster_current:trans_eff <> sfpname_current:eff_date then
                {
                I_EFF_DATE = Dateadd(l_trans_exp_date,0,-1)
                I_SHORT_RATE = SFPMASTER_current:SHORT_RATE
                I_TOTAL_DAYS = I_EFF_DATE - l_TRANS_EXP_date
                I_CX_DAYS = I_EFF_DATE - l_TRANS_EFF_date
                Include "prorata.pro"
                l_difference = l_premium * I_pro_rata
                l_premium = l_difference
                }
            l_premium = l_premium * -1
            if gsn_master_prior:mark_as_deleted_location not one of 1 then   --this will eliminate adding the location to every subsquent endorsement
              begin
                add gsn_master_current
                    begin
                    gsn_master_current:POLICY_NO                = gsn_master_prior:policy_no
                    gsn_master_current:POL_YEAR                 = gsn_master_prior:pol_year
                    gsn_master_current:END_SEQUENCE             = l_hold_end_sequence
                    gsn_master_current:PREM_NO                  = gsn_master_prior:prem_no
                    gsn_master_current:BUILD_NO                 = gsn_master_prior:build_No
                    gsn_master_current:lob_subline              = gsn_master_prior:lob_subline
                    gsn_master_current:line_of_business         = gsn_master_prior:line_of_business
                    gsn_master_current:line_type                = gsn_master_prior:line_type
                    gsn_master_current:SUB_CODE                 = gsn_master_prior:sub_code
                    gsn_master_current:record_rdf               = gsn_master_prior:record_rdf/raw
                    gsn_master_current:trans_date               = l_trans_date
                    gsn_master_current:trans_code               = l_current_trans_code
                    gsn_master_current:policy_eff_date          = l_policy_eff_date
                    gsn_master_current:trans_eff_date           = l_trans_eff_date
                    gsn_master_current:trans_exp_date           = l_trans_exp_date
                    gsn_master_current:save_current_premium     = l_premium
                    gsn_master_current:premium                  = l_Premium
                    gsn_master_current:annual_premium           = gsn_master_prior:annual_premium
                    gsn_master_current:accounting_date          = l_ending_date
                    gsn_master_current:mark_as_deleted_location = 1
                    gsn_master_current:exposure_base            = "N/A"
                    gsn_master_current:iso_CF_year_of_construction   = l_construction_year
                    gsn_master_current:iso_bop_year_of_construction  = "N/A"
                    END
                end

            end

        next gsn_master_prior
        end

    end

END

procedure check_for_endorsement

BEGIN
l_save_premium = 0

access sfpmaster, set sfpmaster:policy_no    = l_policy_no,
                      sfpmaster:pol_year     = l_pol_year,
                      sfpmaster:end_sequence = l_end_sequence, generic

if sfpmaster:trans_code one of 11,12,13,15,16 then
    begin
    l_save_premium = l_premium
    if sfpmaster:trans_code one of 11 then
        begin
        if sfpmaster:trans_eff = sfpname:eff_date then
            begin
            l_annual_premium = l_annual_premium * -1
            l_premium = l_premium * -1
            end
        else
            begin
            do pro_rata
            l_diff_total = l_annual_premium * I_pro_rata
            l_premium = l_diff_total * -1
            l_annual_premium = l_annual_premium * -1
            end
        end
    else
    if sfpmaster:trans_code one of 16 then
        begin
        if sfpmaster:trans_eff = sfpname:eff_date then
            begin
            l_premium = l_premium
            l_annual_premium = l_annual_premium
            end
        else
            begin
            do pro_rata
            l_diff_total = l_annual_premium * I_pro_rata
            l_annual_premium = l_annual_premium
            l_premium = l_diff_total
            end
        end
    else
        begin
        if l_diff_total <> 0 then
            begin
            if sfpmaster:trans_eff <> sfpname:eff_date then
                begin
                do pro_rata
                l_diff_total = l_diff_total * I_pro_rata
                end
            l_premium = l_diff_total
            end
        else
        if l_diff_total = 0 then
            begin
            l_premium = l_diff_total
            end
        end
    end
END

procedure gsn_master_add_property
BEGIN
string l_auto_state[2];

--l_annual_premium = l_premium
if l_end_sequence > 0 then
    begin
    do check_for_endorsement
    end

if sfpname:original_eff_date <= 01.25.2016 and
   sfpname:eff_date >= 01.25.2016 then
    begin
    access sfpname_alias,
       set sfpname_alias:policy_no    = sfpname:policy_no,
           sfpname_alias:pol_year     = sfpname:pol_year,
           sfpname_alias:end_sequence = 0, exact

    if sfpname_alias:policy_no    = sfpname:policy_no and
       sfpname_alias:pol_year     = sfpname:pol_year and
       sfpname_alias:end_sequence = 0 then
        begin
        if sfpname_alias:trans_code one of 10 then
            begin
            l_policy_suffix = 0
            end
        else
            begin
            l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
            end
        end
    else
        begin
        l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
        end
    end
else
    begin
    l_policy_suffix = 0
    end

access sfscompany, set sfscompany:company_id = l_company_id, exact

access sfsline2, set sfsline2:Company_id       = l_company_id,
                     sfsline2:line_of_business = l_line_of_business,
                     sfsline2:lob_subline      = l_lob_subline , exact

access gsn_master,
   set gsn_master:policy_no = l_policy_no,
       gsn_master:pol_year = l_pol_year,
       gsn_master:end_sequence = l_end_sequence,
       gsn_master:prem_no = l_prem_no,
       gsn_master:build_no = l_build_no,
       gsn_master:line_of_business = l_line_of_business,
       gsn_master:lob_subline = l_lob_subline,
       gsn_master:line_type = l_line_type,
       gsn_master:sub_code = l_sub_code, generic


if gsn_master:policy_no <> l_policy_no or
   gsn_master:pol_year <> l_pol_year or
   gsn_master:end_sequence <> l_end_sequence or
   gsn_master:prem_no <> l_prem_no or
   gsn_master:build_no <> l_build_no or
   gsn_master:line_of_business <> l_line_of_business or
   gsn_master:lob_subline <> l_lob_subline or
   gsn_master:line_type <> l_line_type or
   gsn_master:sub_code <> l_sub_code then
begin
add gsn_master
    begin
    gsn_master:POLICY_NO                         = l_policy_no
    gsn_master:POL_YEAR                          = l_pol_year
    gsn_master:END_SEQUENCE                      = l_end_sequence
    gsn_master:PREM_NO                           = l_prem_no
    gsn_master:BUILD_NO                          = l_build_No
    gsn_master:lob_subline                       = l_lob_subline
    gsn_master:line_of_business                  = l_Line_of_business
    gsn_master:line_type                         = l_line_type
    gsn_master:sub_code                          = l_sub_code
    gsn_master:SEQUENCE_NUMBER                   = l_END_SEQUENCE
    gsn_master:policy_suffix                     = str(l_policy_suffix,"999")
    gsn_master:ACCOUNTING_DATE                   = l_ending_date
    gsn_master:eff_date                          = sfpname:eff_date
    gsn_master:POLICY_EFF_DATE                   = sfpname:eff_date
    gsn_master:POLICY_EXP_DATE                   = sfpname:exp_date
    gsn_master:trans_exp_date                    = sfpmaster:trans_exp
    gsn_master:POLICY_INDICATOR                  = L_POLICY_INDICATOR
    gsn_master:TRANS_EFF_DATE                    = sfpmaster:trans_eff
    gsn_master:trans_code                        = sfpmaster:trans_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:payment_plan                      = l_payment_plan
    if l_retro_date = 00.00.0000 then
    {
       l_claims_made = "OC"
    }
    else
    {
       l_claims_made = "CM"
    }

/*    if l_claims_made one of "", " " then
    {
       l_claims_made = "OC"
    }
*/
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = l_claims_made

    l_insured_name = ""
    I_rev_name = ""
    i_name = sfpname:name[1]
    include "sfsrevname7.pro"
    l_insured_name = I_rev_name
    if trun(sfpname:name[2]) <> "" then
        begin
        i_name = sfpname:name[2]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    if trun(sfpname:name[3]) <> "" then
        begin
        i_name = sfpname:name[3]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    gsn_master:INSURED_NAME                      = l_insured_name

    gsn_master:INSURED_ADDRESS                   = trun(sfpname:address[1]) + " " + trun(sfpname:address[2]) + " " + trun(sfpname:address[3])
    gsn_master:INSURED_CITY                      = sfpname:city
    gsn_master:INSURED_STATE                     = sfpname:str_state
    gsn_master:INSURED_ZIP[1,5]                  = sfpname:str_zipCode[1,5]
    gsn_master:SIC_CODE                          = l_iso_sic_code
    gsn_master:COMPANY_NAME                      = trun(sfscompany:name[1]) + " " + sfscompany:name[2]
    gsn_master:COMPANY_CODE                      = "GSN"             --need claification from ani
    gsn_master:FAC_INDICATOR                     = L_FAC_INDICATOR
    gsn_master:SITE_ADDRESS                      = Trun(sfplocation:address) + trun(SFPLOCATION:ADDRESS1[1]) + " " + trun(SFPLOCATION:ADDRESS1[2]) + " " + TRUN(SFPLOCATION:ADDRESS1[3])
    gsn_master:SITE_CITY                         = SFPLOCATION:CITY
    gsn_master:SITE_STATE                        = SFPLOCATiON:str_STATE
    gsn_master:SITE_ZIP                          = SFPLOCATION:str_ZIPCODE[1,5]
    gsn_master:SITE_COUNTY                       = L_COUNTY_STR
    gsn_master:SUBLINE_CODE                      = l_lob_subline

    --gsn_master:TERRITORY_CODE_ISO                = "" -- gsn will convert from city, state and zip
    gsn_master:TERRITORY_CODE_ISO                = str(cppgeneral:rating_territory)
    gsn_master:TYPE_OF_POLICY                    = str(l_type_of_policy)
    gsn_master:ANNUAL_STATEMENT_LOB              = sfsline2:ISO_STMT_LOB
    gsn_master:iso_subline_code                  = str(sfsline2:ISO_SUBLINE)
    gsn_master:CLASS_CODE                        = l_class_code
    gsn_master:iso_class_code                    = l_iso_class_code
    gsn_master:ISOCOVERAGECODE                   = str(l_coverage)
    gsn_master:RATINGIDCODE                      = l_rating_id
    if l_iso_class_code one of "0321", "0322", "0323", "0341", "0342", "0343", "0581", "0582", "0701", "0702" and
       l_rating_id = "2" and
       l_coverage = 2 and
       str(sfsline2:iso_subline) one of "015", "016", "017", "018" then
      {
        gsn_master:ratingidcode = "1"
      }
    gsn_master:CONSTRUCTION_CLASS                = l_construction_class_1
    gsn_master:iso_construction_code_ot_bgii     = l_construction_class
    gsn_master:deductible                        = val(l_deductible)
    gsn_master:iso_type_deductible_code          = l_deductible_str
    gsn_master:iso_green_upgrade_indicator_cf    = "9"
    gsn_master:iso_mold_coverage_code            = "8"
    gsn_master:TERRORISM_COVERAGE_CODE           = "2"
    if sfsline_by_subline:lob_code = "TERROR" then
        gsn_master:terrorism_coverage_code       = "7"
    gsn_master:LCE_EFF_DATE                      = l_loss_cost_date
    gsn_master:ORDINANCELAWID                    = "5"
    gsn_master:CO_INSURANCE_FACTOR               = l_coinsurance_percent
    gsn_master:iso_co_insurance_code_cf          = l_coinsurance
    gsn_master:COVERAGE_EXPOSURE                 = str(l_exposure)
    gsn_master:total_rating_mod_factor           = l_rmf
    gsn_master:loss_cost_multiplier              = "999"
    switch (l_protection)
      case "5" : l_protection1 = "10"
      case "4" : l_protection1 = "09"
      case "3" : l_protection1 = "09"
      case "2" : l_protection1 = "08"
      case "1" : l_protection1 = "08"
      end
    gsn_master:PROTECTION_CLASS_ISO              = l_protection1
    gsn_master:rategroup                         = l_rate_group
    gsn_master:bgii_construction_code            = "N/A"
    gsn_master:BCEG                              = "99"
    if sfplocation:str_state = "NJ" and
       gsn_master:iso_subline_code one of "027", "029", "035", "045", "090" then
        begin
        if sfplocation:year_construction < 1978 and
           sfplocation:year_construction <> 0 then
            gsn_master:stateexceptioncode        = "1"
        else
            gsn_master:stateexceptioncode        = "9"
        end
    else
        gsn_master:stateexceptioncode            = "N/A"
    gsn_master:wind_DEDUCTIBLE                   = val(l_wind_deductible)
    gsn_master:PREMIUM                           = l_premium
    gsn_master:annual_premium                    = l_annual_premium
    gsn_master:save_current_premium              = l_premium

    gsn_master:LIMIT[1]                          = l_limit[1]
    gsn_master:LIMIT[2]                          = l_limit[2]
    gsn_master:LIMIT[3]                          = l_limit[3]
    gsn_master:LIMIT[4]                          = l_limit[4]
    gsn_master:LIMIT[5]                          = l_limit[5]
    gsn_master:LIMIT[6]                          = l_limit[6]
    gsn_master:LIMIT[7]                          = l_limit[7]
    gsn_master:LIMIT[8]                          = l_limit[8]
    gsn_master:LIMIT[9]                          = l_limit[9]
    gsn_master:LIMIT[10]                         = l_limit[10]
    gsn_master:LIMIT[11]                         = l_limit[11]
    gsn_master:LIMIT[12]                         = l_limit[12]
    gsn_master:LIMIT[13]                         = l_limit[13]
    gsn_master:LIMIT[14]                         = l_limit[14]
    gsn_master:LIMIT[15]                         = l_limit[15]
    gsn_master:LIMIT[16]                         = l_limit[16]
    gsn_master:LIMIT[17]                         = l_limit[17]
    gsn_master:LIMIT[18]                         = l_limit[18]
    gsn_master:LIMIT[19]                         = l_limit[19]
    gsn_master:LIMIT[20]                         = l_limit[20]
    gsn_master:LIMIT[21]                         = l_limit[21]
    gsn_master:LIMIT[22]                         = l_limit[22]
    gsn_master:LIMIT[23]                         = l_limit[23]
    gsn_master:LIMIT[24]                         = l_limit[24]
    gsn_master:LIMIT[25]                         = l_limit[25]
    gsn_master:LIMIT[26]                         = l_limit[26]
    gsn_master:LIMIT[27]                         = l_limit[27]
    gsn_master:LIMIT[28]                         = l_limit[28]
    gsn_master:LIMIT[29]                         = l_limit[29]
    gsn_master:LIMIT[30]                         = l_limit[30]
    gsn_master:FORM_CODE                         = l_form
    gsn_master:DEDUCTIBLE_BASIS                  = "DOLLARS"
    gsn_master:line_of_business                  = l_line_of_business
    gsn_master:AGENCY_COMMISSION                 = 25
    gsn_master:attachment_point                  = 0
    gsn_master:trans_date                        = sfpmaster:PREMIUM_TRANS_DATE
    do check_prior_policy_no
    gsn_master:prior_policy_number               = l_prior_policy_number
    gsn_master:prior_policy_number_eff_date      = l_prior_policy_eff_date
    gsn_master:prior_policy_number_prefix        = l_prior_policy_number_prefix
    gsn_master:res_condo                         = l_res_condo
    gsn_master:delete_record                     = l_delete
    if l_lob_subline one of "81","85" then
      {
        if trun(l_exposure_base) <> "" then
          {
            gsn_master:exposure_base                 = l_exposure_base
          }
        else
          {
            gsn_master:exposure_base                = "N/A"
          }
      }
    else
      {
        gsn_master:exposure_base                = "N/A"
      }
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = l_claims_made


    end
end

END

procedure gsn_master_add_glass
BEGIN
string l_auto_state[2];

--l_annual_premium = l_premium
if l_end_sequence > 0 then
    begin
    do check_for_endorsement
    end

if sfpname:original_eff_date <= 01.25.2016 and
   sfpname:eff_date >= 01.25.2016 then
    begin
    access sfpname_alias, set sfpname_alias:policy_no    = sfpname:policy_no,
                              sfpname_alias:pol_year     = sfpname:pol_year,
                              sfpname_alias:end_sequence = 0, exact

    if sfpname_alias:policy_no    = sfpname:policy_no and
       sfpname_alias:pol_year     = sfpname:pol_year and
       sfpname_alias:end_sequence = 0 then
        begin
        if sfpname_alias:trans_code one of 10 then
            begin
            l_policy_suffix = 0
            end
        else
            begin
            l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
            end
        end
    else
        begin
        l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
        end
    end
else
    begin
    l_policy_suffix = 0
    end

access sfscompany, set sfscompany:company_id = l_company_id, exact

access sfsline2, set sfsline2:Company_id       = l_company_id,
                     sfsline2:line_of_business = l_line_of_business,
                     sfsline2:lob_subline      = l_lob_subline , exact

add gsn_master
    begin
    gsn_master:POLICY_NO                         = l_policy_no
    gsn_master:POL_YEAR                          = l_pol_year
    gsn_master:END_SEQUENCE                      = l_end_sequence
    gsn_master:PREM_NO                           = l_prem_no
    gsn_master:BUILD_NO                          = l_build_No
    gsn_master:lob_subline                       = l_lob_subline
    gsn_master:line_of_business                  = l_Line_of_business
    gsn_master:line_type                         = l_line_type
    gsn_master:SUB_CODE                          = l_sub_code
    gsn_master:SEQUENCE_NUMBER                   = l_END_SEQUENCE
    gsn_master:policy_suffix                     = str(l_policy_suffix,"999")
    gsn_master:ACCOUNTING_DATE                   = l_ending_date
    gsn_master:eff_date                          = sfpname:eff_date
    gsn_master:POLICY_EFF_DATE                   = sfpname:eff_date
    gsn_master:POLICY_EXP_DATE                   = sfpname:exp_date
    gsn_master:trans_exp_date                    = sfpmaster:trans_exp
    gsn_master:POLICY_INDICATOR                  = L_POLICY_INDICATOR
    gsn_master:TRANS_EFF_DATE                    = sfpmaster:trans_eff
    gsn_master:trans_code                        = sfpmaster:trans_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:payment_plan                      = l_payment_plan
    l_claims_made = "NA"
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = l_claims_made

    l_insured_name = ""
    I_rev_name = ""
    i_name = sfpname:name[1]
    include "sfsrevname7.pro"
    l_insured_name = I_rev_name
    if trun(sfpname:name[2]) <> "" then
        begin
        i_name = sfpname:name[2]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    if trun(sfpname:name[3]) <> "" then
        begin
        i_name = sfpname:name[3]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    gsn_master:INSURED_NAME                      = l_insured_name

    gsn_master:INSURED_ADDRESS                   = trun(sfpname:address[1]) + " " + trun(sfpname:address[2]) + " " + trun(sfpname:address[3])
    gsn_master:INSURED_CITY                      = sfpname:city
    gsn_master:INSURED_STATE                     = sfpname:str_state
    gsn_master:INSURED_ZIP[1,5]                  = sfpname:str_zipCode[1,5]
    gsn_master:SIC_CODE                          = l_iso_sic_code
    gsn_master:COMPANY_NAME                      = trun(sfscompany:name[1]) + " " + sfscompany:name[2]
    gsn_master:COMPANY_CODE                      = "GSN"             --need claification from ani
    gsn_master:FAC_INDICATOR                     = L_FAC_INDICATOR
    gsn_master:SITE_ADDRESS                      = Trun(sfplocation:address) + trun(SFPLOCATION:ADDRESS1[1]) + " " + trun(SFPLOCATION:ADDRESS1[2]) + " " + TRUN(SFPLOCATION:ADDRESS1[3])
    gsn_master:SITE_CITY                         = SFPLOCATION:CITY
    gsn_master:SITE_STATE                        = SFPLOCATiON:str_STATE
    gsn_master:SITE_ZIP                          = SFPLOCATION:str_ZIPCODE[1,5]
    gsn_master:SITE_COUNTY                       = L_COUNTY_STR
    gsn_master:SUBLINE_CODE                      = l_lob_subline

    gsn_master:TERRITORY_CODE_ISO                = "" -- gsn will convert from city, state and zip
    gsn_master:TYPE_OF_POLICY                    = str(l_type_of_policy)
    gsn_master:ANNUAL_STATEMENT_LOB              = sfsline2:ISO_STMT_LOB
    gsn_master:iso_subline_code                  = l_iso_subline_code                            --        str(sfsline2:ISO_SUBLINE)   updated per kunal
    gsn_master:CLASS_CODE                        = l_class_code
    gsn_master:iso_class_code                    = l_iso_class_code
    gsn_master:deductible                        = val(l_deductible)
    gsn_master:iso_type_deductible_code          = l_deductible_str
    gsn_master:total_rating_mod_factor           = l_rmf
    gsn_master:TERRORISM_COVERAGE_CODE           = "2"

    gsn_master:PREMIUM                           = l_premium
    if sfpmaster:trans_code one of 10,14 then
        begin
        gsn_master:save_current_premium          = l_premium
        end
    else
        begin
        gsn_master:save_current_premium          = l_save_premium
        end

    gsn_master:LIMIT[1]                          = l_limit[1]
    gsn_master:LIMIT[2]                          = l_limit[2]
    gsn_master:LIMIT[3]                          = l_limit[3]
    gsn_master:LIMIT[4]                          = l_limit[4]
    gsn_master:LIMIT[5]                          = l_limit[5]
    gsn_master:LIMIT[6]                          = l_limit[6]
    gsn_master:LIMIT[7]                          = l_limit[7]
    gsn_master:LIMIT[8]                          = l_limit[8]
    gsn_master:LIMIT[9]                          = l_limit[9]
    gsn_master:LIMIT[10]                         = l_limit[10]
    gsn_master:LIMIT[11]                         = l_limit[11]
    gsn_master:LIMIT[12]                         = l_limit[12]
    gsn_master:LIMIT[13]                         = l_limit[13]
    gsn_master:LIMIT[14]                         = l_limit[14]
    gsn_master:LIMIT[15]                         = l_limit[15]
    gsn_master:LIMIT[16]                         = l_limit[16]
    gsn_master:LIMIT[17]                         = l_limit[17]
    gsn_master:LIMIT[18]                         = l_limit[18]
    gsn_master:LIMIT[19]                         = l_limit[19]
    gsn_master:LIMIT[20]                         = l_limit[20]
    gsn_master:LIMIT[21]                         = l_limit[21]
    gsn_master:LIMIT[22]                         = l_limit[22]
    gsn_master:LIMIT[23]                         = l_limit[23]
    gsn_master:LIMIT[24]                         = l_limit[24]
    gsn_master:LIMIT[25]                         = l_limit[25]
    gsn_master:LIMIT[26]                         = l_limit[26]
    gsn_master:LIMIT[27]                         = l_limit[27]
    gsn_master:LIMIT[28]                         = l_limit[28]
    gsn_master:LIMIT[29]                         = l_limit[29]
    gsn_master:LIMIT[30]                         = l_limit[30]
    gsn_master:FORM_CODE                         = l_form
    gsn_master:DEDUCTIBLE_BASIS                  = "DOLLARS"
    gsn_master:line_of_business                  = l_line_of_business
    gsn_master:AGENCY_COMMISSION                 = 25
    gsn_master:attachment_point                  = 0
    gsn_master:trans_date                        = sfpmaster:PREMIUM_TRANS_DATE
    do check_prior_policy_no
    gsn_master:prior_policy_number               = l_prior_policy_number
    gsn_master:prior_policy_number_eff_date      = l_prior_policy_eff_date
    gsn_master:prior_policy_number_prefix        = l_prior_policy_number_prefix
    gsn_master:res_condo                         = l_res_condo
    gsn_master:annual_premium                    = l_annual_premium
    if l_lob_subline one of "81","85" then
      {
        if trun(l_exposure_base) <> "" then
          {
            gsn_master:exposure_base                 = l_exposure_base
          }
        else
          {
            gsn_master:exposure_base                = "N/A"
          }
      }
    else
      {
        gsn_master:exposure_base                = "N/A"
      }
  end
END

procedure gsn_master_add_crime
BEGIN
string l_auto_state[2];

--l_annual_premium = l_premium
if l_end_sequence > 0 then
    begin
    do check_for_endorsement

/*    if sfpmaster:trans_code not one of 11,16 then
        begin
        do write_difference_in_premium
        end */

    end

if sfpname:original_eff_date <= 01.25.2016 and
   sfpname:eff_date >= 01.25.2016 then
    begin
    access sfpname_alias, set sfpname_alias:policy_no    = sfpname:policy_no,
                              sfpname_alias:pol_year     = sfpname:pol_year,
                              sfpname_alias:end_sequence = 0, exact

    if sfpname_alias:policy_no    = sfpname:policy_no and
       sfpname_alias:pol_year     = sfpname:pol_year and
       sfpname_alias:end_sequence = 0 then
        begin
        if sfpname_alias:trans_code one of 10 then
            begin
            l_policy_suffix = 0
            end
        else
            begin
            l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
            end
        end
    else
        begin
        l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
        end
    end
else
    begin
    l_policy_suffix = 0
    end

access sfscompany, set sfscompany:company_id = l_company_id, exact

access sfsline2, set sfsline2:Company_id       = l_company_id,
                     sfsline2:line_of_business = l_line_of_business,
                     sfsline2:lob_subline      = l_lob_subline , exact

add gsn_master
    begin
    gsn_master:POLICY_NO                         = l_policy_no
    gsn_master:POL_YEAR                          = l_pol_year
    gsn_master:END_SEQUENCE                      = l_end_sequence
    gsn_master:PREM_NO                           = l_prem_no
    gsn_master:BUILD_NO                          = l_build_No
    gsn_master:lob_subline                       = l_lob_subline
    gsn_master:line_of_business                  = l_Line_of_business
    gsn_master:line_type                         = l_line_type
    gsn_master:SUB_CODE                          = l_sub_code
    gsn_master:SEQUENCE_NUMBER                   = l_END_SEQUENCE
    gsn_master:policy_suffix                     = str(l_policy_suffix,"999")
    gsn_master:ACCOUNTING_DATE                   = l_ending_date
    gsn_master:eff_date                          = sfpname:eff_date
    gsn_master:POLICY_EFF_DATE                   = sfpname:eff_date
    gsn_master:POLICY_EXP_DATE                   = sfpname:exp_date
    gsn_master:trans_exp_date                    = sfpmaster:trans_exp
    gsn_master:POLICY_INDICATOR                  = L_POLICY_INDICATOR
    gsn_master:TRANS_EFF_DATE                    = sfpmaster:trans_eff
    gsn_master:trans_code                        = sfpmaster:trans_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:payment_plan                      = l_payment_plan
    if l_retro_date = 00.00.0000 then
    {
       l_claims_made = "OC"
    }
    else
    {
       l_claims_made = "CM"
    }
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = l_claims_made
    l_insured_name = ""
    I_rev_name = ""
    i_name = sfpname:name[1]
    include "sfsrevname7.pro"
    l_insured_name = I_rev_name
    if trun(sfpname:name[2]) <> "" then
        begin
        i_name = sfpname:name[2]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    if trun(sfpname:name[3]) <> "" then
        begin
        i_name = sfpname:name[3]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    gsn_master:INSURED_NAME                      = l_insured_name

    gsn_master:INSURED_ADDRESS                   = trun(sfpname:address[1]) + " " + trun(sfpname:address[2]) + " " + trun(sfpname:address[3])
    gsn_master:INSURED_CITY                      = sfpname:city
    gsn_master:INSURED_STATE                     = sfpname:str_state
    gsn_master:INSURED_ZIP[1,5]                  = sfpname:str_zipCode[1,5]
    gsn_master:SIC_CODE                          = l_iso_sic_code
    gsn_master:COMPANY_NAME                      = trun(sfscompany:name[1]) + " " + sfscompany:name[2]
    gsn_master:COMPANY_CODE                      = "GSN"             --need claification from ani
    gsn_master:FAC_INDICATOR                     = L_FAC_INDICATOR
    gsn_master:SITE_ADDRESS                      = Trun(sfplocation:address) + trun(SFPLOCATION:ADDRESS1[1]) + " " + trun(SFPLOCATION:ADDRESS1[2]) + " " + TRUN(SFPLOCATION:ADDRESS1[3])
    gsn_master:SITE_CITY                         = SFPLOCATION:CITY
    gsn_master:SITE_STATE                        = SFPLOCATiON:str_STATE
    gsn_master:SITE_ZIP                          = SFPLOCATION:str_ZIPCODE[1,5]
    gsn_master:SITE_COUNTY                       = L_COUNTY_STR
    gsn_master:SUBLINE_CODE                      = l_lob_subline

    gsn_master:TERRITORY_CODE_ISO                = "999999"
    gsn_master:TYPE_OF_POLICY                    = str(l_type_of_policy)
    gsn_master:ANNUAL_STATEMENT_LOB              = sfsline2:ISO_STMT_LOB
    gsn_master:iso_subline_code                  = str(sfsline2:ISO_SUBLINE)
    gsn_master:CLASS_CODE                        = l_class_code
    gsn_master:iso_class_code                    = l_iso_class_code
    gsn_master:ISOCOVERAGECODE                   = str(l_coverage)
    gsn_master:form_code                         = l_form_code
    gsn_master:DEDUCTIBLE                        = val(l_deductible)
    gsn_master:iso_type_deductible_code          = l_deductible_str
    if l_form_code one of "120", "125", "130" then
        gsn_master:rategroup                     = "24"
    else
        gsn_master:rategroup                     = "N/A"
    gsn_master:iso_ecommerce_hazard_group_ind    = "N/A"
    gsn_master:coverage_exposure                 = "N/A"
    gsn_master:premises                          = "1"
    gsn_master:TERRORISM_COVERAGE_CODE           = "A"
    if l_form_code one of "101", "115" then
        gsn_master:ratableemployees              = str(l_rateable_employees)
    else
        gsn_master:ratableemployees              = ""
    if l_form_code one of "101", "115" then
        gsn_master:employees                     = str(l_rateable_employees)
    else
        gsn_master:employees                     = ""
    gsn_master:total_rating_mod_factor           = l_rmf
    gsn_master:loss_cost_multiplier              = "999"
    gsn_master:ecommerce_rating_modifier         = "N/A"

    gsn_master:PREMIUM                           = l_premium
    gsn_master:annual_premium                    = l_annual_premium
    if sfpmaster:trans_code one of 10,14 then
        begin
        gsn_master:save_current_premium          = l_premium
        end
    else
        begin
        gsn_master:save_current_premium          = l_save_premium
        end

    gsn_master:LIMIT[1]                          = l_limit[1]
    gsn_master:LIMIT[2]                          = l_limit[2]
    gsn_master:LIMIT[3]                          = l_limit[3]
    gsn_master:LIMIT[4]                          = l_limit[4]
    gsn_master:LIMIT[5]                          = l_limit[5]
    gsn_master:LIMIT[6]                          = l_limit[6]
    gsn_master:LIMIT[7]                          = l_limit[7]
    gsn_master:LIMIT[8]                          = l_limit[8]
    gsn_master:LIMIT[9]                          = l_limit[9]
    gsn_master:LIMIT[10]                         = l_limit[10]
    gsn_master:LIMIT[11]                         = l_limit[11]
    gsn_master:LIMIT[12]                         = l_limit[12]
    gsn_master:LIMIT[13]                         = l_limit[13]
    gsn_master:LIMIT[14]                         = l_limit[14]
    gsn_master:LIMIT[15]                         = l_limit[15]
    gsn_master:LIMIT[16]                         = l_limit[16]
    gsn_master:LIMIT[17]                         = l_limit[17]
    gsn_master:LIMIT[18]                         = l_limit[18]
    gsn_master:LIMIT[19]                         = l_limit[19]
    gsn_master:LIMIT[20]                         = l_limit[20]
    gsn_master:LIMIT[21]                         = l_limit[21]
    gsn_master:LIMIT[22]                         = l_limit[22]
    gsn_master:LIMIT[23]                         = l_limit[23]
    gsn_master:LIMIT[24]                         = l_limit[24]
    gsn_master:LIMIT[25]                         = l_limit[25]
    gsn_master:LIMIT[26]                         = l_limit[26]
    gsn_master:LIMIT[27]                         = l_limit[27]
    gsn_master:LIMIT[28]                         = l_limit[28]
    gsn_master:LIMIT[29]                         = l_limit[29]
    gsn_master:LIMIT[30]                         = l_limit[30]
    gsn_master:DEDUCTIBLE_BASIS                  = "DOLLARS"
    gsn_master:line_of_business                  = l_line_of_business
    gsn_master:AGENCY_COMMISSION                 = 25
    gsn_master:attachment_point                  = 0
    gsn_master:trans_date                        = sfpmaster:PREMIUM_TRANS_DATE
    do check_prior_policy_no
    gsn_master:prior_policy_number               = l_prior_policy_number
    gsn_master:prior_policy_number_eff_date      = l_prior_policy_eff_date
    gsn_master:prior_policy_number_prefix        = l_prior_policy_number_prefix
    gsn_master:res_condo                         = l_res_condo
    if l_lob_subline one of "81","85" then
      {
        if trun(l_exposure_base) <> "" then
          {
            gsn_master:exposure_base                 = l_exposure_base
          }
        else
          {
            gsn_master:exposure_base                = "N/A"
          }
      }
    else
      {
        gsn_master:exposure_base                = "N/A"
      }
    end

END

procedure gsn_master_add_liability
BEGIN
string l_auto_state[2];

--l_annual_premium = l_premium
if l_end_sequence > 0 then
    begin
    do check_for_endorsement

/*   if sfpmaster:trans_code not one of 11,16 then
     begin
       do write_difference_in_premium
     end */

    end

if sfpname:original_eff_date <= 01.25.2016 and
   sfpname:eff_date >= 01.25.2016 then
    begin
    access sfpname_alias, set sfpname_alias:policy_no    = sfpname:policy_no,
                              sfpname_alias:pol_year     = sfpname:pol_year,
                              sfpname_alias:end_sequence = 0, exact

    if sfpname_alias:policy_no    = sfpname:policy_no and
       sfpname_alias:pol_year     = sfpname:pol_year and
       sfpname_alias:end_sequence = 0 then
        begin
        if sfpname_alias:trans_code one of 10 then
            begin
            l_policy_suffix = 0
            end
        else
            begin
            l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
            end
        end
    else
        begin
        l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
        end
    end
else
    begin
    l_policy_suffix = 0
    end

access sfscompany, set sfscompany:company_id = l_company_id, exact

access sfsline2, set sfsline2:Company_id       = l_company_id,
                     sfsline2:line_of_business = l_line_of_business,
                     sfsline2:lob_subline      = l_lob_subline , exact

add gsn_master
    begin
    gsn_master:POLICY_NO                         = l_policy_no
    gsn_master:POL_YEAR                          = l_pol_year
    gsn_master:END_SEQUENCE                      = l_end_sequence
    gsn_master:PREM_NO                           = l_prem_no
    gsn_master:BUILD_NO                          = l_build_No
    gsn_master:lob_subline                       = l_lob_subline
    gsn_master:line_of_business                  = l_Line_of_business
    gsn_master:line_type                         = l_line_type
    gsn_master:SUB_CODE                          = l_sub_code
    gsn_master:SEQUENCE_NUMBER                   = l_END_SEQUENCE
    gsn_master:policy_suffix                     = str(l_policy_suffix,"999")
    gsn_master:ACCOUNTING_DATE                   = l_ending_date
    gsn_master:eff_date                          = sfpname:eff_date
    gsn_master:POLICY_EFF_DATE                   = sfpname:eff_date
    gsn_master:POLICY_EXP_DATE                   = sfpname:exp_date
    gsn_master:trans_exp_date                    = sfpmaster:trans_exp
    gsn_master:POLICY_INDICATOR                  = L_POLICY_INDICATOR
    gsn_master:TRANS_EFF_DATE                    = sfpmaster:trans_eff
    gsn_master:trans_code                        = sfpmaster:trans_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:payment_plan                      = l_payment_plan
     if l_retro_date = 00.00.0000 then
    {
       l_claims_made = "OC"
    }
    else
    {
       l_claims_made = "CM"
    }
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = l_claims_made
    l_insured_name = ""
    I_rev_name = ""
    i_name = sfpname:name[1]
    include "sfsrevname7.pro"
    l_insured_name = I_rev_name
    if trun(sfpname:name[2]) <> "" then
        begin
        i_name = sfpname:name[2]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    if trun(sfpname:name[3]) <> "" then
        begin
        i_name = sfpname:name[3]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    gsn_master:INSURED_NAME                      = l_insured_name

    gsn_master:INSURED_ADDRESS                   = trun(sfpname:address[1]) + " " + trun(sfpname:address[2]) + " " + trun(sfpname:address[3])
    gsn_master:INSURED_CITY                      = sfpname:city
    gsn_master:INSURED_STATE                     = sfpname:str_state
    gsn_master:INSURED_ZIP[1,5]                  = sfpname:str_zipCode[1,5]
    gsn_master:SIC_CODE                          = l_iso_sic_code
    gsn_master:COMPANY_NAME                      = trun(sfscompany:name[1]) + " " + sfscompany:name[2]
    gsn_master:COMPANY_CODE                      = "GSN"             --need claification from ani
    gsn_master:FAC_INDICATOR                     = L_FAC_INDICATOR
    gsn_master:SITE_ADDRESS                      = Trun(sfplocation:address) + trun(SFPLOCATION:ADDRESS1[1]) + " " + trun(SFPLOCATION:ADDRESS1[2]) + " " + TRUN(SFPLOCATION:ADDRESS1[3])
    gsn_master:SITE_CITY                         = SFPLOCATION:CITY
    gsn_master:SITE_STATE                        = SFPLOCATiON:str_STATE
    gsn_master:SITE_ZIP                          = SFPLOCATION:str_ZIPCODE[1,5]
    gsn_master:SITE_COUNTY                       = L_COUNTY_STR
    gsn_master:SUBLINE_CODE                      = l_lob_subline

    -- gsn_master:TERRITORY_CODE_ISO                = "" -- gsn will convert from city, state and zip
    gsn_master:TERRITORY_CODE_ISO                = str(cppgeneral:rating_territory)
    gsn_master:TYPE_OF_POLICY                    = str(l_type_of_policy)
    gsn_master:ANNUAL_STATEMENT_LOB              = l_aslob
    gsn_master:iso_subline_code                  = l_subline
    gsn_master:CLASS_CODE                        = l_class_code
    gsn_master:iso_class_code                    = l_iso_class_code
    if sfplocation:str_state = "NJ" then
        begin
        if sfplocation:year_construction < 1978 and
           sfplocation:year_construction <> 0 then
            gsn_master:stateexceptioncode        = "1"
        else
            gsn_master:stateexceptioncode        = "9"
        end
    else
        gsn_master:stateexceptioncode            = "N/A"
    gsn_master:limit_id                          = "1"
    gsn_master:iso_policy_limits_code            = l_policy_limits
    gsn_master:iso_type_deductible_code          = "01"
    gsn_master:iso_type_deductible_code_pd       = l_deductible_pd
    gsn_master:ISOCOVERAGECODE                   = str(l_coverage)
    gsn_master:iso_mold_coverage_code            = "8"
    gsn_master:coverage_retroactive_date         = l_retro_date
    gsn_master:TERRORISM_COVERAGE_CODE           = "2"
    if sfsline_by_subline:lob_code = "TERROR" then
        gsn_master:terrorism_coverage_code       = "7"
    gsn_master:RATINGIDCODE                      = l_rating_id
    if l_iso_class_code one of "60011","60010","62003","47477" then
      {
        l_exposure = l_exposure div 1000
      }
    gsn_master:COVERAGE_EXPOSURE                 = str(l_exposure)
    gsn_master:total_rating_mod_factor           = l_rmf
    gsn_master:loss_cost_multiplier              = "999"
    gsn_master:iso_endorsement_id_code           = "N/A"
    gsn_master:PREMIUM                           = l_premium
    if sfpmaster:trans_code one of 10,14 then
        begin
        gsn_master:save_current_premium          = l_premium
        end
    else
        begin
        gsn_master:save_current_premium          = l_save_premium
        end

    gsn_master:LIMIT[1]                          = l_limit[1]
    gsn_master:LIMIT[2]                          = l_limit[2]
    gsn_master:LIMIT[3]                          = l_limit[3]
    gsn_master:LIMIT[4]                          = l_limit[4]
    gsn_master:LIMIT[5]                          = l_limit[5]
    gsn_master:LIMIT[6]                          = l_limit[6]
    gsn_master:LIMIT[7]                          = l_limit[7]
    gsn_master:LIMIT[8]                          = l_limit[8]
    gsn_master:LIMIT[9]                          = l_limit[9]
    gsn_master:LIMIT[10]                         = l_limit[10]
    gsn_master:LIMIT[11]                         = l_limit[11]
    gsn_master:LIMIT[12]                         = l_limit[12]
    gsn_master:LIMIT[13]                         = l_limit[13]
    gsn_master:LIMIT[14]                         = l_limit[14]
    gsn_master:LIMIT[15]                         = l_limit[15]
    gsn_master:LIMIT[16]                         = l_limit[16]
    gsn_master:LIMIT[17]                         = l_limit[17]
    gsn_master:LIMIT[18]                         = l_limit[18]
    gsn_master:LIMIT[19]                         = l_limit[19]
    gsn_master:LIMIT[20]                         = l_limit[20]
    gsn_master:LIMIT[21]                         = l_limit[21]
    gsn_master:LIMIT[22]                         = l_limit[22]
    gsn_master:LIMIT[23]                         = l_limit[23]
    gsn_master:LIMIT[24]                         = l_limit[24]
    gsn_master:LIMIT[25]                         = l_limit[25]
    gsn_master:LIMIT[26]                         = l_limit[26]
    gsn_master:LIMIT[27]                         = l_limit[27]
    gsn_master:LIMIT[28]                         = l_limit[28]
    gsn_master:LIMIT[29]                         = l_limit[29]
    gsn_master:LIMIT[30]                         = l_limit[30]
    gsn_master:FORM_CODE                         = l_form
    gsn_master:DEDUCTIBLE_BASIS                  = "DOLLARS"
    gsn_master:line_of_business                  = l_line_of_business
    gsn_master:AGENCY_COMMISSION                 = 25
    gsn_master:attachment_point                  = 0
    gsn_master:trans_date                        = sfpmaster:PREMIUM_TRANS_DATE
    do check_prior_policy_no
    gsn_master:prior_policy_number               = l_prior_policy_number
    gsn_master:prior_policy_number_eff_date      = l_prior_policy_eff_date
    gsn_master:prior_policy_number_prefix        = l_prior_policy_number_prefix
    gsn_master:res_condo                         = l_res_condo
    gsn_master:annual_premium                    = l_annual_premium
    if l_lob_subline one of "81","85" then
      {
        if trun(l_exposure_base) <> "" then
          {
            gsn_master:exposure_base                 = l_exposure_base
          }
        else
          {
            gsn_master:exposure_base                = "N/A"
          }
      }
    else
      {
        gsn_master:exposure_base                = "N/A"
      }

    end

END

procedure gsn_master_add_inland
BEGIN
string l_auto_state[2];

--l_annual_premium = l_premium
if l_end_sequence > 0 then
  begin
    do check_for_endorsement

/*    if sfpmaster:trans_code not one of 11,16 then
      begin
        do write_difference_in_premium
      end  */
  end

if sfpname:original_eff_date <= 01.25.2016 and
   sfpname:eff_date >= 01.25.2016 then
    begin
    access sfpname_alias, set sfpname_alias:policy_no    = sfpname:policy_no,
                              sfpname_alias:pol_year     = sfpname:pol_year,
                              sfpname_alias:end_sequence = 0, exact

    if sfpname_alias:policy_no    = sfpname:policy_no and
       sfpname_alias:pol_year     = sfpname:pol_year and
       sfpname_alias:end_sequence = 0 then
        begin
        if sfpname_alias:trans_code one of 10 then
            begin
            l_policy_suffix = 0
            end
        else
            begin
            l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
            end
        end
    else
        begin
        l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
        end
    end
else
    begin
    l_policy_suffix = 0
    end

access sfscompany, set sfscompany:company_id = l_company_id, exact

access sfsline2, set sfsline2:Company_id       = l_company_id,
                     sfsline2:line_of_business = l_line_of_business,
                     sfsline2:lob_subline      = l_lob_subline , exact

add gsn_master
    begin
    gsn_master:POLICY_NO                         = l_policy_no
    gsn_master:POL_YEAR                          = l_pol_year
    gsn_master:END_SEQUENCE                      = l_end_sequence
    gsn_master:PREM_NO                           = l_prem_no
    gsn_master:BUILD_NO                          = l_build_No
    gsn_master:lob_subline                       = l_lob_subline
    gsn_master:line_of_business                  = l_Line_of_business
    gsn_master:line_type                         = l_line_type
    gsn_master:SUB_CODE                          = l_sub_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:SEQUENCE_NUMBER                   = l_END_SEQUENCE
    gsn_master:policy_suffix                     = str(l_policy_suffix,"999")
    gsn_master:ACCOUNTING_DATE                   = l_ending_date
    gsn_master:eff_date                          = sfpname:eff_date
    gsn_master:POLICY_EFF_DATE                   = sfpname:eff_date
    gsn_master:POLICY_EXP_DATE                   = sfpname:exp_date
    gsn_master:trans_exp_date                    = sfpmaster:trans_exp
    gsn_master:POLICY_INDICATOR                  = L_POLICY_INDICATOR
    gsn_master:TRANS_EFF_DATE                    = sfpmaster:trans_eff
    gsn_master:trans_code                        = sfpmaster:trans_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:payment_plan                      = l_payment_plan
    l_claims_made = "NA"
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = l_claims_made
    l_insured_name = ""
    I_rev_name = ""
    i_name = sfpname:name[1]
    include "sfsrevname7.pro"
    l_insured_name = I_rev_name
    if trun(sfpname:name[2]) <> "" then
        begin
        i_name = sfpname:name[2]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    if trun(sfpname:name[3]) <> "" then
        begin
        i_name = sfpname:name[3]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    gsn_master:INSURED_NAME                      = l_insured_name

    gsn_master:INSURED_ADDRESS                   = trun(sfpname:address[1]) + " " + trun(sfpname:address[2]) + " " + trun(sfpname:address[3])
    gsn_master:INSURED_CITY                      = sfpname:city
    gsn_master:INSURED_STATE                     = sfpname:str_state
    gsn_master:INSURED_ZIP[1,5]                  = sfpname:str_zipCode[1,5]
    gsn_master:SIC_CODE                          = l_iso_sic_code
    gsn_master:COMPANY_NAME                      = trun(sfscompany:name[1]) + " " + sfscompany:name[2]
    gsn_master:COMPANY_CODE                      = "GSN"             --need claification from ani
    gsn_master:FAC_INDICATOR                     = L_FAC_INDICATOR
    gsn_master:SITE_ADDRESS                      = Trun(sfplocation:address) + trun(SFPLOCATION:ADDRESS1[1]) + " " + trun(SFPLOCATION:ADDRESS1[2]) + " " + TRUN(SFPLOCATION:ADDRESS1[3])
    gsn_master:SITE_CITY                         = SFPLOCATION:CITY
    gsn_master:SITE_STATE                        = SFPLOCATiON:str_STATE
    gsn_master:SITE_ZIP                          = SFPLOCATION:str_ZIPCODE[1,5]
    gsn_master:SITE_COUNTY                       = L_COUNTY_STR
    gsn_master:SUBLINE_CODE                      = l_lob_subline

    gsn_master:TERRITORY_CODE_ISO                = "999"
    gsn_master:TYPE_OF_POLICY                    = str(l_type_of_policy)
    gsn_master:ANNUAL_STATEMENT_LOB              = sfsline2:ISO_STMT_LOB
    gsn_master:iso_subline_code                  = str(sfsline2:ISO_SUBLINE)
    gsn_master:CLASS_CODE                        = l_class_code
    gsn_master:iso_class_code                    = l_iso_class_code
    gsn_master:DEDUCTIBLE                        = val(l_deductible)
    gsn_master:iso_type_deductible_code          = l_deductible_str
    gsn_master:TERRORISM_COVERAGE_CODE           = "2"
    gsn_master:total_rating_mod_factor           = l_rmf
    gsn_master:loss_cost_multiplier              = "999"

    gsn_master:PREMIUM                           = l_premium
    if sfpmaster:trans_code one of 10,14 then
        begin
        gsn_master:save_current_premium          = l_premium
        end
    else
        begin
        gsn_master:save_current_premium          = l_save_premium
        end

    gsn_master:LIMIT[1]                          = l_limit[1]
    gsn_master:LIMIT[2]                          = l_limit[2]
    gsn_master:LIMIT[3]                          = l_limit[3]
    gsn_master:LIMIT[4]                          = l_limit[4]
    gsn_master:LIMIT[5]                          = l_limit[5]
    gsn_master:LIMIT[6]                          = l_limit[6]
    gsn_master:LIMIT[7]                          = l_limit[7]
    gsn_master:LIMIT[8]                          = l_limit[8]
    gsn_master:LIMIT[9]                          = l_limit[9]
    gsn_master:LIMIT[10]                         = l_limit[10]
    gsn_master:LIMIT[11]                         = l_limit[11]
    gsn_master:LIMIT[12]                         = l_limit[12]
    gsn_master:LIMIT[13]                         = l_limit[13]
    gsn_master:LIMIT[14]                         = l_limit[14]
    gsn_master:LIMIT[15]                         = l_limit[15]
    gsn_master:LIMIT[16]                         = l_limit[16]
    gsn_master:LIMIT[17]                         = l_limit[17]
    gsn_master:LIMIT[18]                         = l_limit[18]
    gsn_master:LIMIT[19]                         = l_limit[19]
    gsn_master:LIMIT[20]                         = l_limit[20]
    gsn_master:LIMIT[21]                         = l_limit[21]
    gsn_master:LIMIT[22]                         = l_limit[22]
    gsn_master:LIMIT[23]                         = l_limit[23]
    gsn_master:LIMIT[24]                         = l_limit[24]
    gsn_master:LIMIT[25]                         = l_limit[25]
    gsn_master:LIMIT[26]                         = l_limit[26]
    gsn_master:LIMIT[27]                         = l_limit[27]
    gsn_master:LIMIT[28]                         = l_limit[28]
    gsn_master:LIMIT[29]                         = l_limit[29]
    gsn_master:LIMIT[30]                         = l_limit[30]
    gsn_master:FORM_CODE                         = l_form
    gsn_master:DEDUCTIBLE_BASIS                  = "DOLLARS"
    gsn_master:line_of_business                  = l_line_of_business
    gsn_master:AGENCY_COMMISSION                 = 25
    gsn_master:attachment_point                  = 0
    gsn_master:trans_date                        = sfpmaster:PREMIUM_TRANS_DATE
    do check_prior_policy_no
    gsn_master:prior_policy_number               = l_prior_policy_number
    gsn_master:prior_policy_number_eff_date      = l_prior_policy_eff_date
    gsn_master:prior_policy_number_prefix        = l_prior_policy_number_prefix
    gsn_master:res_condo                         = l_res_condo
    gsn_master:annual_premium                    = l_annual_premium
    if l_lob_subline one of "81","85" then
      {
        if trun(l_exposure_base) <> "" then
          {
            gsn_master:exposure_base                 = l_exposure_base
          }
        else
          {
            gsn_master:exposure_base                = "N/A"
          }
      }
    else
      {
        gsn_master:exposure_base                = "N/A"
      }
    end

END

procedure gsn_master_add_boiler
BEGIN
string l_auto_state[2];

--l_annual_premium = l_premium
if l_end_sequence > 0 then
  begin
    do check_for_endorsement

/*    if sfpmaster:trans_code not one of 11,16 then
      begin
        do write_difference_in_premium
      end  */
  end

if sfpname:original_eff_date <= 01.25.2016 and
   sfpname:eff_date >= 01.25.2016 then
    begin
    access sfpname_alias, set sfpname_alias:policy_no    = sfpname:policy_no,
                              sfpname_alias:pol_year     = sfpname:pol_year,
                              sfpname_alias:end_sequence = 0, exact

    if sfpname_alias:policy_no    = sfpname:policy_no and
       sfpname_alias:pol_year     = sfpname:pol_year and
       sfpname_alias:end_sequence = 0 then
        begin
        if sfpname_alias:trans_code one of 10 then
            begin
            l_policy_suffix = 0
            end
        else
            begin
            l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
            end
        end
    else
        begin
        l_policy_suffix = year(sfpname:eff_date) - year(sfsdefault:starting_date)
        end
    end
else
    begin
    l_policy_suffix = 0
    end

access sfscompany, set sfscompany:company_id = l_company_id, exact

access sfsline2, set sfsline2:Company_id       = l_company_id,
                     sfsline2:line_of_business = l_line_of_business,
                     sfsline2:lob_subline      = l_lob_subline , exact

add gsn_master
    begin
    gsn_master:POLICY_NO                         = l_policy_no
    gsn_master:POL_YEAR                          = l_pol_year
    gsn_master:END_SEQUENCE                      = l_end_sequence
    gsn_master:PREM_NO                           = l_prem_no
    gsn_master:BUILD_NO                          = l_build_No
    gsn_master:lob_subline                       = l_lob_subline
    gsn_master:line_of_business                  = l_Line_of_business
    gsn_master:line_type                         = l_line_type
    gsn_master:SUB_CODE                          = l_sub_code
    gsn_master:SEQUENCE_NUMBER                   = l_END_SEQUENCE
    gsn_master:policy_suffix                     = str(l_policy_suffix,"999")
    gsn_master:ACCOUNTING_DATE                   = l_ending_date
    gsn_master:eff_date                          = sfpname:eff_date
    gsn_master:POLICY_EFF_DATE                   = sfpname:eff_date
    gsn_master:POLICY_EXP_DATE                   = sfpname:exp_date
    gsn_master:trans_exp_date                    = sfpmaster:trans_exp
    gsn_master:POLICY_INDICATOR                  = L_POLICY_INDICATOR
    gsn_master:TRANS_EFF_DATE                    = sfpmaster:trans_eff
    gsn_master:trans_code                        = sfpmaster:trans_code
    gsn_master:iso_CF_year_of_construction       = l_construction_year
    gsn_master:iso_bop_year_of_construction      = "N/A"
    gsn_master:payment_plan                      = l_payment_plan
     if l_retro_date = 00.00.0000 then
    {
       l_claims_made = "OC"
    }
    else
    {
       l_claims_made = "CM"
    }

    l_insured_name = ""
    I_rev_name = ""
    i_name = sfpname:name[1]
    include "sfsrevname7.pro"
    l_insured_name = I_rev_name
    if trun(sfpname:name[2]) <> "" then
        begin
        i_name = sfpname:name[2]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    if trun(sfpname:name[3]) <> "" then
        begin
        i_name = sfpname:name[3]
        include "sfsrevname7.pro"
        l_insured_name = trun(l_insured_name) + " " + I_rev_name
        end
    gsn_master:INSURED_NAME                      = l_insured_name

    gsn_master:INSURED_ADDRESS                   = trun(sfpname:address[1]) + " " + trun(sfpname:address[2]) + " " + trun(sfpname:address[3])
    gsn_master:INSURED_CITY                      = sfpname:city
    gsn_master:INSURED_STATE                     = sfpname:str_state
    gsn_master:INSURED_ZIP[1,5]                  = sfpname:str_zipCode[1,5]
    gsn_master:SIC_CODE                          = l_iso_sic_code
    gsn_master:COMPANY_NAME                      = trun(sfscompany:name[1]) + " " + sfscompany:name[2]
    gsn_master:COMPANY_CODE                      = "GSN"             --need claification from ani
    gsn_master:FAC_INDICATOR                     = L_FAC_INDICATOR
    gsn_master:SITE_ADDRESS                      = Trun(sfplocation:address) + trun(SFPLOCATION:ADDRESS1[1]) + " " + trun(SFPLOCATION:ADDRESS1[2]) + " " + TRUN(SFPLOCATION:ADDRESS1[3])
    gsn_master:SITE_CITY                         = SFPLOCATION:CITY
    gsn_master:SITE_STATE                        = SFPLOCATiON:str_STATE
    gsn_master:SITE_ZIP                          = SFPLOCATION:str_ZIPCODE[1,5]
    gsn_master:SITE_COUNTY                       = L_COUNTY_STR
    gsn_master:SUBLINE_CODE                      = l_lob_subline

    gsn_master:TERRITORY_CODE_ISO                = "999" -- gsn will convert from city, state and zip
    gsn_master:TYPE_OF_POLICY                    = str(l_type_of_policy)
    gsn_master:ANNUAL_STATEMENT_LOB              = sfsline2:ISO_STMT_LOB
    gsn_master:iso_subline_code                  = str(sfsline2:ISO_SUBLINE)
    gsn_master:CLASS_CODE                        = l_class_code
    gsn_master:iso_class_code                    = l_iso_class_code
    gsn_master:ISOCOVERAGECODE                   = "01"
    gsn_master:RATINGIDCODE                      = "9"
    gsn_master:typeofequipmentcode               = "98"
    gsn_master:DEDUCTIBLE                        = val(l_deductible)
    gsn_master:COVERAGE_EXPOSURE                 = str(l_limit[1] + l_limit[2])
    gsn_master:TERRORISM_COVERAGE_CODE           = "2"
    gsn_master:iso_mold_coverage_code            = "8"
    gsn_master:total_rating_mod_factor           = "1"
    gsn_master:loss_cost_multiplier              = "999"
    gsn_master:CLAIMS_MADE_POLICY_INDICATOR      = "NA"
    gsn_master:PREMIUM                           = l_premium
    if sfpmaster:trans_code one of 10,14 then
        begin
        gsn_master:save_current_premium          = l_premium
        end
    else
        begin
        gsn_master:save_current_premium          = l_save_premium
        end

    gsn_master:LIMIT[1]                          = l_limit[1]
    gsn_master:LIMIT[2]                          = l_limit[2]
    gsn_master:LIMIT[3]                          = l_limit[3]
    gsn_master:LIMIT[4]                          = l_limit[4]
    gsn_master:LIMIT[5]                          = l_limit[5]
    gsn_master:LIMIT[6]                          = l_limit[6]
    gsn_master:LIMIT[7]                          = l_limit[7]
    gsn_master:LIMIT[8]                          = l_limit[8]
    gsn_master:LIMIT[9]                          = l_limit[9]
    gsn_master:LIMIT[10]                         = l_limit[10]
    gsn_master:LIMIT[11]                         = l_limit[11]
    gsn_master:LIMIT[12]                         = l_limit[12]
    gsn_master:LIMIT[13]                         = l_limit[13]
    gsn_master:LIMIT[14]                         = l_limit[14]
    gsn_master:LIMIT[15]                         = l_limit[15]
    gsn_master:LIMIT[16]                         = l_limit[16]
    gsn_master:LIMIT[17]                         = l_limit[17]
    gsn_master:LIMIT[18]                         = l_limit[18]
    gsn_master:LIMIT[19]                         = l_limit[19]
    gsn_master:LIMIT[20]                         = l_limit[20]
    gsn_master:LIMIT[21]                         = l_limit[21]
    gsn_master:LIMIT[22]                         = l_limit[22]
    gsn_master:LIMIT[23]                         = l_limit[23]
    gsn_master:LIMIT[24]                         = l_limit[24]
    gsn_master:LIMIT[25]                         = l_limit[25]
    gsn_master:LIMIT[26]                         = l_limit[26]
    gsn_master:LIMIT[27]                         = l_limit[27]
    gsn_master:LIMIT[28]                         = l_limit[28]
    gsn_master:LIMIT[29]                         = l_limit[29]
    gsn_master:LIMIT[30]                         = l_limit[30]
    gsn_master:FORM_CODE                         = l_form
    gsn_master:DEDUCTIBLE_BASIS                  = "DOLLARS"
    gsn_master:line_of_business                  = l_line_of_business
    gsn_master:AGENCY_COMMISSION                 = 25
    gsn_master:attachment_point                  = 0
    gsn_master:trans_date                        = sfpmaster:PREMIUM_TRANS_DATE
    do check_prior_policy_no
    gsn_master:prior_policy_number               = l_prior_policy_number
    gsn_master:prior_policy_number_eff_date      = l_prior_policy_eff_date
    gsn_master:prior_policy_number_prefix        = l_prior_policy_number_prefix
    gsn_master:res_condo                         = l_res_condo
    gsn_master:annual_premium                    = l_annual_premium
    if l_lob_subline one of "81","85" then
      {
        if trun(l_exposure_base) <> "" then
          {
            gsn_master:exposure_base                 = l_exposure_base
          }
        else
          {
            gsn_master:exposure_base                = "N/A"
          }
      }
    else
      {
        gsn_master:exposure_base                = "N/A"
      }

   end

END

procedure check_prior_policy_no
BEGIN
local file sfpname_prior_term = alias for sfpname;
local file sfpname_current_term = alias for sfpname;
local file sfpname_previous_policy_term = alias for sfpname;

unsigned ascii number l_prior_year[4],
                      l_prior_end_sequence[4] = 0,
                      l_current_end_sequence[4] = 0;

l_prior_policy_number_prefix = ""

l_prior_year = sfpname:pol_year - 1

access sfpname_current_term, set sfpname_current_term:policy_no     = sfpname:policy_no ,
                                 sfpname_current_term:pol_year      = sfpname:pol_year,
                                 sfpname_current_term:end_sequence  = l_current_end_sequence, exact

access sfpname_prior_term, set sfpname_prior_term:policy_no     = sfpname:policy_no ,
                               sfpname_prior_term:pol_year      = l_prior_year,
                               sfpname_prior_term:end_sequence  = l_prior_end_sequence, exact

access sfpname_previous_policy_term, set sfpname_previous_policy_term:policy_no     = sfpname:previous_policy_no ,
                                         sfpname_previous_policy_term:pol_year      = l_prior_year,
                                         sfpname_previous_policy_term:end_sequence  = l_prior_end_sequence, exact

if sfpname_current_term:trans_code one of 10 then
    begin
    l_prior_policy_number   = 0
    l_prior_policy_eff_date = 01.01.1900
    end
else
if sfpname_prior_term:policy_no     = sfpname:policy_no and
   sfpname_prior_term:pol_year      = l_prior_year and
   sfpname_prior_term:end_sequence  = l_prior_end_sequence then
    begin
    l_prior_policy_number        = sfpname:policy_no
    l_prior_policy_eff_date      = sfpname_prior_term:eff_date
    l_prior_policy_number_prefix = sfsline:alpha
    end
else
if sfpname_previous_policy_term:policy_no     = sfpname:previous_policy_no and
   sfpname_previous_policy_term:pol_year      = l_prior_year and
   sfpname_previous_policy_term:end_sequence  = l_prior_end_sequence then
    begin
    access sfsline_alias, set sfsline_alias:Company_id       = sfpname_previous_policy_term:company_id,
                              sfsline_alias:line_of_business = sfpname_previous_policy_term:line_of_business,
                              sfsline_alias:lob_subline      = "00" , exact

    l_prior_policy_number        = sfpname:previous_policy_no
    l_prior_policy_eff_date      = sfpname_previous_policy_term:eff_date
    l_prior_policy_number_prefix = sfsline_alias:alpha
    end
else
    begin
    l_prior_policy_number   = 0   --default it to current policy
    l_prior_policy_eff_date = 01.01.1900
    end

END

wdate function get_previous_pol_eff_date()
BEGIN
local file sfpname_previous_policy = alias for sfpname;
local file sfpname_current_term = alias for sfpname;
wdate l_prior_policy_eff_date;
unsigned ascii number l_prior_year[4];
unsigned ascii number l_prior_end_sequence[4] = 0;
unsigned ascii number l_current_term_end_sequence[4] = 0;

access sfpcurrent, set sfpcurrent:policy_no    = sfpname:previous_policy_no, exact

if sfpname:previous_policy_no <> 0 then
    begin
    l_prior_year = sfpcurrent:pol_year - 1

    access sfpname_previous_policy, set sfpname_previous_policy:policy_no     = sfppoint:policy_no ,
                                        sfpname_previous_policy:pol_year      = l_prior_year,
                                        sfpname_previous_policy:end_sequence  = l_prior_end_sequence, exact

    if sfpname_previous_policy:policy_no     = sfppoint:policy_no and
       sfpname_previous_policy:pol_year      = l_prior_year  and
       sfpname_previous_policy:end_sequence  = l_prior_end_sequence then
        begin
        l_prior_policy_eff_date = sfpname_previous_policy:eff_date
        end
    else
        begin
        l_prior_policy_eff_date = 01.01.1900
        end
    end
else
if sfpname:previous_policy_no = 0 then
    begin
    access sfpname_current_term, set sfpname_current_term:policy_no     = sfpname:policy_no ,
                                     sfpname_current_term:pol_year      = sfpname:pol_year,
                                     sfpname_current_term:end_sequence  = l_current_term_end_sequence, exact

    if sfpname_current_term:policy_no    = sfpname:policy_no and
       sfpname_current_term:pol_year     = sfpname:pol_year and
       sfpname_current_term:end_sequence = l_current_term_end_sequence then
        begin
        if sfpname_current_term:trans_code one of 10 then
            begin
            l_prior_policy_eff_date = 01.01.1900
            end
        else
            begin
            l_prior_policy_eff_date = sfpname_current_term:eff_date
            end
        end
   end

if l_prior_policy_eff_date <= 01.25.2016 then
    begin
    l_prior_policy_eff_date = 01.01.1900
    end

return l_prior_policy_eff_date
END

Procedure check_for_claims_made
{
   l_retro_date = 00.00.0000

   access cppendorse, set cppendorse:policy_no    = l_policy_no,
                          cppendorse:pol_year     = l_pol_year,
                          cppendorse:end_sequence = l_end_sequence,
                          cppendorse:prem_no      = l_prem_no,
                          cppendorse:build_no     = l_build_no, generic

   while cppendorse:policy_no         = l_policy_no and
         cppendorse:pol_year          = l_pol_year and
         cppendorse:end_sequence      = l_end_sequence and
         cppendorse:prem_no           = l_prem_no and
         cppendorse:build_no          = l_build_no
         {
            if cppendorse:code one of "MCL426", "MCL428" then
            {
               l_retro_date = cppendorse:eff_date
            }
         next cppendorse
         }
}
End
